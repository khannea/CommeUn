{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khanh\\\\workspace\\\\commeun\\\\frontend\\\\src\\\\views\\\\TopicView.js\";\nimport React, { Component } from \"react\";\nimport Post from \"../components/Post\";\nimport AddPost from \"../components/AddPost\";\nimport EditPost from \"../components/EditPost\";\nimport \"./TopicView.css\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nclass TopicView extends Component {\n  constructor(_id) {\n    super(_id);\n    this.state = {\n      data: null,\n      user: cookies.get(\"user\"),\n      edit: false,\n      editId: null\n    };\n\n    this.getDataFromDb = () => {\n      // console.log(\"Je me refresh\");\n      // let url = \"http://localhost:4000/topics/\" + this.id;\n      // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\n      let url = \"/api/topics/\" + this.id;\n      let req = new Request(url, {\n        method: \"GET\",\n        cache: \"default\",\n        credentials: \"include\"\n      });\n      fetch(req).then(res => {\n        // console.log(res)\n        if (res.status === 401) {\n          console.log(\"TopicView n'a pas recu les topics.\");\n        } else {\n          // console.log(\"TopicView  a bien recu les topics.\");\n          return res.json();\n        }\n      }).then(data => {\n        // console.log(data);\n        this.setState({\n          data: data\n        });\n      });\n    };\n\n    this.goOnEdit = id => {\n      this.setState({\n        edit: true,\n        editId: id\n      });\n    };\n\n    this.goOncancelEdit = () => {\n      this.setState({\n        edit: false,\n        editId: null\n      });\n    };\n\n    this.compareValues = (key, order = \"asc\") => {\n      return function innerSort(a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n          // property doesn't exist on either object\n          return 0;\n        }\n\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n        let comparison = 0;\n\n        if (varA > varB) {\n          comparison = 1;\n        } else if (varA < varB) {\n          comparison = -1;\n        }\n\n        return order === \"desc\" ? comparison * -1 : comparison;\n      };\n    };\n\n    this.id = _id.location.pathname.split(\"/\")[2];\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  render() {\n    let myid = this.id;\n    let data = this.state.data;\n\n    if (data) {\n      data.sort(this.compareValues(\"likes\", \"desc\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"topicview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posts_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, data && data.map(({\n      user,\n      texte,\n      date,\n      id,\n      likes,\n      dislikes\n    }, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: user,\n      texte: texte,\n      date: date,\n      key: index,\n      id: id,\n      likes: likes,\n      dislikes: dislikes,\n      refresh: this.getDataFromDb,\n      editfunction: this.goOnEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))), !this.state.edit && React.createElement(\"div\", {\n      className: \"border-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(AddPost, {\n      id: myid,\n      refresh: this.getDataFromDb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), this.state.edit && React.createElement(\"div\", {\n      className: \"border-top border-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(EditPost, {\n      id: this.state.editId,\n      cancelEdit: this.goOncancelEdit,\n      refresh: this.getDataFromDb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TopicView;","map":{"version":3,"sources":["C:/Users/khanh/workspace/commeun/frontend/src/views/TopicView.js"],"names":["React","Component","Post","AddPost","EditPost","Cookies","cookies","TopicView","constructor","id","state","data","user","get","edit","editId","getDataFromDb","url","req","Request","method","cache","credentials","fetch","then","res","status","console","log","json","setState","goOnEdit","goOncancelEdit","compareValues","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","location","pathname","split","componentDidMount","render","myid","sort","map","texte","date","likes","dislikes","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Post from \"../components/Post\";\r\nimport AddPost from \"../components/AddPost\";\r\nimport EditPost from \"../components/EditPost\";\r\nimport \"./TopicView.css\";\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass TopicView extends Component {\r\n  state = {\r\n    data: null,\r\n    user: cookies.get(\"user\"),\r\n    edit: false,\r\n    editId: null\r\n  };\r\n  constructor(id) {\r\n    super(id);\r\n    this.id = id.location.pathname.split(\"/\")[2];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataFromDb();\r\n  }\r\n\r\n  getDataFromDb = () => {\r\n    // console.log(\"Je me refresh\");\r\n    // let url = \"http://localhost:4000/topics/\" + this.id;\r\n    // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\r\n    let url = \"/api/topics/\" + this.id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      cache: \"default\",\r\n      credentials: \"include\"\r\n    });\r\n    fetch(req)\r\n      .then(res => {\r\n        // console.log(res)\r\n        if (res.status === 401) {\r\n          console.log(\"TopicView n'a pas recu les topics.\");\r\n        } else {\r\n          // console.log(\"TopicView  a bien recu les topics.\");\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        // console.log(data);\r\n        this.setState({\r\n          data: data\r\n        });\r\n      });\r\n  };\r\n\r\n  goOnEdit = id => {\r\n    this.setState({\r\n      edit: true,\r\n      editId: id\r\n    });\r\n  };\r\n\r\n  goOncancelEdit = () => {\r\n    this.setState({\r\n      edit: false,\r\n      editId: null\r\n    });\r\n  };\r\n\r\n  compareValues = (key, order = \"asc\") => {\r\n    return function innerSort(a, b) {\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n        // property doesn't exist on either object\r\n        return 0;\r\n      }\r\n\r\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n\r\n      let comparison = 0;\r\n      if (varA > varB) {\r\n        comparison = 1;\r\n      } else if (varA < varB) {\r\n        comparison = -1;\r\n      }\r\n      return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n  };\r\n\r\n  render() {\r\n    let myid = this.id;\r\n    let { data } = this.state;\r\n\r\n    if (data) {\r\n      data.sort(this.compareValues(\"likes\", \"desc\"));\r\n    }\r\n    return (\r\n      <div className=\"topicview\">\r\n        <div className=\"posts_box\">\r\n          {/* <div className=\"posts_box mx-auto\"> */}\r\n          {data &&\r\n            data.map(({ user, texte, date, id, likes, dislikes }, index) => (\r\n              <div key={index}>\r\n                <Post\r\n                  user={user}\r\n                  texte={texte}\r\n                  date={date}\r\n                  key={index}\r\n                  id={id}\r\n                  likes={likes}\r\n                  dislikes={dislikes}\r\n                  refresh={this.getDataFromDb}\r\n                  editfunction={this.goOnEdit}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n        {!this.state.edit && (\r\n          <div className=\"border-top\">\r\n            <AddPost id={myid} refresh={this.getDataFromDb} />\r\n          </div>\r\n        )}\r\n        {this.state.edit && (\r\n          <div className=\"border-top border-light\">\r\n            <EditPost\r\n              id={this.state.editId}\r\n              cancelEdit={this.goOncancelEdit}\r\n              refresh={this.getDataFromDb}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopicView;\r\n"]},"metadata":{},"sourceType":"module"}