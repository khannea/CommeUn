{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nodeToScrollState;\n\nfunction nodeToScrollState(_ref) {\n  var scrollTop = _ref.scrollTop,\n      scrollHeight = _ref.scrollHeight,\n      offsetHeight = _ref.offsetHeight,\n      children = _ref.children; // Interpreting native values\n\n  var start = 0;\n  var viewHeight = offsetHeight;\n  var end = scrollHeight - viewHeight; // current position\n\n  var position = scrollTop;\n  var positionRatio = scrollTop / end; // Conditionals\n\n  var onStart = position <= start;\n  var onEnd = position >= end;\n  var onMiddle = !onStart && !onEnd; // let scrolling = true / false\n\n  var positionRelativeRatio = Math.abs(start - scrollTop / offsetHeight);\n  return {\n    position: position,\n    positionRatio: positionRatio,\n    // positionIndex,\n    positionRelativeRatio: positionRelativeRatio,\n    start: start,\n    end: end,\n    viewHeight: viewHeight,\n    scrollHeight: scrollHeight,\n    onStart: onStart,\n    onMiddle: onMiddle,\n    onEnd: onEnd\n  };\n}","map":{"version":3,"sources":["C:/Users/khanh/workspace/Code/commeun/frontend/node_modules/react-skroll/lib/nodeToScrollState.js"],"names":["Object","defineProperty","exports","value","default","nodeToScrollState","_ref","scrollTop","scrollHeight","offsetHeight","children","start","viewHeight","end","position","positionRatio","onStart","onEnd","onMiddle","positionRelativeRatio","Math","abs"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,iBAAlB;;AAEA,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,YAAY,GAAGF,IAAI,CAACE,YADxB;AAAA,MAEIC,YAAY,GAAGH,IAAI,CAACG,YAFxB;AAAA,MAGIC,QAAQ,GAAGJ,IAAI,CAACI,QAHpB,CAD+B,CAK/B;;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,UAAU,GAAGH,YAAjB;AACA,MAAII,GAAG,GAAGL,YAAY,GAAGI,UAAzB,CAR+B,CAQM;;AAErC,MAAIE,QAAQ,GAAGP,SAAf;AACA,MAAIQ,aAAa,GAAGR,SAAS,GAAGM,GAAhC,CAX+B,CAWM;;AAErC,MAAIG,OAAO,GAAGF,QAAQ,IAAIH,KAA1B;AACA,MAAIM,KAAK,GAAGH,QAAQ,IAAID,GAAxB;AACA,MAAIK,QAAQ,GAAG,CAACF,OAAD,IAAY,CAACC,KAA5B,CAf+B,CAeI;;AAEnC,MAAIE,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAASV,KAAK,GAAGJ,SAAS,GAAGE,YAA7B,CAA5B;AACA,SAAO;AACLK,IAAAA,QAAQ,EAAEA,QADL;AAELC,IAAAA,aAAa,EAAEA,aAFV;AAGL;AACAI,IAAAA,qBAAqB,EAAEA,qBAJlB;AAKLR,IAAAA,KAAK,EAAEA,KALF;AAMLE,IAAAA,GAAG,EAAEA,GANA;AAOLD,IAAAA,UAAU,EAAEA,UAPP;AAQLJ,IAAAA,YAAY,EAAEA,YART;AASLQ,IAAAA,OAAO,EAAEA,OATJ;AAULE,IAAAA,QAAQ,EAAEA,QAVL;AAWLD,IAAAA,KAAK,EAAEA;AAXF,GAAP;AAaD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nodeToScrollState;\n\nfunction nodeToScrollState(_ref) {\n  var scrollTop = _ref.scrollTop,\n      scrollHeight = _ref.scrollHeight,\n      offsetHeight = _ref.offsetHeight,\n      children = _ref.children;\n  // Interpreting native values\n  var start = 0;\n  var viewHeight = offsetHeight;\n  var end = scrollHeight - viewHeight; // current position\n\n  var position = scrollTop;\n  var positionRatio = scrollTop / end; // Conditionals\n\n  var onStart = position <= start;\n  var onEnd = position >= end;\n  var onMiddle = !onStart && !onEnd; // let scrolling = true / false\n\n  var positionRelativeRatio = Math.abs(start - scrollTop / offsetHeight);\n  return {\n    position: position,\n    positionRatio: positionRatio,\n    // positionIndex,\n    positionRelativeRatio: positionRelativeRatio,\n    start: start,\n    end: end,\n    viewHeight: viewHeight,\n    scrollHeight: scrollHeight,\n    onStart: onStart,\n    onMiddle: onMiddle,\n    onEnd: onEnd\n  };\n}"]},"metadata":{},"sourceType":"script"}