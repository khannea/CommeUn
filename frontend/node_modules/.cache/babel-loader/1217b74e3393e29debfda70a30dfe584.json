{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khanh\\\\workspace\\\\Code\\\\commeun\\\\frontend\\\\src\\\\components\\\\Post.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport DefaultImg from \"./default-user-avatar.png\";\nimport DeletePost from \"./DeletePost\";\nimport PostView from \"../views/PostView\";\nimport \"./Post.css\";\nimport Cookies from \"universal-cookie\";\nimport Button from \"@material-ui/core/Button\";\nimport { Card, CardHeader, CardContent, Avatar, Grid } from \"@material-ui/core\";\nimport EditPost from \"./EditPost\";\nconst cookies = new Cookies();\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: false,\n      edit: false\n    };\n\n    this.editFunction = () => {\n      this.setState({\n        edit: true\n      });\n    };\n\n    this.cancelEdit = () => {\n      this.setState({\n        edit: false\n      }, this.props.refresh());\n    };\n\n    this.onClickLike = () => {\n      fetch(\"/api/likepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de like\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.onClickDislike = () => {\n      fetch(\"/api/dislikepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de dislike\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.renderLikeDislike = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"banniere\",\n        src: require(\"./like.png\"),\n        width: \"20px\",\n        height: \"20px\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.onClickLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\xA0\", this.props.likes)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"banniere\",\n        src: require(\"./dislike.png\"),\n        width: \"20px\",\n        height: \"20px\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.onClickDislike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\xA0\", this.props.dislikes)));\n    };\n\n    this.user = cookies.get(\"user\");\n  }\n\n  render() {\n    let texte = this.props.texte.split(\"\\n\").map((item, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, item));\n    let success = false;\n\n    if (this.props.likes > this.props.dislikes) {\n      success = true;\n    }\n\n    return React.createElement(Card, {\n      className: \"mx-4 my-2\",\n      elevation: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"border-right col1st  col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Col, {\n      id: \"like_dislike_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.renderLikeDislike()))), React.createElement(Col, {\n      id: \"post_content_wrapper\",\n      className: \"border-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      titleTypographyProps: {\n        variant: \"h6\"\n      },\n      title: this.props.user + \" \" + this.props.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), !this.state.edit && texte, !this.state.edit && this.props.user === localStorage.getItem(\"pseudo\") && React.createElement(Col, {\n      id: \"delete_wrapper\",\n      className: \"p-2 border-dark delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(DeletePost, {\n      id: this.props.id,\n      refresh: this.props.refresh,\n      editFunction: this.editFunction,\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), this.state.edit && React.createElement(EditPost, {\n      id: this.props.id,\n      cancelEdit: this.cancelEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(PostView, {\n      origin_id: this.props.origin_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/khanh/workspace/Code/commeun/frontend/src/components/Post.jsx"],"names":["React","Component","Row","Col","Image","DefaultImg","DeletePost","PostView","Cookies","Button","Card","CardHeader","CardContent","Avatar","Grid","EditPost","cookies","Post","constructor","props","state","answer","edit","editFunction","setState","cancelEdit","refresh","onClickLike","fetch","method","body","JSON","stringify","msgId","id","user","credentials","headers","then","response","status","console","log","catch","error","onClickDislike","renderLikeDislike","require","cursor","likes","dislikes","get","render","texte","split","map","item","i","success","variant","date","localStorage","getItem","origin_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport DefaultImg from \"./default-user-avatar.png\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport PostView from \"../views/PostView\";\r\nimport \"./Post.css\";\r\nimport Cookies from \"universal-cookie\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Card, CardHeader, CardContent, Avatar, Grid } from \"@material-ui/core\";\r\n\r\nimport EditPost from \"./EditPost\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    answer: false,\r\n    edit: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.user = cookies.get(\"user\");\r\n  }\r\n\r\n  editFunction = () => {\r\n    this.setState({ edit: true });\r\n  };\r\n\r\n  cancelEdit = () => {\r\n    this.setState({ edit: false }, this.props.refresh());\r\n  };\r\n\r\n  onClickLike = () => {\r\n    fetch(\"/api/likepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de like\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  onClickDislike = () => {\r\n    fetch(\"/api/dislikepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de dislike\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  renderLikeDislike = () => {\r\n    return (\r\n      <div>\r\n        <Col>\r\n          <Image\r\n            className=\"banniere\"\r\n            src={require(\"./like.png\")}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={this.onClickLike}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <b>&nbsp;{this.props.likes}</b>\r\n        </Col>\r\n        <Col>\r\n          <Image\r\n            className=\"banniere\"\r\n            src={require(\"./dislike.png\")}\r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={this.onClickDislike}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <b>&nbsp;{this.props.dislikes}</b>\r\n        </Col>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let texte = this.props.texte\r\n      .split(\"\\n\")\r\n      .map((item, i) => <p key={i}>{item}</p>);\r\n    let success = false;\r\n\r\n    if (this.props.likes > this.props.dislikes) {\r\n      success = true;\r\n    }\r\n\r\n    return (\r\n      <Card className=\"mx-4 my-2\" elevation=\"0\">\r\n        <CardContent>\r\n          <Row>\r\n            {/* <Col id=\"avatar_wrapper\" className=\"col-auto\">\r\n              <Avatar src=\"/broken-image.jpg\" />\r\n            </Col> */}\r\n            <Col className=\"border-right col1st  col-auto\">\r\n              <Row className=\"h-100\">\r\n                <Col id=\"like_dislike_wrapper\">{this.renderLikeDislike()}</Col>\r\n              </Row>\r\n            </Col>\r\n            <Col id=\"post_content_wrapper\" className=\"border-dark\">\r\n              <CardHeader\r\n                titleTypographyProps={{ variant: \"h6\" }}\r\n                title={this.props.user + \" \" + this.props.date}\r\n              />\r\n              {!this.state.edit && texte}\r\n              {!this.state.edit &&\r\n                this.props.user === localStorage.getItem(\"pseudo\") && (\r\n                  <Col id=\"delete_wrapper\" className=\"p-2 border-dark delete\">\r\n                    <DeletePost\r\n                      id={this.props.id}\r\n                      refresh={this.props.refresh}\r\n                      editFunction={this.editFunction}\r\n                      width=\"50%\"\r\n                    />\r\n                  </Col>\r\n                )}\r\n              {this.state.edit && (\r\n                <EditPost id={this.props.id} cancelEdit={this.cancelEdit} />\r\n              )}\r\n              <PostView origin_id={this.props.origin_id} />\r\n            </Col>\r\n          </Row>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}