{"ast":null,"code":"/*!\n * reveal.js\n * http://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2020 Hakim El Hattab, http://hakim.se\n */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function () {\n      root.Reveal = factory();\n      return root.Reveal;\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS.\n    module.exports = factory();\n  } else {\n    // Browser globals.\n    root.Reveal = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  var Reveal; // The reveal.js version\n\n  var VERSION = '3.9.2';\n  var SLIDES_SELECTOR = '.slides section',\n      HORIZONTAL_SLIDES_SELECTOR = '.slides>section',\n      VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section',\n      HOME_SLIDE_SELECTOR = '.slides>section:first-of-type',\n      UA = navigator.userAgent,\n      // Methods that may not be invoked via the postMessage API\n  POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/,\n      // Configuration defaults, can be overridden at initialization time\n  config = {\n    // The \"normal\" size of the presentation, aspect ratio will be preserved\n    // when the presentation is scaled to fit different resolutions\n    width: 960,\n    height: 700,\n    // Factor of the display size that should remain empty around the content\n    margin: 0.04,\n    // Bounds for smallest/largest possible scale to apply to content\n    minScale: 0.2,\n    maxScale: 2.0,\n    // Display presentation control arrows\n    controls: true,\n    // Help the user learn the controls by providing hints, for example by\n    // bouncing the down arrow when they first encounter a vertical slide\n    controlsTutorial: true,\n    // Determines where controls appear, \"edges\" or \"bottom-right\"\n    controlsLayout: 'bottom-right',\n    // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n    // or \"visible\"\n    controlsBackArrows: 'faded',\n    // Display a presentation progress bar\n    progress: true,\n    // Display the page number of the current slide\n    // - true:    Show slide number\n    // - false:   Hide slide number\n    //\n    // Can optionally be set as a string that specifies the number formatting:\n    // - \"h.v\":\t  Horizontal . vertical slide number (default)\n    // - \"h/v\":\t  Horizontal / vertical slide number\n    // - \"c\":\t  Flattened slide number\n    // - \"c/t\":\t  Flattened slide number / total slides\n    //\n    // Alternatively, you can provide a function that returns the slide\n    // number for the current slide. The function should take in a slide\n    // object and return an array with one string [slideNumber] or\n    // three strings [n1,delimiter,n2]. See #formatSlideNumber().\n    slideNumber: false,\n    // Can be used to limit the contexts in which the slide number appears\n    // - \"all\":      Always show the slide number\n    // - \"print\":    Only when printing to PDF\n    // - \"speaker\":  Only in the speaker view\n    showSlideNumber: 'all',\n    // Use 1 based indexing for # links to match slide number (default is zero\n    // based)\n    hashOneBasedIndex: false,\n    // Add the current slide number to the URL hash so that reloading the\n    // page/copying the URL will return you to the same slide\n    hash: false,\n    // Push each slide change to the browser history.  Implies `hash: true`\n    history: false,\n    // Enable keyboard shortcuts for navigation\n    keyboard: true,\n    // Optional function that blocks keyboard events when retuning false\n    keyboardCondition: null,\n    // Enable the slide overview mode\n    overview: true,\n    // Disables the default reveal.js slide layout so that you can use\n    // custom CSS layout\n    disableLayout: false,\n    // Vertical centering of slides\n    center: true,\n    // Enables touch navigation on devices with touch input\n    touch: true,\n    // Loop the presentation\n    loop: false,\n    // Change the presentation direction to be RTL\n    rtl: false,\n    // Changes the behavior of our navigation directions.\n    //\n    // \"default\"\n    // Left/right arrow keys step between horizontal slides, up/down\n    // arrow keys step between vertical slides. Space key steps through\n    // all slides (both horizontal and vertical).\n    //\n    // \"linear\"\n    // Removes the up/down arrows. Left/right arrows step through all\n    // slides (both horizontal and vertical).\n    //\n    // \"grid\"\n    // When this is enabled, stepping left/right from a vertical stack\n    // to an adjacent vertical stack will land you at the same vertical\n    // index.\n    //\n    // Consider a deck with six slides ordered in two vertical stacks:\n    // 1.1    2.1\n    // 1.2    2.2\n    // 1.3    2.3\n    //\n    // If you're on slide 1.3 and navigate right, you will normally move\n    // from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n    // from 1.3 -> 2.3.\n    navigationMode: 'default',\n    // Randomizes the order of slides each time the presentation loads\n    shuffle: false,\n    // Turns fragments on and off globally\n    fragments: true,\n    // Flags whether to include the current fragment in the URL,\n    // so that reloading brings you to the same fragment position\n    fragmentInURL: false,\n    // Flags if the presentation is running in an embedded mode,\n    // i.e. contained within a limited portion of the screen\n    embedded: false,\n    // Flags if we should show a help overlay when the question-mark\n    // key is pressed\n    help: true,\n    // Flags if it should be possible to pause the presentation (blackout)\n    pause: true,\n    // Flags if speaker notes should be visible to all viewers\n    showNotes: false,\n    // Global override for autolaying embedded media (video/audio/iframe)\n    // - null:   Media will only autoplay if data-autoplay is present\n    // - true:   All media will autoplay, regardless of individual setting\n    // - false:  No media will autoplay, regardless of individual setting\n    autoPlayMedia: null,\n    // Global override for preloading lazy-loaded iframes\n    // - null:   Iframes with data-src AND data-preload will be loaded when within\n    //           the viewDistance, iframes with only data-src will be loaded when visible\n    // - true:   All iframes with data-src will be loaded when within the viewDistance\n    // - false:  All iframes with data-src will be loaded only when visible\n    preloadIframes: null,\n    // Controls automatic progression to the next slide\n    // - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n    //           is present on the current slide or fragment\n    // - 1+:     All slides will progress automatically at the given interval\n    // - false:  No auto-sliding, even if data-autoslide is present\n    autoSlide: 0,\n    // Stop auto-sliding after user input\n    autoSlideStoppable: true,\n    // Use this method for navigation when auto-sliding (defaults to navigateNext)\n    autoSlideMethod: null,\n    // Specify the average time in seconds that you think you will spend\n    // presenting each slide. This is used to show a pacing timer in the\n    // speaker view\n    defaultTiming: null,\n    // Enable slide navigation via mouse wheel\n    mouseWheel: false,\n    // Apply a 3D roll to links on hover\n    rollingLinks: false,\n    // Hides the address bar on mobile devices\n    hideAddressBar: true,\n    // Opens links in an iframe preview overlay\n    // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n    // individually\n    previewLinks: false,\n    // Exposes the reveal.js API through window.postMessage\n    postMessage: true,\n    // Dispatches all reveal.js events to the parent window through postMessage\n    postMessageEvents: false,\n    // Focuses body when page changes visibility to ensure keyboard shortcuts work\n    focusBodyOnPageVisibilityChange: true,\n    // Transition style\n    transition: 'slide',\n    // none/fade/slide/convex/concave/zoom\n    // Transition speed\n    transitionSpeed: 'default',\n    // default/fast/slow\n    // Transition style for full page slide backgrounds\n    backgroundTransition: 'fade',\n    // none/fade/slide/convex/concave/zoom\n    // Parallax background image\n    parallaxBackgroundImage: '',\n    // CSS syntax, e.g. \"a.jpg\"\n    // Parallax background size\n    parallaxBackgroundSize: '',\n    // CSS syntax, e.g. \"3000px 2000px\"\n    // Parallax background repeat\n    parallaxBackgroundRepeat: '',\n    // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n    // Parallax background position\n    parallaxBackgroundPosition: '',\n    // CSS syntax, e.g. \"top left\"\n    // Amount of pixels to move the parallax background per slide step\n    parallaxBackgroundHorizontal: null,\n    parallaxBackgroundVertical: null,\n    // The maximum number of pages a single slide can expand onto when printing\n    // to PDF, unlimited by default\n    pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n    // Prints each fragment on a separate slide\n    pdfSeparateFragments: true,\n    // Offset used to reduce the height of content within exported PDF pages.\n    // This exists to account for environment differences based on how you\n    // print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n    // on precisely the total height of the document whereas in-browser\n    // printing has to end one pixel before.\n    pdfPageHeightOffset: -1,\n    // Number of slides away from the current that are visible\n    viewDistance: 3,\n    // Number of slides away from the current that are visible on mobile\n    // devices. It is advisable to set this to a lower number than\n    // viewDistance in order to save resources.\n    mobileViewDistance: 2,\n    // The display mode that will be used to show slides\n    display: 'block',\n    // Hide cursor if inactive\n    hideInactiveCursor: true,\n    // Time before the cursor is hidden (in ms)\n    hideCursorTime: 5000,\n    // Script dependencies to load\n    dependencies: []\n  },\n      // Flags if Reveal.initialize() has been called\n  initialized = false,\n      // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n  loaded = false,\n      // Flags if the overview mode is currently active\n  overview = false,\n      // Holds the dimensions of our overview slides, including margins\n  overviewSlideWidth = null,\n      overviewSlideHeight = null,\n      // The horizontal and vertical index of the currently active slide\n  indexh,\n      indexv,\n      // The previous and current slide HTML elements\n  previousSlide,\n      currentSlide,\n      previousBackground,\n      // Remember which directions that the user has navigated towards\n  hasNavigatedRight = false,\n      hasNavigatedDown = false,\n      // Slides may hold a data-state attribute which we pick up and apply\n  // as a class to the body. This list contains the combined state of\n  // all current slides.\n  state = [],\n      // The current scale of the presentation (see width/height config)\n  scale = 1,\n      // CSS transform that is currently applied to the slides container,\n  // split into two groups\n  slidesTransform = {\n    layout: '',\n    overview: ''\n  },\n      // Cached references to DOM elements\n  dom = {},\n      // A list of registered reveal.js plugins\n  plugins = {},\n      // List of asynchronously loaded reveal.js dependencies\n  asyncDependencies = [],\n      // Features supported by the browser, see #checkCapabilities()\n  features = {},\n      // Client is a mobile device, see #checkCapabilities()\n  isMobileDevice,\n      // Client is a desktop Chrome, see #checkCapabilities()\n  isChrome,\n      // Throttles mouse wheel navigation\n  lastMouseWheelStep = 0,\n      // Delays updates to the URL due to a Chrome thumbnailer bug\n  writeURLTimeout = 0,\n      // Is the mouse pointer currently hidden from view\n  cursorHidden = false,\n      // Timeout used to determine when the cursor is inactive\n  cursorInactiveTimeout = 0,\n      // Flags if the interaction event listeners are bound\n  eventsAreBound = false,\n      // The current auto-slide duration\n  autoSlide = 0,\n      // Auto slide properties\n  autoSlidePlayer,\n      autoSlideTimeout = 0,\n      autoSlideStartTime = -1,\n      autoSlidePaused = false,\n      // Holds information about the currently ongoing touch input\n  touch = {\n    startX: 0,\n    startY: 0,\n    startCount: 0,\n    captured: false,\n    threshold: 40\n  },\n      // A key:value map of shortcut keyboard keys and descriptions of\n  // the actions they trigger, generated in #configure()\n  keyboardShortcuts = {},\n      // Holds custom key code mappings\n  registeredKeyBindings = {};\n  /**\n   * Starts up the presentation if the client is capable.\n   */\n\n  function initialize(options) {\n    // Make sure we only initialize once\n    if (initialized === true) return;\n    initialized = true;\n    checkCapabilities();\n\n    if (!features.transforms2d && !features.transforms3d) {\n      document.body.setAttribute('class', 'no-transforms'); // Since JS won't be running any further, we load all lazy\n      // loading elements upfront\n\n      var images = toArray(document.getElementsByTagName('img')),\n          iframes = toArray(document.getElementsByTagName('iframe'));\n      var lazyLoadable = images.concat(iframes);\n\n      for (var i = 0, len = lazyLoadable.length; i < len; i++) {\n        var element = lazyLoadable[i];\n\n        if (element.getAttribute('data-src')) {\n          element.setAttribute('src', element.getAttribute('data-src'));\n          element.removeAttribute('data-src');\n        }\n      } // If the browser doesn't support core features we won't be\n      // using JavaScript to control the presentation\n\n\n      return;\n    } // Cache references to key DOM elements\n\n\n    dom.wrapper = document.querySelector('.reveal');\n    dom.slides = document.querySelector('.reveal .slides'); // Force a layout when the whole page, incl fonts, has loaded\n\n    window.addEventListener('load', layout, false);\n    var query = Reveal.getQueryHash(); // Do not accept new dependencies via query config to avoid\n    // the potential of malicious script injection\n\n    if (typeof query['dependencies'] !== 'undefined') delete query['dependencies']; // Copy options over to our config object\n\n    extend(config, options);\n    extend(config, query); // Hide the address bar in mobile browsers\n\n    hideAddressBar(); // Loads dependencies and continues to #start() once done\n\n    load();\n  }\n  /**\n   * Inspect the client to see what it's capable of, this\n   * should only happens once per runtime.\n   */\n\n\n  function checkCapabilities() {\n    isMobileDevice = /(iphone|ipod|ipad|android)/gi.test(UA) || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1; // iPadOS\n\n    isChrome = /chrome/i.test(UA) && !/edge/i.test(UA);\n    var testElement = document.createElement('div');\n    features.transforms3d = 'WebkitPerspective' in testElement.style || 'MozPerspective' in testElement.style || 'msPerspective' in testElement.style || 'OPerspective' in testElement.style || 'perspective' in testElement.style;\n    features.transforms2d = 'WebkitTransform' in testElement.style || 'MozTransform' in testElement.style || 'msTransform' in testElement.style || 'OTransform' in testElement.style || 'transform' in testElement.style;\n    features.requestAnimationFrameMethod = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n    features.requestAnimationFrame = typeof features.requestAnimationFrameMethod === 'function';\n    features.canvas = !!document.createElement('canvas').getContext; // Transitions in the overview are disabled in desktop and\n    // Safari due to lag\n\n    features.overviewTransitions = !/Version\\/[\\d\\.]+.*Safari/.test(UA); // Flags if we should use zoom instead of transform to scale\n    // up slides. Zoom produces crisper results but has a lot of\n    // xbrowser quirks so we only use it in whitelsited browsers.\n\n    features.zoom = 'zoom' in testElement.style && !isMobileDevice && (isChrome || /Version\\/[\\d\\.]+.*Safari/.test(UA));\n  }\n  /**\n   * Loads the dependencies of reveal.js. Dependencies are\n   * defined via the configuration option 'dependencies'\n   * and will be loaded prior to starting/binding reveal.js.\n   * Some dependencies may have an 'async' flag, if so they\n   * will load after reveal.js has been started up.\n   */\n\n\n  function load() {\n    var scripts = [],\n        scriptsToLoad = 0;\n    config.dependencies.forEach(function (s) {\n      // Load if there's no condition or the condition is truthy\n      if (!s.condition || s.condition()) {\n        if (s.async) {\n          asyncDependencies.push(s);\n        } else {\n          scripts.push(s);\n        }\n      }\n    });\n\n    if (scripts.length) {\n      scriptsToLoad = scripts.length; // Load synchronous scripts\n\n      scripts.forEach(function (s) {\n        loadScript(s.src, function () {\n          if (typeof s.callback === 'function') s.callback();\n\n          if (--scriptsToLoad === 0) {\n            initPlugins();\n          }\n        });\n      });\n    } else {\n      initPlugins();\n    }\n  }\n  /**\n   * Initializes our plugins and waits for them to be ready\n   * before proceeding.\n   */\n\n\n  function initPlugins() {\n    var pluginsToInitialize = Object.keys(plugins).length; // If there are no plugins, skip this step\n\n    if (pluginsToInitialize === 0) {\n      loadAsyncDependencies();\n    } // ... otherwise initialize plugins\n    else {\n        var afterPlugInitialized = function () {\n          if (--pluginsToInitialize === 0) {\n            loadAsyncDependencies();\n          }\n        };\n\n        for (var i in plugins) {\n          var plugin = plugins[i]; // If the plugin has an 'init' method, invoke it\n\n          if (typeof plugin.init === 'function') {\n            var callback = plugin.init(); // If the plugin returned a Promise, wait for it\n\n            if (callback && typeof callback.then === 'function') {\n              callback.then(afterPlugInitialized);\n            } else {\n              afterPlugInitialized();\n            }\n          } else {\n            afterPlugInitialized();\n          }\n        }\n      }\n  }\n  /**\n   * Loads all async reveal.js dependencies.\n   */\n\n\n  function loadAsyncDependencies() {\n    if (asyncDependencies.length) {\n      asyncDependencies.forEach(function (s) {\n        loadScript(s.src, s.callback);\n      });\n    }\n\n    start();\n  }\n  /**\n   * Loads a JavaScript file from the given URL and executes it.\n   *\n   * @param {string} url Address of the .js file to load\n   * @param {function} callback Method to invoke when the script\n   * has loaded and executed\n   */\n\n\n  function loadScript(url, callback) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = false;\n    script.defer = false;\n    script.src = url;\n\n    if (callback) {\n      // Success callback\n      script.onload = script.onreadystatechange = function (event) {\n        if (event.type === \"load\" || /loaded|complete/.test(script.readyState)) {\n          // Kill event listeners\n          script.onload = script.onreadystatechange = script.onerror = null;\n          callback();\n        }\n      }; // Error callback\n\n\n      script.onerror = function (err) {\n        // Kill event listeners\n        script.onload = script.onreadystatechange = script.onerror = null;\n        callback(new Error('Failed loading script: ' + script.src + '\\n' + err));\n      };\n    } // Append the script at the end of <head>\n\n\n    var head = document.querySelector('head');\n    head.insertBefore(script, head.lastChild);\n  }\n  /**\n   * Starts up reveal.js by binding input events and navigating\n   * to the current URL deeplink if there is one.\n   */\n\n\n  function start() {\n    loaded = true; // Make sure we've got all the DOM elements we need\n\n    setupDOM(); // Listen to messages posted to this window\n\n    setupPostMessage(); // Prevent the slides from being scrolled out of view\n\n    setupScrollPrevention(); // Resets all vertical slides so that only the first is visible\n\n    resetVerticalSlides(); // Updates the presentation to match the current configuration values\n\n    configure(); // Read the initial hash\n\n    readURL(); // Update all backgrounds\n\n    updateBackground(true); // Notify listeners that the presentation is ready but use a 1ms\n    // timeout to ensure it's not fired synchronously after #initialize()\n\n    setTimeout(function () {\n      // Enable transitions now that we're loaded\n      dom.slides.classList.remove('no-transition');\n      dom.wrapper.classList.add('ready');\n      dispatchEvent('ready', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'currentSlide': currentSlide\n      });\n    }, 1); // Special setup and config is required when printing to PDF\n\n    if (isPrintingPDF()) {\n      removeEventListeners(); // The document needs to have loaded for the PDF layout\n      // measurements to be accurate\n\n      if (document.readyState === 'complete') {\n        setupPDF();\n      } else {\n        window.addEventListener('load', setupPDF);\n      }\n    }\n  }\n  /**\n   * Finds and stores references to DOM elements which are\n   * required by the presentation. If a required element is\n   * not found, it is created.\n   */\n\n\n  function setupDOM() {\n    // Prevent transitions while we're loading\n    dom.slides.classList.add('no-transition');\n\n    if (isMobileDevice) {\n      dom.wrapper.classList.add('no-hover');\n    } else {\n      dom.wrapper.classList.remove('no-hover');\n    }\n\n    if (/iphone/gi.test(UA)) {\n      dom.wrapper.classList.add('ua-iphone');\n    } else {\n      dom.wrapper.classList.remove('ua-iphone');\n    } // Background element\n\n\n    dom.background = createSingletonNode(dom.wrapper, 'div', 'backgrounds', null); // Progress bar\n\n    dom.progress = createSingletonNode(dom.wrapper, 'div', 'progress', '<span></span>');\n    dom.progressbar = dom.progress.querySelector('span'); // Arrow controls\n\n    dom.controls = createSingletonNode(dom.wrapper, 'aside', 'controls', '<button class=\"navigate-left\" aria-label=\"previous slide\"><div class=\"controls-arrow\"></div></button>' + '<button class=\"navigate-right\" aria-label=\"next slide\"><div class=\"controls-arrow\"></div></button>' + '<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>' + '<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>'); // Slide number\n\n    dom.slideNumber = createSingletonNode(dom.wrapper, 'div', 'slide-number', ''); // Element containing notes that are visible to the audience\n\n    dom.speakerNotes = createSingletonNode(dom.wrapper, 'div', 'speaker-notes', null);\n    dom.speakerNotes.setAttribute('data-prevent-swipe', '');\n    dom.speakerNotes.setAttribute('tabindex', '0'); // Overlay graphic which is displayed during the paused mode\n\n    dom.pauseOverlay = createSingletonNode(dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null);\n    dom.wrapper.setAttribute('role', 'application'); // There can be multiple instances of controls throughout the page\n\n    dom.controlsLeft = toArray(document.querySelectorAll('.navigate-left'));\n    dom.controlsRight = toArray(document.querySelectorAll('.navigate-right'));\n    dom.controlsUp = toArray(document.querySelectorAll('.navigate-up'));\n    dom.controlsDown = toArray(document.querySelectorAll('.navigate-down'));\n    dom.controlsPrev = toArray(document.querySelectorAll('.navigate-prev'));\n    dom.controlsNext = toArray(document.querySelectorAll('.navigate-next')); // The right and down arrows in the standard reveal.js controls\n\n    dom.controlsRightArrow = dom.controls.querySelector('.navigate-right');\n    dom.controlsDownArrow = dom.controls.querySelector('.navigate-down');\n    dom.statusDiv = createStatusDiv();\n  }\n  /**\n   * Creates a hidden div with role aria-live to announce the\n   * current slide content. Hide the div off-screen to make it\n   * available only to Assistive Technologies.\n   *\n   * @return {HTMLElement}\n   */\n\n\n  function createStatusDiv() {\n    var statusDiv = document.getElementById('aria-status-div');\n\n    if (!statusDiv) {\n      statusDiv = document.createElement('div');\n      statusDiv.style.position = 'absolute';\n      statusDiv.style.height = '1px';\n      statusDiv.style.width = '1px';\n      statusDiv.style.overflow = 'hidden';\n      statusDiv.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n      statusDiv.setAttribute('id', 'aria-status-div');\n      statusDiv.setAttribute('aria-live', 'polite');\n      statusDiv.setAttribute('aria-atomic', 'true');\n      dom.wrapper.appendChild(statusDiv);\n    }\n\n    return statusDiv;\n  }\n  /**\n   * Converts the given HTML element into a string of text\n   * that can be announced to a screen reader. Hidden\n   * elements are excluded.\n   */\n\n\n  function getStatusText(node) {\n    var text = ''; // Text node\n\n    if (node.nodeType === 3) {\n      text += node.textContent;\n    } // Element node\n    else if (node.nodeType === 1) {\n        var isAriaHidden = node.getAttribute('aria-hidden');\n        var isDisplayHidden = window.getComputedStyle(node)['display'] === 'none';\n\n        if (isAriaHidden !== 'true' && !isDisplayHidden) {\n          toArray(node.childNodes).forEach(function (child) {\n            text += getStatusText(child);\n          });\n        }\n      }\n\n    return text;\n  }\n  /**\n   * Configures the presentation for printing to a static\n   * PDF.\n   */\n\n\n  function setupPDF() {\n    var slideSize = getComputedSlideSize(window.innerWidth, window.innerHeight); // Dimensions of the PDF pages\n\n    var pageWidth = Math.floor(slideSize.width * (1 + config.margin)),\n        pageHeight = Math.floor(slideSize.height * (1 + config.margin)); // Dimensions of slides within the pages\n\n    var slideWidth = slideSize.width,\n        slideHeight = slideSize.height; // Let the browser know what page size we want to print\n\n    injectStyleSheet('@page{size:' + pageWidth + 'px ' + pageHeight + 'px; margin: 0px;}'); // Limit the size of certain elements to the dimensions of the slide\n\n    injectStyleSheet('.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: ' + slideWidth + 'px; max-height:' + slideHeight + 'px}');\n    document.body.classList.add('print-pdf');\n    document.body.style.width = pageWidth + 'px';\n    document.body.style.height = pageHeight + 'px'; // Make sure stretch elements fit on slide\n\n    layoutSlideContents(slideWidth, slideHeight); // Compute slide numbers now, before we start duplicating slides\n\n    var doingSlideNumbers = config.slideNumber && /all|print/i.test(config.showSlideNumber);\n    toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n      slide.setAttribute('data-slide-number', getSlideNumber(slide));\n    }); // Slide and slide background layout\n\n    toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n      // Vertical stacks are not centred since their section\n      // children will be\n      if (slide.classList.contains('stack') === false) {\n        // Center the slide inside of the page, giving the slide some margin\n        var left = (pageWidth - slideWidth) / 2,\n            top = (pageHeight - slideHeight) / 2;\n        var contentHeight = slide.scrollHeight;\n        var numberOfPages = Math.max(Math.ceil(contentHeight / pageHeight), 1); // Adhere to configured pages per slide limit\n\n        numberOfPages = Math.min(numberOfPages, config.pdfMaxPagesPerSlide); // Center slides vertically\n\n        if (numberOfPages === 1 && config.center || slide.classList.contains('center')) {\n          top = Math.max((pageHeight - contentHeight) / 2, 0);\n        } // Wrap the slide in a page element and hide its overflow\n        // so that no page ever flows onto another\n\n\n        var page = document.createElement('div');\n        page.className = 'pdf-page';\n        page.style.height = (pageHeight + config.pdfPageHeightOffset) * numberOfPages + 'px';\n        slide.parentNode.insertBefore(page, slide);\n        page.appendChild(slide); // Position the slide inside of the page\n\n        slide.style.left = left + 'px';\n        slide.style.top = top + 'px';\n        slide.style.width = slideWidth + 'px';\n\n        if (slide.slideBackgroundElement) {\n          page.insertBefore(slide.slideBackgroundElement, slide);\n        } // Inject notes if `showNotes` is enabled\n\n\n        if (config.showNotes) {\n          // Are there notes for this slide?\n          var notes = getSlideNotes(slide);\n\n          if (notes) {\n            var notesSpacing = 8;\n            var notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n            var notesElement = document.createElement('div');\n            notesElement.classList.add('speaker-notes');\n            notesElement.classList.add('speaker-notes-pdf');\n            notesElement.setAttribute('data-layout', notesLayout);\n            notesElement.innerHTML = notes;\n\n            if (notesLayout === 'separate-page') {\n              page.parentNode.insertBefore(notesElement, page.nextSibling);\n            } else {\n              notesElement.style.left = notesSpacing + 'px';\n              notesElement.style.bottom = notesSpacing + 'px';\n              notesElement.style.width = pageWidth - notesSpacing * 2 + 'px';\n              page.appendChild(notesElement);\n            }\n          }\n        } // Inject slide numbers if `slideNumbers` are enabled\n\n\n        if (doingSlideNumbers) {\n          var numberElement = document.createElement('div');\n          numberElement.classList.add('slide-number');\n          numberElement.classList.add('slide-number-pdf');\n          numberElement.innerHTML = slide.getAttribute('data-slide-number');\n          page.appendChild(numberElement);\n        } // Copy page and show fragments one after another\n\n\n        if (config.pdfSeparateFragments) {\n          // Each fragment 'group' is an array containing one or more\n          // fragments. Multiple fragments that appear at the same time\n          // are part of the same group.\n          var fragmentGroups = sortFragments(page.querySelectorAll('.fragment'), true);\n          var previousFragmentStep;\n          var previousPage;\n          fragmentGroups.forEach(function (fragments) {\n            // Remove 'current-fragment' from the previous group\n            if (previousFragmentStep) {\n              previousFragmentStep.forEach(function (fragment) {\n                fragment.classList.remove('current-fragment');\n              });\n            } // Show the fragments for the current index\n\n\n            fragments.forEach(function (fragment) {\n              fragment.classList.add('visible', 'current-fragment');\n            }); // Create a separate page for the current fragment state\n\n            var clonedPage = page.cloneNode(true);\n            page.parentNode.insertBefore(clonedPage, (previousPage || page).nextSibling);\n            previousFragmentStep = fragments;\n            previousPage = clonedPage;\n          }); // Reset the first/original page so that all fragments are hidden\n\n          fragmentGroups.forEach(function (fragments) {\n            fragments.forEach(function (fragment) {\n              fragment.classList.remove('visible', 'current-fragment');\n            });\n          });\n        } // Show all fragments\n        else {\n            toArray(page.querySelectorAll('.fragment:not(.fade-out)')).forEach(function (fragment) {\n              fragment.classList.add('visible');\n            });\n          }\n      }\n    }); // Notify subscribers that the PDF layout is good to go\n\n    dispatchEvent('pdf-ready');\n  }\n  /**\n   * This is an unfortunate necessity. Some actions – such as\n   * an input field being focused in an iframe or using the\n   * keyboard to expand text selection beyond the bounds of\n   * a slide – can trigger our content to be pushed out of view.\n   * This scrolling can not be prevented by hiding overflow in\n   * CSS (we already do) so we have to resort to repeatedly\n   * checking if the slides have been offset :(\n   */\n\n\n  function setupScrollPrevention() {\n    setInterval(function () {\n      if (dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0) {\n        dom.wrapper.scrollTop = 0;\n        dom.wrapper.scrollLeft = 0;\n      }\n    }, 1000);\n  }\n  /**\n   * Creates an HTML element and returns a reference to it.\n   * If the element already exists the existing instance will\n   * be returned.\n   *\n   * @param {HTMLElement} container\n   * @param {string} tagname\n   * @param {string} classname\n   * @param {string} innerHTML\n   *\n   * @return {HTMLElement}\n   */\n\n\n  function createSingletonNode(container, tagname, classname, innerHTML) {\n    // Find all nodes matching the description\n    var nodes = container.querySelectorAll('.' + classname); // Check all matches to find one which is a direct child of\n    // the specified container\n\n    for (var i = 0; i < nodes.length; i++) {\n      var testNode = nodes[i];\n\n      if (testNode.parentNode === container) {\n        return testNode;\n      }\n    } // If no node was found, create it now\n\n\n    var node = document.createElement(tagname);\n    node.className = classname;\n\n    if (typeof innerHTML === 'string') {\n      node.innerHTML = innerHTML;\n    }\n\n    container.appendChild(node);\n    return node;\n  }\n  /**\n   * Creates the slide background elements and appends them\n   * to the background container. One element is created per\n   * slide no matter if the given slide has visible background.\n   */\n\n\n  function createBackgrounds() {\n    var printMode = isPrintingPDF(); // Clear prior backgrounds\n\n    dom.background.innerHTML = '';\n    dom.background.classList.add('no-transition'); // Iterate over all horizontal slides\n\n    toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).forEach(function (slideh) {\n      var backgroundStack = createBackground(slideh, dom.background); // Iterate over all vertical slides\n\n      toArray(slideh.querySelectorAll('section')).forEach(function (slidev) {\n        createBackground(slidev, backgroundStack);\n        backgroundStack.classList.add('stack');\n      });\n    }); // Add parallax background if specified\n\n    if (config.parallaxBackgroundImage) {\n      dom.background.style.backgroundImage = 'url(\"' + config.parallaxBackgroundImage + '\")';\n      dom.background.style.backgroundSize = config.parallaxBackgroundSize;\n      dom.background.style.backgroundRepeat = config.parallaxBackgroundRepeat;\n      dom.background.style.backgroundPosition = config.parallaxBackgroundPosition; // Make sure the below properties are set on the element - these properties are\n      // needed for proper transitions to be set on the element via CSS. To remove\n      // annoying background slide-in effect when the presentation starts, apply\n      // these properties after short time delay\n\n      setTimeout(function () {\n        dom.wrapper.classList.add('has-parallax-background');\n      }, 1);\n    } else {\n      dom.background.style.backgroundImage = '';\n      dom.wrapper.classList.remove('has-parallax-background');\n    }\n  }\n  /**\n   * Creates a background for the given slide.\n   *\n   * @param {HTMLElement} slide\n   * @param {HTMLElement} container The element that the background\n   * should be appended to\n   * @return {HTMLElement} New background div\n   */\n\n\n  function createBackground(slide, container) {\n    // Main slide background element\n    var element = document.createElement('div');\n    element.className = 'slide-background ' + slide.className.replace(/present|past|future/, ''); // Inner background element that wraps images/videos/iframes\n\n    var contentElement = document.createElement('div');\n    contentElement.className = 'slide-background-content';\n    element.appendChild(contentElement);\n    container.appendChild(element);\n    slide.slideBackgroundElement = element;\n    slide.slideBackgroundContentElement = contentElement; // Syncs the background to reflect all current background settings\n\n    syncBackground(slide);\n    return element;\n  }\n  /**\n   * Renders all of the visual properties of a slide background\n   * based on the various background attributes.\n   *\n   * @param {HTMLElement} slide\n   */\n\n\n  function syncBackground(slide) {\n    var element = slide.slideBackgroundElement,\n        contentElement = slide.slideBackgroundContentElement; // Reset the prior background state in case this is not the\n    // initial sync\n\n    slide.classList.remove('has-dark-background');\n    slide.classList.remove('has-light-background');\n    element.removeAttribute('data-loaded');\n    element.removeAttribute('data-background-hash');\n    element.removeAttribute('data-background-size');\n    element.removeAttribute('data-background-transition');\n    element.style.backgroundColor = '';\n    contentElement.style.backgroundSize = '';\n    contentElement.style.backgroundRepeat = '';\n    contentElement.style.backgroundPosition = '';\n    contentElement.style.backgroundImage = '';\n    contentElement.style.opacity = '';\n    contentElement.innerHTML = '';\n    var data = {\n      background: slide.getAttribute('data-background'),\n      backgroundSize: slide.getAttribute('data-background-size'),\n      backgroundImage: slide.getAttribute('data-background-image'),\n      backgroundVideo: slide.getAttribute('data-background-video'),\n      backgroundIframe: slide.getAttribute('data-background-iframe'),\n      backgroundColor: slide.getAttribute('data-background-color'),\n      backgroundRepeat: slide.getAttribute('data-background-repeat'),\n      backgroundPosition: slide.getAttribute('data-background-position'),\n      backgroundTransition: slide.getAttribute('data-background-transition'),\n      backgroundOpacity: slide.getAttribute('data-background-opacity')\n    };\n\n    if (data.background) {\n      // Auto-wrap image urls in url(...)\n      if (/^(http|file|\\/\\/)/gi.test(data.background) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test(data.background)) {\n        slide.setAttribute('data-background-image', data.background);\n      } else {\n        element.style.background = data.background;\n      }\n    } // Create a hash for this combination of background settings.\n    // This is used to determine when two slide backgrounds are\n    // the same.\n\n\n    if (data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe) {\n      element.setAttribute('data-background-hash', data.background + data.backgroundSize + data.backgroundImage + data.backgroundVideo + data.backgroundIframe + data.backgroundColor + data.backgroundRepeat + data.backgroundPosition + data.backgroundTransition + data.backgroundOpacity);\n    } // Additional and optional background properties\n\n\n    if (data.backgroundSize) element.setAttribute('data-background-size', data.backgroundSize);\n    if (data.backgroundColor) element.style.backgroundColor = data.backgroundColor;\n    if (data.backgroundTransition) element.setAttribute('data-background-transition', data.backgroundTransition);\n    if (slide.hasAttribute('data-preload')) element.setAttribute('data-preload', ''); // Background image options are set on the content wrapper\n\n    if (data.backgroundSize) contentElement.style.backgroundSize = data.backgroundSize;\n    if (data.backgroundRepeat) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n    if (data.backgroundPosition) contentElement.style.backgroundPosition = data.backgroundPosition;\n    if (data.backgroundOpacity) contentElement.style.opacity = data.backgroundOpacity; // If this slide has a background color, we add a class that\n    // signals if it is light or dark. If the slide has no background\n    // color, no class will be added\n\n    var contrastColor = data.backgroundColor; // If no bg color was found, check the computed background\n\n    if (!contrastColor) {\n      var computedBackgroundStyle = window.getComputedStyle(element);\n\n      if (computedBackgroundStyle && computedBackgroundStyle.backgroundColor) {\n        contrastColor = computedBackgroundStyle.backgroundColor;\n      }\n    }\n\n    if (contrastColor) {\n      var rgb = colorToRgb(contrastColor); // Ignore fully transparent backgrounds. Some browsers return\n      // rgba(0,0,0,0) when reading the computed background color of\n      // an element with no background\n\n      if (rgb && rgb.a !== 0) {\n        if (colorBrightness(contrastColor) < 128) {\n          slide.classList.add('has-dark-background');\n        } else {\n          slide.classList.add('has-light-background');\n        }\n      }\n    }\n  }\n  /**\n   * Registers a listener to postMessage events, this makes it\n   * possible to call all reveal.js API methods from another\n   * window. For example:\n   *\n   * revealWindow.postMessage( JSON.stringify({\n   *   method: 'slide',\n   *   args: [ 2 ]\n   * }), '*' );\n   */\n\n\n  function setupPostMessage() {\n    if (config.postMessage) {\n      window.addEventListener('message', function (event) {\n        var data = event.data; // Make sure we're dealing with JSON\n\n        if (typeof data === 'string' && data.charAt(0) === '{' && data.charAt(data.length - 1) === '}') {\n          data = JSON.parse(data); // Check if the requested method can be found\n\n          if (data.method && typeof Reveal[data.method] === 'function') {\n            if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n              var result = Reveal[data.method].apply(Reveal, data.args); // Dispatch a postMessage event with the returned value from\n              // our method invocation for getter functions\n\n              dispatchPostMessage('callback', {\n                method: data.method,\n                result: result\n              });\n            } else {\n              console.warn('reveal.js: \"' + data.method + '\" is is blacklisted from the postMessage API');\n            }\n          }\n        }\n      }, false);\n    }\n  }\n  /**\n   * Applies the configuration settings from the config\n   * object. May be called multiple times.\n   *\n   * @param {object} options\n   */\n\n\n  function configure(options) {\n    var oldTransition = config.transition; // New config options may be passed when this method\n    // is invoked through the API after initialization\n\n    if (typeof options === 'object') extend(config, options); // Abort if reveal.js hasn't finished loading, config\n    // changes will be applied automatically once loading\n    // finishes\n\n    if (loaded === false) return;\n    var numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length; // Remove the previously configured transition class\n\n    dom.wrapper.classList.remove(oldTransition); // Force linear transition based on browser capabilities\n\n    if (features.transforms3d === false) config.transition = 'linear';\n    dom.wrapper.classList.add(config.transition);\n    dom.wrapper.setAttribute('data-transition-speed', config.transitionSpeed);\n    dom.wrapper.setAttribute('data-background-transition', config.backgroundTransition);\n    dom.controls.style.display = config.controls ? 'block' : 'none';\n    dom.progress.style.display = config.progress ? 'block' : 'none';\n    dom.controls.setAttribute('data-controls-layout', config.controlsLayout);\n    dom.controls.setAttribute('data-controls-back-arrows', config.controlsBackArrows);\n\n    if (config.shuffle) {\n      shuffle();\n    }\n\n    if (config.rtl) {\n      dom.wrapper.classList.add('rtl');\n    } else {\n      dom.wrapper.classList.remove('rtl');\n    }\n\n    if (config.center) {\n      dom.wrapper.classList.add('center');\n    } else {\n      dom.wrapper.classList.remove('center');\n    } // Exit the paused mode if it was configured off\n\n\n    if (config.pause === false) {\n      resume();\n    }\n\n    if (config.showNotes) {\n      dom.speakerNotes.setAttribute('data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline');\n    }\n\n    if (config.mouseWheel) {\n      document.addEventListener('DOMMouseScroll', onDocumentMouseScroll, false); // FF\n\n      document.addEventListener('mousewheel', onDocumentMouseScroll, false);\n    } else {\n      document.removeEventListener('DOMMouseScroll', onDocumentMouseScroll, false); // FF\n\n      document.removeEventListener('mousewheel', onDocumentMouseScroll, false);\n    } // Rolling 3D links\n\n\n    if (config.rollingLinks) {\n      enableRollingLinks();\n    } else {\n      disableRollingLinks();\n    } // Auto-hide the mouse pointer when its inactive\n\n\n    if (config.hideInactiveCursor) {\n      document.addEventListener('mousemove', onDocumentCursorActive, false);\n      document.addEventListener('mousedown', onDocumentCursorActive, false);\n    } else {\n      showCursor();\n      document.removeEventListener('mousemove', onDocumentCursorActive, false);\n      document.removeEventListener('mousedown', onDocumentCursorActive, false);\n    } // Iframe link previews\n\n\n    if (config.previewLinks) {\n      enablePreviewLinks();\n      disablePreviewLinks('[data-preview-link=false]');\n    } else {\n      disablePreviewLinks();\n      enablePreviewLinks('[data-preview-link]:not([data-preview-link=false])');\n    } // Remove existing auto-slide controls\n\n\n    if (autoSlidePlayer) {\n      autoSlidePlayer.destroy();\n      autoSlidePlayer = null;\n    } // Generate auto-slide controls if needed\n\n\n    if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable && features.canvas && features.requestAnimationFrame) {\n      autoSlidePlayer = new Playback(dom.wrapper, function () {\n        return Math.min(Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0), 1);\n      });\n      autoSlidePlayer.on('click', onAutoSlidePlayerClick);\n      autoSlidePaused = false;\n    } // When fragments are turned off they should be visible\n\n\n    if (config.fragments === false) {\n      toArray(dom.slides.querySelectorAll('.fragment')).forEach(function (element) {\n        element.classList.add('visible');\n        element.classList.remove('current-fragment');\n      });\n    } // Slide numbers\n\n\n    var slideNumberDisplay = 'none';\n\n    if (config.slideNumber && !isPrintingPDF()) {\n      if (config.showSlideNumber === 'all') {\n        slideNumberDisplay = 'block';\n      } else if (config.showSlideNumber === 'speaker' && isSpeakerNotes()) {\n        slideNumberDisplay = 'block';\n      }\n    }\n\n    dom.slideNumber.style.display = slideNumberDisplay; // Add the navigation mode to the DOM so we can adjust styling\n\n    if (config.navigationMode !== 'default') {\n      dom.wrapper.setAttribute('data-navigation-mode', config.navigationMode);\n    } else {\n      dom.wrapper.removeAttribute('data-navigation-mode');\n    } // Define our contextual list of keyboard shortcuts\n\n\n    if (config.navigationMode === 'linear') {\n      keyboardShortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n      keyboardShortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K'] = 'Previous slide';\n    } else {\n      keyboardShortcuts['N  ,  SPACE'] = 'Next slide';\n      keyboardShortcuts['P'] = 'Previous slide';\n      keyboardShortcuts['&#8592;  ,  H'] = 'Navigate left';\n      keyboardShortcuts['&#8594;  ,  L'] = 'Navigate right';\n      keyboardShortcuts['&#8593;  ,  K'] = 'Navigate up';\n      keyboardShortcuts['&#8595;  ,  J'] = 'Navigate down';\n    }\n\n    keyboardShortcuts['Home  ,  Shift &#8592;'] = 'First slide';\n    keyboardShortcuts['End  ,  Shift &#8594;'] = 'Last slide';\n    keyboardShortcuts['B  ,  .'] = 'Pause';\n    keyboardShortcuts['F'] = 'Fullscreen';\n    keyboardShortcuts['ESC, O'] = 'Slide overview';\n    sync();\n  }\n  /**\n   * Binds all event listeners.\n   */\n\n\n  function addEventListeners() {\n    eventsAreBound = true;\n    window.addEventListener('hashchange', onWindowHashChange, false);\n    window.addEventListener('resize', onWindowResize, false);\n\n    if (config.touch) {\n      if ('onpointerdown' in window) {\n        // Use W3C pointer events\n        dom.wrapper.addEventListener('pointerdown', onPointerDown, false);\n        dom.wrapper.addEventListener('pointermove', onPointerMove, false);\n        dom.wrapper.addEventListener('pointerup', onPointerUp, false);\n      } else if (window.navigator.msPointerEnabled) {\n        // IE 10 uses prefixed version of pointer events\n        dom.wrapper.addEventListener('MSPointerDown', onPointerDown, false);\n        dom.wrapper.addEventListener('MSPointerMove', onPointerMove, false);\n        dom.wrapper.addEventListener('MSPointerUp', onPointerUp, false);\n      } else {\n        // Fall back to touch events\n        dom.wrapper.addEventListener('touchstart', onTouchStart, false);\n        dom.wrapper.addEventListener('touchmove', onTouchMove, false);\n        dom.wrapper.addEventListener('touchend', onTouchEnd, false);\n      }\n    }\n\n    if (config.keyboard) {\n      document.addEventListener('keydown', onDocumentKeyDown, false);\n      document.addEventListener('keypress', onDocumentKeyPress, false);\n    }\n\n    if (config.progress && dom.progress) {\n      dom.progress.addEventListener('click', onProgressClicked, false);\n    }\n\n    dom.pauseOverlay.addEventListener('click', resume, false);\n\n    if (config.focusBodyOnPageVisibilityChange) {\n      var visibilityChange;\n\n      if ('hidden' in document) {\n        visibilityChange = 'visibilitychange';\n      } else if ('msHidden' in document) {\n        visibilityChange = 'msvisibilitychange';\n      } else if ('webkitHidden' in document) {\n        visibilityChange = 'webkitvisibilitychange';\n      }\n\n      if (visibilityChange) {\n        document.addEventListener(visibilityChange, onPageVisibilityChange, false);\n      }\n    } // Listen to both touch and click events, in case the device\n    // supports both\n\n\n    var pointerEvents = ['touchstart', 'click']; // Only support touch for Android, fixes double navigations in\n    // stock browser\n\n    if (UA.match(/android/gi)) {\n      pointerEvents = ['touchstart'];\n    }\n\n    pointerEvents.forEach(function (eventName) {\n      dom.controlsLeft.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateLeftClicked, false);\n      });\n      dom.controlsRight.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateRightClicked, false);\n      });\n      dom.controlsUp.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateUpClicked, false);\n      });\n      dom.controlsDown.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateDownClicked, false);\n      });\n      dom.controlsPrev.forEach(function (el) {\n        el.addEventListener(eventName, onNavigatePrevClicked, false);\n      });\n      dom.controlsNext.forEach(function (el) {\n        el.addEventListener(eventName, onNavigateNextClicked, false);\n      });\n    });\n  }\n  /**\n   * Unbinds all event listeners.\n   */\n\n\n  function removeEventListeners() {\n    eventsAreBound = false;\n    document.removeEventListener('keydown', onDocumentKeyDown, false);\n    document.removeEventListener('keypress', onDocumentKeyPress, false);\n    window.removeEventListener('hashchange', onWindowHashChange, false);\n    window.removeEventListener('resize', onWindowResize, false);\n    dom.wrapper.removeEventListener('pointerdown', onPointerDown, false);\n    dom.wrapper.removeEventListener('pointermove', onPointerMove, false);\n    dom.wrapper.removeEventListener('pointerup', onPointerUp, false);\n    dom.wrapper.removeEventListener('MSPointerDown', onPointerDown, false);\n    dom.wrapper.removeEventListener('MSPointerMove', onPointerMove, false);\n    dom.wrapper.removeEventListener('MSPointerUp', onPointerUp, false);\n    dom.wrapper.removeEventListener('touchstart', onTouchStart, false);\n    dom.wrapper.removeEventListener('touchmove', onTouchMove, false);\n    dom.wrapper.removeEventListener('touchend', onTouchEnd, false);\n    dom.pauseOverlay.removeEventListener('click', resume, false);\n\n    if (config.progress && dom.progress) {\n      dom.progress.removeEventListener('click', onProgressClicked, false);\n    }\n\n    ['touchstart', 'click'].forEach(function (eventName) {\n      dom.controlsLeft.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateLeftClicked, false);\n      });\n      dom.controlsRight.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateRightClicked, false);\n      });\n      dom.controlsUp.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateUpClicked, false);\n      });\n      dom.controlsDown.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateDownClicked, false);\n      });\n      dom.controlsPrev.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigatePrevClicked, false);\n      });\n      dom.controlsNext.forEach(function (el) {\n        el.removeEventListener(eventName, onNavigateNextClicked, false);\n      });\n    });\n  }\n  /**\n   * Registers a new plugin with this reveal.js instance.\n   *\n   * reveal.js waits for all regisered plugins to initialize\n   * before considering itself ready, as long as the plugin\n   * is registered before calling `Reveal.initialize()`.\n   */\n\n\n  function registerPlugin(id, plugin) {\n    if (plugins[id] === undefined) {\n      plugins[id] = plugin; // If a plugin is registered after reveal.js is loaded,\n      // initialize it right away\n\n      if (loaded && typeof plugin.init === 'function') {\n        plugin.init();\n      }\n    } else {\n      console.warn('reveal.js: \"' + id + '\" plugin has already been registered');\n    }\n  }\n  /**\n   * Checks if a specific plugin has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n\n\n  function hasPlugin(id) {\n    return !!plugins[id];\n  }\n  /**\n   * Returns the specific plugin instance, if a plugin\n   * with the given ID has been registered.\n   *\n   * @param {String} id Unique plugin identifier\n   */\n\n\n  function getPlugin(id) {\n    return plugins[id];\n  }\n  /**\n   * Add a custom key binding with optional description to\n   * be added to the help screen.\n   */\n\n\n  function addKeyBinding(binding, callback) {\n    if (typeof binding === 'object' && binding.keyCode) {\n      registeredKeyBindings[binding.keyCode] = {\n        callback: callback,\n        key: binding.key,\n        description: binding.description\n      };\n    } else {\n      registeredKeyBindings[binding] = {\n        callback: callback,\n        key: null,\n        description: null\n      };\n    }\n  }\n  /**\n   * Removes the specified custom key binding.\n   */\n\n\n  function removeKeyBinding(keyCode) {\n    delete registeredKeyBindings[keyCode];\n  }\n  /**\n   * Extend object a with the properties of object b.\n   * If there's a conflict, object b takes precedence.\n   *\n   * @param {object} a\n   * @param {object} b\n   */\n\n\n  function extend(a, b) {\n    for (var i in b) {\n      a[i] = b[i];\n    }\n\n    return a;\n  }\n  /**\n   * Converts the target object to an array.\n   *\n   * @param {object} o\n   * @return {object[]}\n   */\n\n\n  function toArray(o) {\n    return Array.prototype.slice.call(o);\n  }\n  /**\n   * Utility for deserializing a value.\n   *\n   * @param {*} value\n   * @return {*}\n   */\n\n\n  function deserialize(value) {\n    if (typeof value === 'string') {\n      if (value === 'null') return null;else if (value === 'true') return true;else if (value === 'false') return false;else if (value.match(/^-?[\\d\\.]+$/)) return parseFloat(value);\n    }\n\n    return value;\n  }\n  /**\n   * Measures the distance in pixels between point a\n   * and point b.\n   *\n   * @param {object} a point with x/y properties\n   * @param {object} b point with x/y properties\n   *\n   * @return {number}\n   */\n\n\n  function distanceBetween(a, b) {\n    var dx = a.x - b.x,\n        dy = a.y - b.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n  /**\n   * Applies a CSS transform to the target element.\n   *\n   * @param {HTMLElement} element\n   * @param {string} transform\n   */\n\n\n  function transformElement(element, transform) {\n    element.style.WebkitTransform = transform;\n    element.style.MozTransform = transform;\n    element.style.msTransform = transform;\n    element.style.transform = transform;\n  }\n  /**\n   * Applies CSS transforms to the slides container. The container\n   * is transformed from two separate sources: layout and the overview\n   * mode.\n   *\n   * @param {object} transforms\n   */\n\n\n  function transformSlides(transforms) {\n    // Pick up new transforms from arguments\n    if (typeof transforms.layout === 'string') slidesTransform.layout = transforms.layout;\n    if (typeof transforms.overview === 'string') slidesTransform.overview = transforms.overview; // Apply the transforms to the slides container\n\n    if (slidesTransform.layout) {\n      transformElement(dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview);\n    } else {\n      transformElement(dom.slides, slidesTransform.overview);\n    }\n  }\n  /**\n   * Injects the given CSS styles into the DOM.\n   *\n   * @param {string} value\n   */\n\n\n  function injectStyleSheet(value) {\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n\n    if (tag.styleSheet) {\n      tag.styleSheet.cssText = value;\n    } else {\n      tag.appendChild(document.createTextNode(value));\n    }\n\n    document.getElementsByTagName('head')[0].appendChild(tag);\n  }\n  /**\n   * Find the closest parent that matches the given\n   * selector.\n   *\n   * @param {HTMLElement} target The child element\n   * @param {String} selector The CSS selector to match\n   * the parents against\n   *\n   * @return {HTMLElement} The matched parent or null\n   * if no matching parent was found\n   */\n\n\n  function closestParent(target, selector) {\n    var parent = target.parentNode;\n\n    while (parent) {\n      // There's some overhead doing this each time, we don't\n      // want to rewrite the element prototype but should still\n      // be enough to feature detect once at startup...\n      var matchesMethod = parent.matches || parent.matchesSelector || parent.msMatchesSelector; // If we find a match, we're all set\n\n      if (matchesMethod && matchesMethod.call(parent, selector)) {\n        return parent;\n      } // Keep searching\n\n\n      parent = parent.parentNode;\n    }\n\n    return null;\n  }\n  /**\n   * Converts various color input formats to an {r:0,g:0,b:0} object.\n   *\n   * @param {string} color The string representation of a color\n   * @example\n   * colorToRgb('#000');\n   * @example\n   * colorToRgb('#000000');\n   * @example\n   * colorToRgb('rgb(0,0,0)');\n   * @example\n   * colorToRgb('rgba(0,0,0)');\n   *\n   * @return {{r: number, g: number, b: number, [a]: number}|null}\n   */\n\n\n  function colorToRgb(color) {\n    var hex3 = color.match(/^#([0-9a-f]{3})$/i);\n\n    if (hex3 && hex3[1]) {\n      hex3 = hex3[1];\n      return {\n        r: parseInt(hex3.charAt(0), 16) * 0x11,\n        g: parseInt(hex3.charAt(1), 16) * 0x11,\n        b: parseInt(hex3.charAt(2), 16) * 0x11\n      };\n    }\n\n    var hex6 = color.match(/^#([0-9a-f]{6})$/i);\n\n    if (hex6 && hex6[1]) {\n      hex6 = hex6[1];\n      return {\n        r: parseInt(hex6.substr(0, 2), 16),\n        g: parseInt(hex6.substr(2, 2), 16),\n        b: parseInt(hex6.substr(4, 2), 16)\n      };\n    }\n\n    var rgb = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n\n    if (rgb) {\n      return {\n        r: parseInt(rgb[1], 10),\n        g: parseInt(rgb[2], 10),\n        b: parseInt(rgb[3], 10)\n      };\n    }\n\n    var rgba = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i);\n\n    if (rgba) {\n      return {\n        r: parseInt(rgba[1], 10),\n        g: parseInt(rgba[2], 10),\n        b: parseInt(rgba[3], 10),\n        a: parseFloat(rgba[4])\n      };\n    }\n\n    return null;\n  }\n  /**\n   * Calculates brightness on a scale of 0-255.\n   *\n   * @param {string} color See colorToRgb for supported formats.\n   * @see {@link colorToRgb}\n   */\n\n\n  function colorBrightness(color) {\n    if (typeof color === 'string') color = colorToRgb(color);\n\n    if (color) {\n      return (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n    }\n\n    return null;\n  }\n  /**\n   * Returns the remaining height within the parent of the\n   * target element.\n   *\n   * remaining height = [ configured parent height ] - [ current parent height ]\n   *\n   * @param {HTMLElement} element\n   * @param {number} [height]\n   */\n\n\n  function getRemainingHeight(element, height) {\n    height = height || 0;\n\n    if (element) {\n      var newHeight,\n          oldHeight = element.style.height; // Change the .stretch element height to 0 in order find the height of all\n      // the other elements\n\n      element.style.height = '0px'; // In Overview mode, the parent (.slide) height is set of 700px.\n      // Restore it temporarily to its natural height.\n\n      element.parentNode.style.height = 'auto';\n      newHeight = height - element.parentNode.offsetHeight; // Restore the old height, just in case\n\n      element.style.height = oldHeight + 'px'; // Clear the parent (.slide) height. .removeProperty works in IE9+\n\n      element.parentNode.style.removeProperty('height');\n      return newHeight;\n    }\n\n    return height;\n  }\n  /**\n   * Checks if this instance is being used to print a PDF.\n   */\n\n\n  function isPrintingPDF() {\n    return /print-pdf/gi.test(window.location.search);\n  }\n  /**\n   * Hides the address bar if we're on a mobile device.\n   */\n\n\n  function hideAddressBar() {\n    if (config.hideAddressBar && isMobileDevice) {\n      // Events that should trigger the address bar to hide\n      window.addEventListener('load', removeAddressBar, false);\n      window.addEventListener('orientationchange', removeAddressBar, false);\n    }\n  }\n  /**\n   * Causes the address bar to hide on mobile devices,\n   * more vertical space ftw.\n   */\n\n\n  function removeAddressBar() {\n    setTimeout(function () {\n      window.scrollTo(0, 1);\n    }, 10);\n  }\n  /**\n   * Dispatches an event of the specified type from the\n   * reveal DOM element.\n   */\n\n\n  function dispatchEvent(type, args) {\n    var event = document.createEvent('HTMLEvents', 1, 2);\n    event.initEvent(type, true, true);\n    extend(event, args);\n    dom.wrapper.dispatchEvent(event); // If we're in an iframe, post each reveal.js event to the\n    // parent window. Used by the notes plugin\n\n    dispatchPostMessage(type);\n  }\n  /**\n   * Dispatched a postMessage of the given type from our window.\n   */\n\n\n  function dispatchPostMessage(type, data) {\n    if (config.postMessageEvents && window.parent !== window.self) {\n      var message = {\n        namespace: 'reveal',\n        eventName: type,\n        state: getState()\n      };\n      extend(message, data);\n      window.parent.postMessage(JSON.stringify(message), '*');\n    }\n  }\n  /**\n   * Wrap all links in 3D goodness.\n   */\n\n\n  function enableRollingLinks() {\n    if (features.transforms3d && !('msPerspective' in document.body.style)) {\n      var anchors = dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ' a');\n\n      for (var i = 0, len = anchors.length; i < len; i++) {\n        var anchor = anchors[i];\n\n        if (anchor.textContent && !anchor.querySelector('*') && (!anchor.className || !anchor.classList.contains(anchor, 'roll'))) {\n          var span = document.createElement('span');\n          span.setAttribute('data-title', anchor.text);\n          span.innerHTML = anchor.innerHTML;\n          anchor.classList.add('roll');\n          anchor.innerHTML = '';\n          anchor.appendChild(span);\n        }\n      }\n    }\n  }\n  /**\n   * Unwrap all 3D links.\n   */\n\n\n  function disableRollingLinks() {\n    var anchors = dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ' a.roll');\n\n    for (var i = 0, len = anchors.length; i < len; i++) {\n      var anchor = anchors[i];\n      var span = anchor.querySelector('span');\n\n      if (span) {\n        anchor.classList.remove('roll');\n        anchor.innerHTML = span.innerHTML;\n      }\n    }\n  }\n  /**\n   * Bind preview frame links.\n   *\n   * @param {string} [selector=a] - selector for anchors\n   */\n\n\n  function enablePreviewLinks(selector) {\n    var anchors = toArray(document.querySelectorAll(selector ? selector : 'a'));\n    anchors.forEach(function (element) {\n      if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n        element.addEventListener('click', onPreviewLinkClicked, false);\n      }\n    });\n  }\n  /**\n   * Unbind preview frame links.\n   */\n\n\n  function disablePreviewLinks(selector) {\n    var anchors = toArray(document.querySelectorAll(selector ? selector : 'a'));\n    anchors.forEach(function (element) {\n      if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n        element.removeEventListener('click', onPreviewLinkClicked, false);\n      }\n    });\n  }\n  /**\n   * Opens a preview window for the target URL.\n   *\n   * @param {string} url - url for preview iframe src\n   */\n\n\n  function showPreview(url) {\n    closeOverlay();\n    dom.overlay = document.createElement('div');\n    dom.overlay.classList.add('overlay');\n    dom.overlay.classList.add('overlay-preview');\n    dom.wrapper.appendChild(dom.overlay);\n    dom.overlay.innerHTML = ['<header>', '<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>', '<a class=\"external\" href=\"' + url + '\" target=\"_blank\"><span class=\"icon\"></span></a>', '</header>', '<div class=\"spinner\"></div>', '<div class=\"viewport\">', '<iframe src=\"' + url + '\"></iframe>', '<small class=\"viewport-inner\">', '<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site\\'s policy (x-frame-options).</span>', '</small>', '</div>'].join('');\n    dom.overlay.querySelector('iframe').addEventListener('load', function (event) {\n      dom.overlay.classList.add('loaded');\n    }, false);\n    dom.overlay.querySelector('.close').addEventListener('click', function (event) {\n      closeOverlay();\n      event.preventDefault();\n    }, false);\n    dom.overlay.querySelector('.external').addEventListener('click', function (event) {\n      closeOverlay();\n    }, false);\n    setTimeout(function () {\n      dom.overlay.classList.add('visible');\n    }, 1);\n  }\n  /**\n   * Open or close help overlay window.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * help is open, false means it's closed.\n   */\n\n\n  function toggleHelp(override) {\n    if (typeof override === 'boolean') {\n      override ? showHelp() : closeOverlay();\n    } else {\n      if (dom.overlay) {\n        closeOverlay();\n      } else {\n        showHelp();\n      }\n    }\n  }\n  /**\n   * Opens an overlay window with help material.\n   */\n\n\n  function showHelp() {\n    if (config.help) {\n      closeOverlay();\n      dom.overlay = document.createElement('div');\n      dom.overlay.classList.add('overlay');\n      dom.overlay.classList.add('overlay-help');\n      dom.wrapper.appendChild(dom.overlay);\n      var html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n      html += '<table><th>KEY</th><th>ACTION</th>';\n\n      for (var key in keyboardShortcuts) {\n        html += '<tr><td>' + key + '</td><td>' + keyboardShortcuts[key] + '</td></tr>';\n      } // Add custom key bindings that have associated descriptions\n\n\n      for (var binding in registeredKeyBindings) {\n        if (registeredKeyBindings[binding].key && registeredKeyBindings[binding].description) {\n          html += '<tr><td>' + registeredKeyBindings[binding].key + '</td><td>' + registeredKeyBindings[binding].description + '</td></tr>';\n        }\n      }\n\n      html += '</table>';\n      dom.overlay.innerHTML = ['<header>', '<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>', '</header>', '<div class=\"viewport\">', '<div class=\"viewport-inner\">' + html + '</div>', '</div>'].join('');\n      dom.overlay.querySelector('.close').addEventListener('click', function (event) {\n        closeOverlay();\n        event.preventDefault();\n      }, false);\n      setTimeout(function () {\n        dom.overlay.classList.add('visible');\n      }, 1);\n    }\n  }\n  /**\n   * Closes any currently open overlay.\n   */\n\n\n  function closeOverlay() {\n    if (dom.overlay) {\n      dom.overlay.parentNode.removeChild(dom.overlay);\n      dom.overlay = null;\n    }\n  }\n  /**\n   * Applies JavaScript-controlled layout rules to the\n   * presentation.\n   */\n\n\n  function layout() {\n    if (dom.wrapper && !isPrintingPDF()) {\n      if (!config.disableLayout) {\n        // On some mobile devices '100vh' is taller than the visible\n        // viewport which leads to part of the presentation being\n        // cut off. To work around this we define our own '--vh' custom\n        // property where 100x adds up to the correct height.\n        //\n        // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n        if (isMobileDevice) {\n          document.documentElement.style.setProperty('--vh', window.innerHeight * 0.01 + 'px');\n        }\n\n        var size = getComputedSlideSize();\n        var oldScale = scale; // Layout the contents of the slides\n\n        layoutSlideContents(config.width, config.height);\n        dom.slides.style.width = size.width + 'px';\n        dom.slides.style.height = size.height + 'px'; // Determine scale of content to fit within available space\n\n        scale = Math.min(size.presentationWidth / size.width, size.presentationHeight / size.height); // Respect max/min scale settings\n\n        scale = Math.max(scale, config.minScale);\n        scale = Math.min(scale, config.maxScale); // Don't apply any scaling styles if scale is 1\n\n        if (scale === 1) {\n          dom.slides.style.zoom = '';\n          dom.slides.style.left = '';\n          dom.slides.style.top = '';\n          dom.slides.style.bottom = '';\n          dom.slides.style.right = '';\n          transformSlides({\n            layout: ''\n          });\n        } else {\n          // Zoom Scaling\n          // Content remains crisp no matter how much we scale. Side\n          // effects are minor differences in text layout and iframe\n          // viewports changing size. A 200x200 iframe viewport in a\n          // 2x zoomed presentation ends up having a 400x400 viewport.\n          if (scale > 1 && features.zoom && window.devicePixelRatio < 2) {\n            dom.slides.style.zoom = scale;\n            dom.slides.style.left = '';\n            dom.slides.style.top = '';\n            dom.slides.style.bottom = '';\n            dom.slides.style.right = '';\n            transformSlides({\n              layout: ''\n            });\n          } // Transform Scaling\n          // Content layout remains the exact same when scaled up.\n          // Side effect is content becoming blurred, especially with\n          // high scale values on ldpi screens.\n          else {\n              dom.slides.style.zoom = '';\n              dom.slides.style.left = '50%';\n              dom.slides.style.top = '50%';\n              dom.slides.style.bottom = 'auto';\n              dom.slides.style.right = 'auto';\n              transformSlides({\n                layout: 'translate(-50%, -50%) scale(' + scale + ')'\n              });\n            }\n        } // Select all slides, vertical and horizontal\n\n\n        var slides = toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR));\n\n        for (var i = 0, len = slides.length; i < len; i++) {\n          var slide = slides[i]; // Don't bother updating invisible slides\n\n          if (slide.style.display === 'none') {\n            continue;\n          }\n\n          if (config.center || slide.classList.contains('center')) {\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains('stack')) {\n              slide.style.top = 0;\n            } else {\n              slide.style.top = Math.max((size.height - slide.scrollHeight) / 2, 0) + 'px';\n            }\n          } else {\n            slide.style.top = '';\n          }\n        }\n\n        if (oldScale !== scale) {\n          dispatchEvent('resize', {\n            'oldScale': oldScale,\n            'scale': scale,\n            'size': size\n          });\n        }\n      }\n\n      updateProgress();\n      updateParallax();\n\n      if (isOverview()) {\n        updateOverview();\n      }\n    }\n  }\n  /**\n   * Applies layout logic to the contents of all slides in\n   * the presentation.\n   *\n   * @param {string|number} width\n   * @param {string|number} height\n   */\n\n\n  function layoutSlideContents(width, height) {\n    // Handle sizing of elements with the 'stretch' class\n    toArray(dom.slides.querySelectorAll('section > .stretch')).forEach(function (element) {\n      // Determine how much vertical space we can use\n      var remainingHeight = getRemainingHeight(element, height); // Consider the aspect ratio of media elements\n\n      if (/(img|video)/gi.test(element.nodeName)) {\n        var nw = element.naturalWidth || element.videoWidth,\n            nh = element.naturalHeight || element.videoHeight;\n        var es = Math.min(width / nw, remainingHeight / nh);\n        element.style.width = nw * es + 'px';\n        element.style.height = nh * es + 'px';\n      } else {\n        element.style.width = width + 'px';\n        element.style.height = remainingHeight + 'px';\n      }\n    });\n  }\n  /**\n   * Calculates the computed pixel size of our slides. These\n   * values are based on the width and height configuration\n   * options.\n   *\n   * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n   * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n   */\n\n\n  function getComputedSlideSize(presentationWidth, presentationHeight) {\n    var size = {\n      // Slide size\n      width: config.width,\n      height: config.height,\n      // Presentation size\n      presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n      presentationHeight: presentationHeight || dom.wrapper.offsetHeight\n    }; // Reduce available space by margin\n\n    size.presentationWidth -= size.presentationWidth * config.margin;\n    size.presentationHeight -= size.presentationHeight * config.margin; // Slide width may be a percentage of available width\n\n    if (typeof size.width === 'string' && /%$/.test(size.width)) {\n      size.width = parseInt(size.width, 10) / 100 * size.presentationWidth;\n    } // Slide height may be a percentage of available height\n\n\n    if (typeof size.height === 'string' && /%$/.test(size.height)) {\n      size.height = parseInt(size.height, 10) / 100 * size.presentationHeight;\n    }\n\n    return size;\n  }\n  /**\n   * Stores the vertical index of a stack so that the same\n   * vertical slide can be selected when navigating to and\n   * from the stack.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   * @param {string|number} [v=0] Index to memorize\n   */\n\n\n  function setPreviousVerticalIndex(stack, v) {\n    if (typeof stack === 'object' && typeof stack.setAttribute === 'function') {\n      stack.setAttribute('data-previous-indexv', v || 0);\n    }\n  }\n  /**\n   * Retrieves the vertical index which was stored using\n   * #setPreviousVerticalIndex() or 0 if no previous index\n   * exists.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   */\n\n\n  function getPreviousVerticalIndex(stack) {\n    if (typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains('stack')) {\n      // Prefer manually defined start-indexv\n      var attributeName = stack.hasAttribute('data-start-indexv') ? 'data-start-indexv' : 'data-previous-indexv';\n      return parseInt(stack.getAttribute(attributeName) || 0, 10);\n    }\n\n    return 0;\n  }\n  /**\n   * Displays the overview of slides (quick nav) by scaling\n   * down and arranging all slide elements.\n   */\n\n\n  function activateOverview() {\n    // Only proceed if enabled in config\n    if (config.overview && !isOverview()) {\n      overview = true;\n      dom.wrapper.classList.add('overview');\n      dom.wrapper.classList.remove('overview-deactivating');\n\n      if (features.overviewTransitions) {\n        setTimeout(function () {\n          dom.wrapper.classList.add('overview-animated');\n        }, 1);\n      } // Don't auto-slide while in overview mode\n\n\n      cancelAutoSlide(); // Move the backgrounds element into the slide container to\n      // that the same scaling is applied\n\n      dom.slides.appendChild(dom.background); // Clicking on an overview slide navigates to it\n\n      toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n        if (!slide.classList.contains('stack')) {\n          slide.addEventListener('click', onOverviewSlideClicked, true);\n        }\n      }); // Calculate slide sizes\n\n      var margin = 70;\n      var slideSize = getComputedSlideSize();\n      overviewSlideWidth = slideSize.width + margin;\n      overviewSlideHeight = slideSize.height + margin; // Reverse in RTL mode\n\n      if (config.rtl) {\n        overviewSlideWidth = -overviewSlideWidth;\n      }\n\n      updateSlidesVisibility();\n      layoutOverview();\n      updateOverview();\n      layout(); // Notify observers of the overview showing\n\n      dispatchEvent('overviewshown', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'currentSlide': currentSlide\n      });\n    }\n  }\n  /**\n   * Uses CSS transforms to position all slides in a grid for\n   * display inside of the overview mode.\n   */\n\n\n  function layoutOverview() {\n    // Layout slides\n    toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).forEach(function (hslide, h) {\n      hslide.setAttribute('data-index-h', h);\n      transformElement(hslide, 'translate3d(' + h * overviewSlideWidth + 'px, 0, 0)');\n\n      if (hslide.classList.contains('stack')) {\n        toArray(hslide.querySelectorAll('section')).forEach(function (vslide, v) {\n          vslide.setAttribute('data-index-h', h);\n          vslide.setAttribute('data-index-v', v);\n          transformElement(vslide, 'translate3d(0, ' + v * overviewSlideHeight + 'px, 0)');\n        });\n      }\n    }); // Layout slide backgrounds\n\n    toArray(dom.background.childNodes).forEach(function (hbackground, h) {\n      transformElement(hbackground, 'translate3d(' + h * overviewSlideWidth + 'px, 0, 0)');\n      toArray(hbackground.querySelectorAll('.slide-background')).forEach(function (vbackground, v) {\n        transformElement(vbackground, 'translate3d(0, ' + v * overviewSlideHeight + 'px, 0)');\n      });\n    });\n  }\n  /**\n   * Moves the overview viewport to the current slides.\n   * Called each time the current slide changes.\n   */\n\n\n  function updateOverview() {\n    var vmin = Math.min(window.innerWidth, window.innerHeight);\n    var scale = Math.max(vmin / 5, 150) / vmin;\n    transformSlides({\n      overview: ['scale(' + scale + ')', 'translateX(' + -indexh * overviewSlideWidth + 'px)', 'translateY(' + -indexv * overviewSlideHeight + 'px)'].join(' ')\n    });\n  }\n  /**\n   * Exits the slide overview and enters the currently\n   * active slide.\n   */\n\n\n  function deactivateOverview() {\n    // Only proceed if enabled in config\n    if (config.overview) {\n      overview = false;\n      dom.wrapper.classList.remove('overview');\n      dom.wrapper.classList.remove('overview-animated'); // Temporarily add a class so that transitions can do different things\n      // depending on whether they are exiting/entering overview, or just\n      // moving from slide to slide\n\n      dom.wrapper.classList.add('overview-deactivating');\n      setTimeout(function () {\n        dom.wrapper.classList.remove('overview-deactivating');\n      }, 1); // Move the background element back out\n\n      dom.wrapper.appendChild(dom.background); // Clean up changes made to slides\n\n      toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function (slide) {\n        transformElement(slide, '');\n        slide.removeEventListener('click', onOverviewSlideClicked, true);\n      }); // Clean up changes made to backgrounds\n\n      toArray(dom.background.querySelectorAll('.slide-background')).forEach(function (background) {\n        transformElement(background, '');\n      });\n      transformSlides({\n        overview: ''\n      });\n      slide(indexh, indexv);\n      layout();\n      cueAutoSlide(); // Notify observers of the overview hiding\n\n      dispatchEvent('overviewhidden', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'currentSlide': currentSlide\n      });\n    }\n  }\n  /**\n   * Toggles the slide overview mode on and off.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * overview is open, false means it's closed.\n   */\n\n\n  function toggleOverview(override) {\n    if (typeof override === 'boolean') {\n      override ? activateOverview() : deactivateOverview();\n    } else {\n      isOverview() ? deactivateOverview() : activateOverview();\n    }\n  }\n  /**\n   * Checks if the overview is currently active.\n   *\n   * @return {Boolean} true if the overview is active,\n   * false otherwise\n   */\n\n\n  function isOverview() {\n    return overview;\n  }\n  /**\n   * Return a hash URL that will resolve to the given slide location.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to link to\n   */\n\n\n  function locationHash(slide) {\n    var url = '/'; // Attempt to create a named link based on the slide's ID\n\n    var s = slide || currentSlide;\n    var id = s ? s.getAttribute('id') : null;\n\n    if (id) {\n      id = encodeURIComponent(id);\n    }\n\n    var index = getIndices(slide);\n\n    if (!config.fragmentInURL) {\n      index.f = undefined;\n    } // If the current slide has an ID, use that as a named link,\n    // but we don't support named links with a fragment index\n\n\n    if (typeof id === 'string' && id.length && index.f === undefined) {\n      url = '/' + id;\n    } // Otherwise use the /h/v index\n    else {\n        var hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n        if (index.h > 0 || index.v > 0 || index.f !== undefined) url += index.h + hashIndexBase;\n        if (index.v > 0 || index.f !== undefined) url += '/' + (index.v + hashIndexBase);\n        if (index.f !== undefined) url += '/' + index.f;\n      }\n\n    return url;\n  }\n  /**\n   * Checks if the current or specified slide is vertical\n   * (nested within another slide).\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to check\n   * orientation of\n   * @return {Boolean}\n   */\n\n\n  function isVerticalSlide(slide) {\n    // Prefer slide argument, otherwise use current slide\n    slide = slide ? slide : currentSlide;\n    return slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i);\n  }\n  /**\n   * Handling the fullscreen functionality via the fullscreen API\n   *\n   * @see http://fullscreen.spec.whatwg.org/\n   * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n   */\n\n\n  function enterFullscreen() {\n    var element = document.documentElement; // Check which implementation is available\n\n    var requestMethod = element.requestFullscreen || element.webkitRequestFullscreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullscreen;\n\n    if (requestMethod) {\n      requestMethod.apply(element);\n    }\n  }\n  /**\n   * Shows the mouse pointer after it has been hidden with\n   * #hideCursor.\n   */\n\n\n  function showCursor() {\n    if (cursorHidden) {\n      cursorHidden = false;\n      dom.wrapper.style.cursor = '';\n    }\n  }\n  /**\n   * Hides the mouse pointer when it's on top of the .reveal\n   * container.\n   */\n\n\n  function hideCursor() {\n    if (cursorHidden === false) {\n      cursorHidden = true;\n      dom.wrapper.style.cursor = 'none';\n    }\n  }\n  /**\n   * Enters the paused mode which fades everything on screen to\n   * black.\n   */\n\n\n  function pause() {\n    if (config.pause) {\n      var wasPaused = dom.wrapper.classList.contains('paused');\n      cancelAutoSlide();\n      dom.wrapper.classList.add('paused');\n\n      if (wasPaused === false) {\n        dispatchEvent('paused');\n      }\n    }\n  }\n  /**\n   * Exits from the paused mode.\n   */\n\n\n  function resume() {\n    var wasPaused = dom.wrapper.classList.contains('paused');\n    dom.wrapper.classList.remove('paused');\n    cueAutoSlide();\n\n    if (wasPaused) {\n      dispatchEvent('resumed');\n    }\n  }\n  /**\n   * Toggles the paused mode on and off.\n   */\n\n\n  function togglePause(override) {\n    if (typeof override === 'boolean') {\n      override ? pause() : resume();\n    } else {\n      isPaused() ? resume() : pause();\n    }\n  }\n  /**\n   * Checks if we are currently in the paused mode.\n   *\n   * @return {Boolean}\n   */\n\n\n  function isPaused() {\n    return dom.wrapper.classList.contains('paused');\n  }\n  /**\n   * Toggles the auto slide mode on and off.\n   *\n   * @param {Boolean} [override] Flag which sets the desired state.\n   * True means autoplay starts, false means it stops.\n   */\n\n\n  function toggleAutoSlide(override) {\n    if (typeof override === 'boolean') {\n      override ? resumeAutoSlide() : pauseAutoSlide();\n    } else {\n      autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n    }\n  }\n  /**\n   * Checks if the auto slide mode is currently on.\n   *\n   * @return {Boolean}\n   */\n\n\n  function isAutoSliding() {\n    return !!(autoSlide && !autoSlidePaused);\n  }\n  /**\n   * Steps from the current point in the presentation to the\n   * slide which matches the specified horizontal and vertical\n   * indices.\n   *\n   * @param {number} [h=indexh] Horizontal index of the target slide\n   * @param {number} [v=indexv] Vertical index of the target slide\n   * @param {number} [f] Index of a fragment within the\n   * target slide to activate\n   * @param {number} [o] Origin for use in multimaster environments\n   */\n\n\n  function slide(h, v, f, o) {\n    // Remember where we were at before\n    previousSlide = currentSlide; // Query all horizontal slides in the deck\n\n    var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR); // Abort if there are no slides\n\n    if (horizontalSlides.length === 0) return; // If no vertical index is specified and the upcoming slide is a\n    // stack, resume at its previous vertical index\n\n    if (v === undefined && !isOverview()) {\n      v = getPreviousVerticalIndex(horizontalSlides[h]);\n    } // If we were on a vertical stack, remember what vertical index\n    // it was on so we can resume at the same position when returning\n\n\n    if (previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains('stack')) {\n      setPreviousVerticalIndex(previousSlide.parentNode, indexv);\n    } // Remember the state before this slide\n\n\n    var stateBefore = state.concat(); // Reset the state array\n\n    state.length = 0;\n    var indexhBefore = indexh || 0,\n        indexvBefore = indexv || 0; // Activate and transition to the new slide\n\n    indexh = updateSlides(HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h);\n    indexv = updateSlides(VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v); // Update the visibility of slides now that the indices have changed\n\n    updateSlidesVisibility();\n    layout(); // Update the overview if it's currently active\n\n    if (isOverview()) {\n      updateOverview();\n    } // Find the current horizontal slide and any possible vertical slides\n    // within it\n\n\n    var currentHorizontalSlide = horizontalSlides[indexh],\n        currentVerticalSlides = currentHorizontalSlide.querySelectorAll('section'); // Store references to the previous and current slides\n\n    currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide; // Show fragment, if specified\n\n    if (typeof f !== 'undefined') {\n      navigateFragment(f);\n    } // Dispatch an event if the slide changed\n\n\n    var slideChanged = indexh !== indexhBefore || indexv !== indexvBefore;\n\n    if (!slideChanged) {\n      // Ensure that the previous slide is never the same as the current\n      previousSlide = null;\n    } // Solves an edge case where the previous slide maintains the\n    // 'present' class when navigating between adjacent vertical\n    // stacks\n\n\n    if (previousSlide && previousSlide !== currentSlide) {\n      previousSlide.classList.remove('present');\n      previousSlide.setAttribute('aria-hidden', 'true'); // Reset all slides upon navigate to home\n      // Issue: #285\n\n      if (dom.wrapper.querySelector(HOME_SLIDE_SELECTOR).classList.contains('present')) {\n        // Launch async task\n        setTimeout(function () {\n          var slides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.stack')),\n              i;\n\n          for (i in slides) {\n            if (slides[i]) {\n              // Reset stack\n              setPreviousVerticalIndex(slides[i], 0);\n            }\n          }\n        }, 0);\n      }\n    } // Apply the new state\n\n\n    stateLoop: for (var i = 0, len = state.length; i < len; i++) {\n      // Check if this state existed on the previous slide. If it\n      // did, we will avoid adding it repeatedly\n      for (var j = 0; j < stateBefore.length; j++) {\n        if (stateBefore[j] === state[i]) {\n          stateBefore.splice(j, 1);\n          continue stateLoop;\n        }\n      }\n\n      document.documentElement.classList.add(state[i]); // Dispatch custom event matching the state's name\n\n      dispatchEvent(state[i]);\n    } // Clean up the remains of the previous state\n\n\n    while (stateBefore.length) {\n      document.documentElement.classList.remove(stateBefore.pop());\n    }\n\n    if (slideChanged) {\n      dispatchEvent('slidechanged', {\n        'indexh': indexh,\n        'indexv': indexv,\n        'previousSlide': previousSlide,\n        'currentSlide': currentSlide,\n        'origin': o\n      });\n    } // Handle embedded content\n\n\n    if (slideChanged || !previousSlide) {\n      stopEmbeddedContent(previousSlide);\n      startEmbeddedContent(currentSlide);\n    } // Announce the current slide contents, for screen readers\n\n\n    dom.statusDiv.textContent = getStatusText(currentSlide);\n    updateControls();\n    updateProgress();\n    updateBackground();\n    updateParallax();\n    updateSlideNumber();\n    updateNotes();\n    updateFragments(); // Update the URL hash\n\n    writeURL();\n    cueAutoSlide();\n  }\n  /**\n   * Syncs the presentation with the current DOM. Useful\n   * when new slides or control elements are added or when\n   * the configuration has changed.\n   */\n\n\n  function sync() {\n    // Subscribe to input\n    removeEventListeners();\n    addEventListeners(); // Force a layout to make sure the current config is accounted for\n\n    layout(); // Reflect the current autoSlide value\n\n    autoSlide = config.autoSlide; // Start auto-sliding if it's enabled\n\n    cueAutoSlide(); // Re-create the slide backgrounds\n\n    createBackgrounds(); // Write the current hash to the URL\n\n    writeURL();\n    sortAllFragments();\n    updateControls();\n    updateProgress();\n    updateSlideNumber();\n    updateSlidesVisibility();\n    updateBackground(true);\n    updateNotesVisibility();\n    updateNotes();\n    formatEmbeddedContent(); // Start or stop embedded content depending on global config\n\n    if (config.autoPlayMedia === false) {\n      stopEmbeddedContent(currentSlide, {\n        unloadIframes: false\n      });\n    } else {\n      startEmbeddedContent(currentSlide);\n    }\n\n    if (isOverview()) {\n      layoutOverview();\n    }\n  }\n  /**\n   * Updates reveal.js to keep in sync with new slide attributes. For\n   * example, if you add a new `data-background-image` you can call\n   * this to have reveal.js render the new background image.\n   *\n   * Similar to #sync() but more efficient when you only need to\n   * refresh a specific slide.\n   *\n   * @param {HTMLElement} slide\n   */\n\n\n  function syncSlide(slide) {\n    // Default to the current slide\n    slide = slide || currentSlide;\n    syncBackground(slide);\n    syncFragments(slide);\n    loadSlide(slide);\n    updateBackground();\n    updateNotes();\n  }\n  /**\n   * Formats the fragments on the given slide so that they have\n   * valid indices. Call this if fragments are changed in the DOM\n   * after reveal.js has already initialized.\n   *\n   * @param {HTMLElement} slide\n   * @return {Array} a list of the HTML fragments that were synced\n   */\n\n\n  function syncFragments(slide) {\n    // Default to the current slide\n    slide = slide || currentSlide;\n    return sortFragments(slide.querySelectorAll('.fragment'));\n  }\n  /**\n   * Resets all vertical slides so that only the first\n   * is visible.\n   */\n\n\n  function resetVerticalSlides() {\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n    horizontalSlides.forEach(function (horizontalSlide) {\n      var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n      verticalSlides.forEach(function (verticalSlide, y) {\n        if (y > 0) {\n          verticalSlide.classList.remove('present');\n          verticalSlide.classList.remove('past');\n          verticalSlide.classList.add('future');\n          verticalSlide.setAttribute('aria-hidden', 'true');\n        }\n      });\n    });\n  }\n  /**\n   * Sorts and formats all of fragments in the\n   * presentation.\n   */\n\n\n  function sortAllFragments() {\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n    horizontalSlides.forEach(function (horizontalSlide) {\n      var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n      verticalSlides.forEach(function (verticalSlide, y) {\n        sortFragments(verticalSlide.querySelectorAll('.fragment'));\n      });\n      if (verticalSlides.length === 0) sortFragments(horizontalSlide.querySelectorAll('.fragment'));\n    });\n  }\n  /**\n   * Randomly shuffles all slides in the deck.\n   */\n\n\n  function shuffle() {\n    var slides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n    slides.forEach(function (slide) {\n      // Insert this slide next to another random slide. This may\n      // cause the slide to insert before itself but that's fine.\n      dom.slides.insertBefore(slide, slides[Math.floor(Math.random() * slides.length)]);\n    });\n  }\n  /**\n   * Updates one dimension of slides by showing the slide\n   * with the specified index.\n   *\n   * @param {string} selector A CSS selector that will fetch\n   * the group of slides we are working with\n   * @param {number} index The index of the slide that should be\n   * shown\n   *\n   * @return {number} The index of the slide that is now shown,\n   * might differ from the passed in index if it was out of\n   * bounds.\n   */\n\n\n  function updateSlides(selector, index) {\n    // Select all slides and convert the NodeList result to\n    // an array\n    var slides = toArray(dom.wrapper.querySelectorAll(selector)),\n        slidesLength = slides.length;\n    var printMode = isPrintingPDF();\n\n    if (slidesLength) {\n      // Should the index loop?\n      if (config.loop) {\n        index %= slidesLength;\n\n        if (index < 0) {\n          index = slidesLength + index;\n        }\n      } // Enforce max and minimum index bounds\n\n\n      index = Math.max(Math.min(index, slidesLength - 1), 0);\n\n      for (var i = 0; i < slidesLength; i++) {\n        var element = slides[i];\n        var reverse = config.rtl && !isVerticalSlide(element);\n        element.classList.remove('past');\n        element.classList.remove('present');\n        element.classList.remove('future'); // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\n        element.setAttribute('hidden', '');\n        element.setAttribute('aria-hidden', 'true'); // If this element contains vertical slides\n\n        if (element.querySelector('section')) {\n          element.classList.add('stack');\n        } // If we're printing static slides, all slides are \"present\"\n\n\n        if (printMode) {\n          element.classList.add('present');\n          continue;\n        }\n\n        if (i < index) {\n          // Any element previous to index is given the 'past' class\n          element.classList.add(reverse ? 'future' : 'past');\n\n          if (config.fragments) {\n            // Show all fragments in prior slides\n            toArray(element.querySelectorAll('.fragment')).forEach(function (fragment) {\n              fragment.classList.add('visible');\n              fragment.classList.remove('current-fragment');\n            });\n          }\n        } else if (i > index) {\n          // Any element subsequent to index is given the 'future' class\n          element.classList.add(reverse ? 'past' : 'future');\n\n          if (config.fragments) {\n            // Hide all fragments in future slides\n            toArray(element.querySelectorAll('.fragment.visible')).forEach(function (fragment) {\n              fragment.classList.remove('visible');\n              fragment.classList.remove('current-fragment');\n            });\n          }\n        }\n      } // Mark the current slide as present\n\n\n      slides[index].classList.add('present');\n      slides[index].removeAttribute('hidden');\n      slides[index].removeAttribute('aria-hidden'); // If this slide has a state associated with it, add it\n      // onto the current state of the deck\n\n      var slideState = slides[index].getAttribute('data-state');\n\n      if (slideState) {\n        state = state.concat(slideState.split(' '));\n      }\n    } else {\n      // Since there are no slides we can't be anywhere beyond the\n      // zeroth index\n      index = 0;\n    }\n\n    return index;\n  }\n  /**\n   * Optimization method; hide all slides that are far away\n   * from the present slide.\n   */\n\n\n  function updateSlidesVisibility() {\n    // Select all slides and convert the NodeList result to\n    // an array\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)),\n        horizontalSlidesLength = horizontalSlides.length,\n        distanceX,\n        distanceY;\n\n    if (horizontalSlidesLength && typeof indexh !== 'undefined') {\n      // The number of steps away from the present slide that will\n      // be visible\n      var viewDistance = isOverview() ? 10 : config.viewDistance; // Shorten the view distance on devices that typically have\n      // less resources\n\n      if (isMobileDevice) {\n        viewDistance = isOverview() ? 6 : config.mobileViewDistance;\n      } // All slides need to be visible when exporting to PDF\n\n\n      if (isPrintingPDF()) {\n        viewDistance = Number.MAX_VALUE;\n      }\n\n      for (var x = 0; x < horizontalSlidesLength; x++) {\n        var horizontalSlide = horizontalSlides[x];\n        var verticalSlides = toArray(horizontalSlide.querySelectorAll('section')),\n            verticalSlidesLength = verticalSlides.length; // Determine how far away this slide is from the present\n\n        distanceX = Math.abs((indexh || 0) - x) || 0; // If the presentation is looped, distance should measure\n        // 1 between the first and last slides\n\n        if (config.loop) {\n          distanceX = Math.abs(((indexh || 0) - x) % (horizontalSlidesLength - viewDistance)) || 0;\n        } // Show the horizontal slide if it's within the view distance\n\n\n        if (distanceX < viewDistance) {\n          loadSlide(horizontalSlide);\n        } else {\n          unloadSlide(horizontalSlide);\n        }\n\n        if (verticalSlidesLength) {\n          var oy = getPreviousVerticalIndex(horizontalSlide);\n\n          for (var y = 0; y < verticalSlidesLength; y++) {\n            var verticalSlide = verticalSlides[y];\n            distanceY = x === (indexh || 0) ? Math.abs((indexv || 0) - y) : Math.abs(y - oy);\n\n            if (distanceX + distanceY < viewDistance) {\n              loadSlide(verticalSlide);\n            } else {\n              unloadSlide(verticalSlide);\n            }\n          }\n        }\n      } // Flag if there are ANY vertical slides, anywhere in the deck\n\n\n      if (hasVerticalSlides()) {\n        dom.wrapper.classList.add('has-vertical-slides');\n      } else {\n        dom.wrapper.classList.remove('has-vertical-slides');\n      } // Flag if there are ANY horizontal slides, anywhere in the deck\n\n\n      if (hasHorizontalSlides()) {\n        dom.wrapper.classList.add('has-horizontal-slides');\n      } else {\n        dom.wrapper.classList.remove('has-horizontal-slides');\n      }\n    }\n  }\n  /**\n   * Pick up notes from the current slide and display them\n   * to the viewer.\n   *\n   * @see {@link config.showNotes}\n   */\n\n\n  function updateNotes() {\n    if (config.showNotes && dom.speakerNotes && currentSlide && !isPrintingPDF()) {\n      dom.speakerNotes.innerHTML = getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n    }\n  }\n  /**\n   * Updates the visibility of the speaker notes sidebar that\n   * is used to share annotated slides. The notes sidebar is\n   * only visible if showNotes is true and there are notes on\n   * one or more slides in the deck.\n   */\n\n\n  function updateNotesVisibility() {\n    if (config.showNotes && hasNotes()) {\n      dom.wrapper.classList.add('show-notes');\n    } else {\n      dom.wrapper.classList.remove('show-notes');\n    }\n  }\n  /**\n   * Checks if there are speaker notes for ANY slide in the\n   * presentation.\n   */\n\n\n  function hasNotes() {\n    return dom.slides.querySelectorAll('[data-notes], aside.notes').length > 0;\n  }\n  /**\n   * Updates the progress bar to reflect the current slide.\n   */\n\n\n  function updateProgress() {\n    // Update progress if enabled\n    if (config.progress && dom.progressbar) {\n      dom.progressbar.style.width = getProgress() * dom.wrapper.offsetWidth + 'px';\n    }\n  }\n  /**\n   * Updates the slide number to match the current slide.\n   */\n\n\n  function updateSlideNumber() {\n    // Update slide number if enabled\n    if (config.slideNumber && dom.slideNumber) {\n      dom.slideNumber.innerHTML = getSlideNumber();\n    }\n  }\n  /**\n   * Returns the HTML string corresponding to the current slide number,\n   * including formatting.\n   */\n\n\n  function getSlideNumber(slide) {\n    var value;\n    var format = 'h.v';\n\n    if (slide === undefined) {\n      slide = currentSlide;\n    }\n\n    if (typeof config.slideNumber === 'function') {\n      value = config.slideNumber(slide);\n    } else {\n      // Check if a custom number format is available\n      if (typeof config.slideNumber === 'string') {\n        format = config.slideNumber;\n      } // If there are ONLY vertical slides in this deck, always use\n      // a flattened slide number\n\n\n      if (!/c/.test(format) && dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR).length === 1) {\n        format = 'c';\n      }\n\n      value = [];\n\n      switch (format) {\n        case 'c':\n          value.push(getSlidePastCount(slide) + 1);\n          break;\n\n        case 'c/t':\n          value.push(getSlidePastCount(slide) + 1, '/', getTotalSlides());\n          break;\n\n        default:\n          var indices = getIndices(slide);\n          value.push(indices.h + 1);\n          var sep = format === 'h/v' ? '/' : '.';\n          if (isVerticalSlide(slide)) value.push(sep, indices.v + 1);\n      }\n    }\n\n    var url = '#' + locationHash(slide);\n    return formatSlideNumber(value[0], value[1], value[2], url);\n  }\n  /**\n   * Applies HTML formatting to a slide number before it's\n   * written to the DOM.\n   *\n   * @param {number} a Current slide\n   * @param {string} delimiter Character to separate slide numbers\n   * @param {(number|*)} b Total slides\n   * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n   * @return {string} HTML string fragment\n   */\n\n\n  function formatSlideNumber(a, delimiter, b, url) {\n    if (url === undefined) {\n      url = '#' + locationHash();\n    }\n\n    if (typeof b === 'number' && !isNaN(b)) {\n      return '<a href=\"' + url + '\">' + '<span class=\"slide-number-a\">' + a + '</span>' + '<span class=\"slide-number-delimiter\">' + delimiter + '</span>' + '<span class=\"slide-number-b\">' + b + '</span>' + '</a>';\n    } else {\n      return '<a href=\"' + url + '\">' + '<span class=\"slide-number-a\">' + a + '</span>' + '</a>';\n    }\n  }\n  /**\n   * Updates the state of all control/navigation arrows.\n   */\n\n\n  function updateControls() {\n    var routes = availableRoutes();\n    var fragments = availableFragments(); // Remove the 'enabled' class from all directions\n\n    dom.controlsLeft.concat(dom.controlsRight).concat(dom.controlsUp).concat(dom.controlsDown).concat(dom.controlsPrev).concat(dom.controlsNext).forEach(function (node) {\n      node.classList.remove('enabled');\n      node.classList.remove('fragmented'); // Set 'disabled' attribute on all directions\n\n      node.setAttribute('disabled', 'disabled');\n    }); // Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\n    if (routes.left) dom.controlsLeft.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.right) dom.controlsRight.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.up) dom.controlsUp.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.down) dom.controlsDown.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    }); // Prev/next buttons\n\n    if (routes.left || routes.up) dom.controlsPrev.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    });\n    if (routes.right || routes.down) dom.controlsNext.forEach(function (el) {\n      el.classList.add('enabled');\n      el.removeAttribute('disabled');\n    }); // Highlight fragment directions\n\n    if (currentSlide) {\n      // Always apply fragment decorator to prev/next buttons\n      if (fragments.prev) dom.controlsPrev.forEach(function (el) {\n        el.classList.add('fragmented', 'enabled');\n        el.removeAttribute('disabled');\n      });\n      if (fragments.next) dom.controlsNext.forEach(function (el) {\n        el.classList.add('fragmented', 'enabled');\n        el.removeAttribute('disabled');\n      }); // Apply fragment decorators to directional buttons based on\n      // what slide axis they are in\n\n      if (isVerticalSlide(currentSlide)) {\n        if (fragments.prev) dom.controlsUp.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n        if (fragments.next) dom.controlsDown.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n      } else {\n        if (fragments.prev) dom.controlsLeft.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n        if (fragments.next) dom.controlsRight.forEach(function (el) {\n          el.classList.add('fragmented', 'enabled');\n          el.removeAttribute('disabled');\n        });\n      }\n    }\n\n    if (config.controlsTutorial) {\n      // Highlight control arrows with an animation to ensure\n      // that the viewer knows how to navigate\n      if (!hasNavigatedDown && routes.down) {\n        dom.controlsDownArrow.classList.add('highlight');\n      } else {\n        dom.controlsDownArrow.classList.remove('highlight');\n\n        if (!hasNavigatedRight && routes.right && indexv === 0) {\n          dom.controlsRightArrow.classList.add('highlight');\n        } else {\n          dom.controlsRightArrow.classList.remove('highlight');\n        }\n      }\n    }\n  }\n  /**\n   * Updates the background elements to reflect the current\n   * slide.\n   *\n   * @param {boolean} includeAll If true, the backgrounds of\n   * all vertical slides (not just the present) will be updated.\n   */\n\n\n  function updateBackground(includeAll) {\n    var currentBackground = null; // Reverse past/future classes when in RTL mode\n\n    var horizontalPast = config.rtl ? 'future' : 'past',\n        horizontalFuture = config.rtl ? 'past' : 'future'; // Update the classes of all backgrounds to match the\n    // states of their slides (past/present/future)\n\n    toArray(dom.background.childNodes).forEach(function (backgroundh, h) {\n      backgroundh.classList.remove('past');\n      backgroundh.classList.remove('present');\n      backgroundh.classList.remove('future');\n\n      if (h < indexh) {\n        backgroundh.classList.add(horizontalPast);\n      } else if (h > indexh) {\n        backgroundh.classList.add(horizontalFuture);\n      } else {\n        backgroundh.classList.add('present'); // Store a reference to the current background element\n\n        currentBackground = backgroundh;\n      }\n\n      if (includeAll || h === indexh) {\n        toArray(backgroundh.querySelectorAll('.slide-background')).forEach(function (backgroundv, v) {\n          backgroundv.classList.remove('past');\n          backgroundv.classList.remove('present');\n          backgroundv.classList.remove('future');\n\n          if (v < indexv) {\n            backgroundv.classList.add('past');\n          } else if (v > indexv) {\n            backgroundv.classList.add('future');\n          } else {\n            backgroundv.classList.add('present'); // Only if this is the present horizontal and vertical slide\n\n            if (h === indexh) currentBackground = backgroundv;\n          }\n        });\n      }\n    }); // Stop content inside of previous backgrounds\n\n    if (previousBackground) {\n      stopEmbeddedContent(previousBackground, {\n        unloadIframes: !shouldPreload(previousBackground)\n      });\n    } // Start content in the current background\n\n\n    if (currentBackground) {\n      startEmbeddedContent(currentBackground);\n      var currentBackgroundContent = currentBackground.querySelector('.slide-background-content');\n\n      if (currentBackgroundContent) {\n        var backgroundImageURL = currentBackgroundContent.style.backgroundImage || ''; // Restart GIFs (doesn't work in Firefox)\n\n        if (/\\.gif/i.test(backgroundImageURL)) {\n          currentBackgroundContent.style.backgroundImage = '';\n          window.getComputedStyle(currentBackgroundContent).opacity;\n          currentBackgroundContent.style.backgroundImage = backgroundImageURL;\n        }\n      } // Don't transition between identical backgrounds. This\n      // prevents unwanted flicker.\n\n\n      var previousBackgroundHash = previousBackground ? previousBackground.getAttribute('data-background-hash') : null;\n      var currentBackgroundHash = currentBackground.getAttribute('data-background-hash');\n\n      if (currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== previousBackground) {\n        dom.background.classList.add('no-transition');\n      }\n\n      previousBackground = currentBackground;\n    } // If there's a background brightness flag for this slide,\n    // bubble it to the .reveal container\n\n\n    if (currentSlide) {\n      ['has-light-background', 'has-dark-background'].forEach(function (classToBubble) {\n        if (currentSlide.classList.contains(classToBubble)) {\n          dom.wrapper.classList.add(classToBubble);\n        } else {\n          dom.wrapper.classList.remove(classToBubble);\n        }\n      });\n    } // Allow the first background to apply without transition\n\n\n    setTimeout(function () {\n      dom.background.classList.remove('no-transition');\n    }, 1);\n  }\n  /**\n   * Updates the position of the parallax background based\n   * on the current slide index.\n   */\n\n\n  function updateParallax() {\n    if (config.parallaxBackgroundImage) {\n      var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR),\n          verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n      var backgroundSize = dom.background.style.backgroundSize.split(' '),\n          backgroundWidth,\n          backgroundHeight;\n\n      if (backgroundSize.length === 1) {\n        backgroundWidth = backgroundHeight = parseInt(backgroundSize[0], 10);\n      } else {\n        backgroundWidth = parseInt(backgroundSize[0], 10);\n        backgroundHeight = parseInt(backgroundSize[1], 10);\n      }\n\n      var slideWidth = dom.background.offsetWidth,\n          horizontalSlideCount = horizontalSlides.length,\n          horizontalOffsetMultiplier,\n          horizontalOffset;\n\n      if (typeof config.parallaxBackgroundHorizontal === 'number') {\n        horizontalOffsetMultiplier = config.parallaxBackgroundHorizontal;\n      } else {\n        horizontalOffsetMultiplier = horizontalSlideCount > 1 ? (backgroundWidth - slideWidth) / (horizontalSlideCount - 1) : 0;\n      }\n\n      horizontalOffset = horizontalOffsetMultiplier * indexh * -1;\n      var slideHeight = dom.background.offsetHeight,\n          verticalSlideCount = verticalSlides.length,\n          verticalOffsetMultiplier,\n          verticalOffset;\n\n      if (typeof config.parallaxBackgroundVertical === 'number') {\n        verticalOffsetMultiplier = config.parallaxBackgroundVertical;\n      } else {\n        verticalOffsetMultiplier = (backgroundHeight - slideHeight) / (verticalSlideCount - 1);\n      }\n\n      verticalOffset = verticalSlideCount > 0 ? verticalOffsetMultiplier * indexv : 0;\n      dom.background.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n    }\n  }\n  /**\n   * Should the given element be preloaded?\n   * Decides based on local element attributes and global config.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  function shouldPreload(element) {\n    // Prefer an explicit global preload setting\n    var preload = config.preloadIframes; // If no global setting is available, fall back on the element's\n    // own preload setting\n\n    if (typeof preload !== 'boolean') {\n      preload = element.hasAttribute('data-preload');\n    }\n\n    return preload;\n  }\n  /**\n   * Called when the given slide is within the configured view\n   * distance. Shows the slide element and loads any content\n   * that is set to load lazily (data-src).\n   *\n   * @param {HTMLElement} slide Slide to show\n   */\n\n\n  function loadSlide(slide, options) {\n    options = options || {}; // Show the slide element\n\n    slide.style.display = config.display; // Media elements with data-src attributes\n\n    toArray(slide.querySelectorAll('img[data-src], video[data-src], audio[data-src], iframe[data-src]')).forEach(function (element) {\n      if (element.tagName !== 'IFRAME' || shouldPreload(element)) {\n        element.setAttribute('src', element.getAttribute('data-src'));\n        element.setAttribute('data-lazy-loaded', '');\n        element.removeAttribute('data-src');\n      }\n    }); // Media elements with <source> children\n\n    toArray(slide.querySelectorAll('video, audio')).forEach(function (media) {\n      var sources = 0;\n      toArray(media.querySelectorAll('source[data-src]')).forEach(function (source) {\n        source.setAttribute('src', source.getAttribute('data-src'));\n        source.removeAttribute('data-src');\n        source.setAttribute('data-lazy-loaded', '');\n        sources += 1;\n      }); // If we rewrote sources for this video/audio element, we need\n      // to manually tell it to load from its new origin\n\n      if (sources > 0) {\n        media.load();\n      }\n    }); // Show the corresponding background element\n\n    var background = slide.slideBackgroundElement;\n\n    if (background) {\n      background.style.display = 'block';\n      var backgroundContent = slide.slideBackgroundContentElement;\n      var backgroundIframe = slide.getAttribute('data-background-iframe'); // If the background contains media, load it\n\n      if (background.hasAttribute('data-loaded') === false) {\n        background.setAttribute('data-loaded', 'true');\n        var backgroundImage = slide.getAttribute('data-background-image'),\n            backgroundVideo = slide.getAttribute('data-background-video'),\n            backgroundVideoLoop = slide.hasAttribute('data-background-video-loop'),\n            backgroundVideoMuted = slide.hasAttribute('data-background-video-muted'); // Images\n\n        if (backgroundImage) {\n          backgroundContent.style.backgroundImage = 'url(' + encodeURI(backgroundImage) + ')';\n        } // Videos\n        else if (backgroundVideo && !isSpeakerNotes()) {\n            var video = document.createElement('video');\n\n            if (backgroundVideoLoop) {\n              video.setAttribute('loop', '');\n            }\n\n            if (backgroundVideoMuted) {\n              video.muted = true;\n            } // Inline video playback works (at least in Mobile Safari) as\n            // long as the video is muted and the `playsinline` attribute is\n            // present\n\n\n            if (isMobileDevice) {\n              video.muted = true;\n              video.autoplay = true;\n              video.setAttribute('playsinline', '');\n            } // Support comma separated lists of video sources\n\n\n            backgroundVideo.split(',').forEach(function (source) {\n              video.innerHTML += '<source src=\"' + source + '\">';\n            });\n            backgroundContent.appendChild(video);\n          } // Iframes\n          else if (backgroundIframe && options.excludeIframes !== true) {\n              var iframe = document.createElement('iframe');\n              iframe.setAttribute('allowfullscreen', '');\n              iframe.setAttribute('mozallowfullscreen', '');\n              iframe.setAttribute('webkitallowfullscreen', '');\n              iframe.setAttribute('allow', 'autoplay');\n              iframe.setAttribute('data-src', backgroundIframe);\n              iframe.style.width = '100%';\n              iframe.style.height = '100%';\n              iframe.style.maxHeight = '100%';\n              iframe.style.maxWidth = '100%';\n              backgroundContent.appendChild(iframe);\n            }\n      } // Start loading preloadable iframes\n\n\n      var backgroundIframeElement = backgroundContent.querySelector('iframe[data-src]');\n\n      if (backgroundIframeElement) {\n        // Check if this iframe is eligible to be preloaded\n        if (shouldPreload(background) && !/autoplay=(1|true|yes)/gi.test(backgroundIframe)) {\n          if (backgroundIframeElement.getAttribute('src') !== backgroundIframe) {\n            backgroundIframeElement.setAttribute('src', backgroundIframe);\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Unloads and hides the given slide. This is called when the\n   * slide is moved outside of the configured view distance.\n   *\n   * @param {HTMLElement} slide\n   */\n\n\n  function unloadSlide(slide) {\n    // Hide the slide element\n    slide.style.display = 'none'; // Hide the corresponding background element\n\n    var background = getSlideBackground(slide);\n\n    if (background) {\n      background.style.display = 'none'; // Unload any background iframes\n\n      toArray(background.querySelectorAll('iframe[src]')).forEach(function (element) {\n        element.removeAttribute('src');\n      });\n    } // Reset lazy-loaded media elements with src attributes\n\n\n    toArray(slide.querySelectorAll('video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]')).forEach(function (element) {\n      element.setAttribute('data-src', element.getAttribute('src'));\n      element.removeAttribute('src');\n    }); // Reset lazy-loaded media elements with <source> children\n\n    toArray(slide.querySelectorAll('video[data-lazy-loaded] source[src], audio source[src]')).forEach(function (source) {\n      source.setAttribute('data-src', source.getAttribute('src'));\n      source.removeAttribute('src');\n    });\n  }\n  /**\n   * Determine what available routes there are for navigation.\n   *\n   * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n   */\n\n\n  function availableRoutes() {\n    var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR),\n        verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n    var routes = {\n      left: indexh > 0,\n      right: indexh < horizontalSlides.length - 1,\n      up: indexv > 0,\n      down: indexv < verticalSlides.length - 1\n    }; // Looped presentations can always be navigated as long as\n    // there are slides available\n\n    if (config.loop) {\n      if (horizontalSlides.length > 1) {\n        routes.left = true;\n        routes.right = true;\n      }\n\n      if (verticalSlides.length > 1) {\n        routes.up = true;\n        routes.down = true;\n      }\n    } // Reverse horizontal controls for rtl\n\n\n    if (config.rtl) {\n      var left = routes.left;\n      routes.left = routes.right;\n      routes.right = left;\n    }\n\n    return routes;\n  }\n  /**\n   * Returns an object describing the available fragment\n   * directions.\n   *\n   * @return {{prev: boolean, next: boolean}}\n   */\n\n\n  function availableFragments() {\n    if (currentSlide && config.fragments) {\n      var fragments = currentSlide.querySelectorAll('.fragment');\n      var hiddenFragments = currentSlide.querySelectorAll('.fragment:not(.visible)');\n      return {\n        prev: fragments.length - hiddenFragments.length > 0,\n        next: !!hiddenFragments.length\n      };\n    } else {\n      return {\n        prev: false,\n        next: false\n      };\n    }\n  }\n  /**\n   * Enforces origin-specific format rules for embedded media.\n   */\n\n\n  function formatEmbeddedContent() {\n    var _appendParamToIframeSource = function (sourceAttribute, sourceURL, param) {\n      toArray(dom.slides.querySelectorAll('iframe[' + sourceAttribute + '*=\"' + sourceURL + '\"]')).forEach(function (el) {\n        var src = el.getAttribute(sourceAttribute);\n\n        if (src && src.indexOf(param) === -1) {\n          el.setAttribute(sourceAttribute, src + (!/\\?/.test(src) ? '?' : '&') + param);\n        }\n      });\n    }; // YouTube frames must include \"?enablejsapi=1\"\n\n\n    _appendParamToIframeSource('src', 'youtube.com/embed/', 'enablejsapi=1');\n\n    _appendParamToIframeSource('data-src', 'youtube.com/embed/', 'enablejsapi=1'); // Vimeo frames must include \"?api=1\"\n\n\n    _appendParamToIframeSource('src', 'player.vimeo.com/', 'api=1');\n\n    _appendParamToIframeSource('data-src', 'player.vimeo.com/', 'api=1');\n  }\n  /**\n   * Start playback of any embedded content inside of\n   * the given element.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  function startEmbeddedContent(element) {\n    if (element && !isSpeakerNotes()) {\n      // Restart GIFs\n      toArray(element.querySelectorAll('img[src$=\".gif\"]')).forEach(function (el) {\n        // Setting the same unchanged source like this was confirmed\n        // to work in Chrome, FF & Safari\n        el.setAttribute('src', el.getAttribute('src'));\n      }); // HTML5 media elements\n\n      toArray(element.querySelectorAll('video, audio')).forEach(function (el) {\n        if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n          return;\n        } // Prefer an explicit global autoplay setting\n\n\n        var autoplay = config.autoPlayMedia; // If no global setting is available, fall back on the element's\n        // own autoplay setting\n\n        if (typeof autoplay !== 'boolean') {\n          autoplay = el.hasAttribute('data-autoplay') || !!closestParent(el, '.slide-background');\n        }\n\n        if (autoplay && typeof el.play === 'function') {\n          // If the media is ready, start playback\n          if (el.readyState > 1) {\n            startEmbeddedMedia({\n              target: el\n            });\n          } // Mobile devices never fire a loaded event so instead\n          // of waiting, we initiate playback\n          else if (isMobileDevice) {\n              var promise = el.play(); // If autoplay does not work, ensure that the controls are visible so\n              // that the viewer can start the media on their own\n\n              if (promise && typeof promise.catch === 'function' && el.controls === false) {\n                promise.catch(function () {\n                  el.controls = true; // Once the video does start playing, hide the controls again\n\n                  el.addEventListener('play', function () {\n                    el.controls = false;\n                  });\n                });\n              }\n            } // If the media isn't loaded, wait before playing\n            else {\n                el.removeEventListener('loadeddata', startEmbeddedMedia); // remove first to avoid dupes\n\n                el.addEventListener('loadeddata', startEmbeddedMedia);\n              }\n        }\n      }); // Normal iframes\n\n      toArray(element.querySelectorAll('iframe[src]')).forEach(function (el) {\n        if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n          return;\n        }\n\n        startEmbeddedIframe({\n          target: el\n        });\n      }); // Lazy loading iframes\n\n      toArray(element.querySelectorAll('iframe[data-src]')).forEach(function (el) {\n        if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n          return;\n        }\n\n        if (el.getAttribute('src') !== el.getAttribute('data-src')) {\n          el.removeEventListener('load', startEmbeddedIframe); // remove first to avoid dupes\n\n          el.addEventListener('load', startEmbeddedIframe);\n          el.setAttribute('src', el.getAttribute('data-src'));\n        }\n      });\n    }\n  }\n  /**\n   * Starts playing an embedded video/audio element after\n   * it has finished loading.\n   *\n   * @param {object} event\n   */\n\n\n  function startEmbeddedMedia(event) {\n    var isAttachedToDOM = !!closestParent(event.target, 'html'),\n        isVisible = !!closestParent(event.target, '.present');\n\n    if (isAttachedToDOM && isVisible) {\n      event.target.currentTime = 0;\n      event.target.play();\n    }\n\n    event.target.removeEventListener('loadeddata', startEmbeddedMedia);\n  }\n  /**\n   * \"Starts\" the content of an embedded iframe using the\n   * postMessage API.\n   *\n   * @param {object} event\n   */\n\n\n  function startEmbeddedIframe(event) {\n    var iframe = event.target;\n\n    if (iframe && iframe.contentWindow) {\n      var isAttachedToDOM = !!closestParent(event.target, 'html'),\n          isVisible = !!closestParent(event.target, '.present');\n\n      if (isAttachedToDOM && isVisible) {\n        // Prefer an explicit global autoplay setting\n        var autoplay = config.autoPlayMedia; // If no global setting is available, fall back on the element's\n        // own autoplay setting\n\n        if (typeof autoplay !== 'boolean') {\n          autoplay = iframe.hasAttribute('data-autoplay') || !!closestParent(iframe, '.slide-background');\n        } // YouTube postMessage API\n\n\n        if (/youtube\\.com\\/embed\\//.test(iframe.getAttribute('src')) && autoplay) {\n          iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*');\n        } // Vimeo postMessage API\n        else if (/player\\.vimeo\\.com\\//.test(iframe.getAttribute('src')) && autoplay) {\n            iframe.contentWindow.postMessage('{\"method\":\"play\"}', '*');\n          } // Generic postMessage API\n          else {\n              iframe.contentWindow.postMessage('slide:start', '*');\n            }\n      }\n    }\n  }\n  /**\n   * Stop playback of any embedded content inside of\n   * the targeted slide.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  function stopEmbeddedContent(element, options) {\n    options = extend({\n      // Defaults\n      unloadIframes: true\n    }, options || {});\n\n    if (element && element.parentNode) {\n      // HTML5 media elements\n      toArray(element.querySelectorAll('video, audio')).forEach(function (el) {\n        if (!el.hasAttribute('data-ignore') && typeof el.pause === 'function') {\n          el.setAttribute('data-paused-by-reveal', '');\n          el.pause();\n        }\n      }); // Generic postMessage API for non-lazy loaded iframes\n\n      toArray(element.querySelectorAll('iframe')).forEach(function (el) {\n        if (el.contentWindow) el.contentWindow.postMessage('slide:stop', '*');\n        el.removeEventListener('load', startEmbeddedIframe);\n      }); // YouTube postMessage API\n\n      toArray(element.querySelectorAll('iframe[src*=\"youtube.com/embed/\"]')).forEach(function (el) {\n        if (!el.hasAttribute('data-ignore') && el.contentWindow && typeof el.contentWindow.postMessage === 'function') {\n          el.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n        }\n      }); // Vimeo postMessage API\n\n      toArray(element.querySelectorAll('iframe[src*=\"player.vimeo.com/\"]')).forEach(function (el) {\n        if (!el.hasAttribute('data-ignore') && el.contentWindow && typeof el.contentWindow.postMessage === 'function') {\n          el.contentWindow.postMessage('{\"method\":\"pause\"}', '*');\n        }\n      });\n\n      if (options.unloadIframes === true) {\n        // Unload lazy-loaded iframes\n        toArray(element.querySelectorAll('iframe[data-src]')).forEach(function (el) {\n          // Only removing the src doesn't actually unload the frame\n          // in all browsers (Firefox) so we set it to blank first\n          el.setAttribute('src', 'about:blank');\n          el.removeAttribute('src');\n        });\n      }\n    }\n  }\n  /**\n   * Returns the number of past slides. This can be used as a global\n   * flattened index for slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n   *\n   * @return {number} Past slide count\n   */\n\n\n  function getSlidePastCount(slide) {\n    if (slide === undefined) {\n      slide = currentSlide;\n    }\n\n    var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)); // The number of past slides\n\n    var pastCount = 0; // Step through all slides and count the past ones\n\n    mainLoop: for (var i = 0; i < horizontalSlides.length; i++) {\n      var horizontalSlide = horizontalSlides[i];\n      var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n\n      for (var j = 0; j < verticalSlides.length; j++) {\n        // Stop as soon as we arrive at the present\n        if (verticalSlides[j] === slide) {\n          break mainLoop;\n        }\n\n        pastCount++;\n      } // Stop as soon as we arrive at the present\n\n\n      if (horizontalSlide === slide) {\n        break;\n      } // Don't count the wrapping section for vertical slides\n\n\n      if (horizontalSlide.classList.contains('stack') === false) {\n        pastCount++;\n      }\n    }\n\n    return pastCount;\n  }\n  /**\n   * Returns a value ranging from 0-1 that represents\n   * how far into the presentation we have navigated.\n   *\n   * @return {number}\n   */\n\n\n  function getProgress() {\n    // The number of past and total slides\n    var totalCount = getTotalSlides();\n    var pastCount = getSlidePastCount();\n\n    if (currentSlide) {\n      var allFragments = currentSlide.querySelectorAll('.fragment'); // If there are fragments in the current slide those should be\n      // accounted for in the progress.\n\n      if (allFragments.length > 0) {\n        var visibleFragments = currentSlide.querySelectorAll('.fragment.visible'); // This value represents how big a portion of the slide progress\n        // that is made up by its fragments (0-1)\n\n        var fragmentWeight = 0.9; // Add fragment progress to the past slide count\n\n        pastCount += visibleFragments.length / allFragments.length * fragmentWeight;\n      }\n    }\n\n    return Math.min(pastCount / (totalCount - 1), 1);\n  }\n  /**\n   * Checks if this presentation is running inside of the\n   * speaker notes window.\n   *\n   * @return {boolean}\n   */\n\n\n  function isSpeakerNotes() {\n    return !!window.location.search.match(/receiver/gi);\n  }\n  /**\n   * Reads the current URL (hash) and navigates accordingly.\n   */\n\n\n  function readURL() {\n    var hash = window.location.hash; // Attempt to parse the hash as either an index or name\n\n    var bits = hash.slice(2).split('/'),\n        name = hash.replace(/#|\\//gi, ''); // If the first bit is not fully numeric and there is a name we\n    // can assume that this is a named link\n\n    if (!/^[0-9]*$/.test(bits[0]) && name.length) {\n      var element; // Ensure the named link is a valid HTML ID attribute\n\n      try {\n        element = document.getElementById(decodeURIComponent(name));\n      } catch (error) {} // Ensure that we're not already on a slide with the same name\n\n\n      var isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute('id') === name : false;\n\n      if (element) {\n        // If the slide exists and is not the current slide...\n        if (!isSameNameAsCurrentSlide) {\n          // ...find the position of the named slide and navigate to it\n          var indices = Reveal.getIndices(element);\n          slide(indices.h, indices.v);\n        }\n      } // If the slide doesn't exist, navigate to the current slide\n      else {\n          slide(indexh || 0, indexv || 0);\n        }\n    } else {\n      var hashIndexBase = config.hashOneBasedIndex ? 1 : 0; // Read the index components of the hash\n\n      var h = parseInt(bits[0], 10) - hashIndexBase || 0,\n          v = parseInt(bits[1], 10) - hashIndexBase || 0,\n          f;\n\n      if (config.fragmentInURL) {\n        f = parseInt(bits[2], 10);\n\n        if (isNaN(f)) {\n          f = undefined;\n        }\n      }\n\n      if (h !== indexh || v !== indexv || f !== undefined) {\n        slide(h, v, f);\n      }\n    }\n  }\n  /**\n   * Updates the page URL (hash) to reflect the current\n   * state.\n   *\n   * @param {number} delay The time in ms to wait before\n   * writing the hash\n   */\n\n\n  function writeURL(delay) {\n    // Make sure there's never more than one timeout running\n    clearTimeout(writeURLTimeout); // If a delay is specified, timeout this call\n\n    if (typeof delay === 'number') {\n      writeURLTimeout = setTimeout(writeURL, delay);\n    } else if (currentSlide) {\n      // If we're configured to push to history OR the history\n      // API is not avaialble.\n      if (config.history || !window.history) {\n        window.location.hash = locationHash();\n      } // If we're configured to reflect the current slide in the\n      // URL without pushing to history.\n      else if (config.hash) {\n          window.history.replaceState(null, null, '#' + locationHash());\n        } // If history and hash are both disabled, a hash may still\n        // be added to the URL by clicking on a href with a hash\n        // target. Counter this by always removing the hash.\n        else {\n            window.history.replaceState(null, null, window.location.pathname + window.location.search);\n          }\n    }\n  }\n  /**\n   * Retrieves the h/v location and fragment of the current,\n   * or specified, slide.\n   *\n   * @param {HTMLElement} [slide] If specified, the returned\n   * index will be for this slide rather than the currently\n   * active one\n   *\n   * @return {{h: number, v: number, f: number}}\n   */\n\n\n  function getIndices(slide) {\n    // By default, return the current indices\n    var h = indexh,\n        v = indexv,\n        f; // If a slide is specified, return the indices of that slide\n\n    if (slide) {\n      var isVertical = isVerticalSlide(slide);\n      var slideh = isVertical ? slide.parentNode : slide; // Select all horizontal slides\n\n      var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)); // Now that we know which the horizontal slide is, get its index\n\n      h = Math.max(horizontalSlides.indexOf(slideh), 0); // Assume we're not vertical\n\n      v = undefined; // If this is a vertical slide, grab the vertical index\n\n      if (isVertical) {\n        v = Math.max(toArray(slide.parentNode.querySelectorAll('section')).indexOf(slide), 0);\n      }\n    }\n\n    if (!slide && currentSlide) {\n      var hasFragments = currentSlide.querySelectorAll('.fragment').length > 0;\n\n      if (hasFragments) {\n        var currentFragment = currentSlide.querySelector('.current-fragment');\n\n        if (currentFragment && currentFragment.hasAttribute('data-fragment-index')) {\n          f = parseInt(currentFragment.getAttribute('data-fragment-index'), 10);\n        } else {\n          f = currentSlide.querySelectorAll('.fragment.visible').length - 1;\n        }\n      }\n    }\n\n    return {\n      h: h,\n      v: v,\n      f: f\n    };\n  }\n  /**\n   * Retrieves all slides in this presentation.\n   */\n\n\n  function getSlides() {\n    return toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ':not(.stack)'));\n  }\n  /**\n   * Returns a list of all horizontal slides in the deck. Each\n   * vertical stack is included as one horizontal slide in the\n   * resulting array.\n   */\n\n\n  function getHorizontalSlides() {\n    return toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n  }\n  /**\n   * Returns all vertical slides that exist within this deck.\n   */\n\n\n  function getVerticalSlides() {\n    return toArray(dom.wrapper.querySelectorAll('.slides>section>section'));\n  }\n  /**\n   * Returns true if there are at least two horizontal slides.\n   */\n\n\n  function hasHorizontalSlides() {\n    return getHorizontalSlides().length > 1;\n  }\n  /**\n   * Returns true if there are at least two vertical slides.\n   */\n\n\n  function hasVerticalSlides() {\n    return getVerticalSlides().length > 1;\n  }\n  /**\n   * Returns an array of objects where each object represents the\n   * attributes on its respective slide.\n   */\n\n\n  function getSlidesAttributes() {\n    return getSlides().map(function (slide) {\n      var attributes = {};\n\n      for (var i = 0; i < slide.attributes.length; i++) {\n        var attribute = slide.attributes[i];\n        attributes[attribute.name] = attribute.value;\n      }\n\n      return attributes;\n    });\n  }\n  /**\n   * Retrieves the total number of slides in this presentation.\n   *\n   * @return {number}\n   */\n\n\n  function getTotalSlides() {\n    return getSlides().length;\n  }\n  /**\n   * Returns the slide element matching the specified index.\n   *\n   * @return {HTMLElement}\n   */\n\n\n  function getSlide(x, y) {\n    var horizontalSlide = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)[x];\n    var verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll('section');\n\n    if (verticalSlides && verticalSlides.length && typeof y === 'number') {\n      return verticalSlides ? verticalSlides[y] : undefined;\n    }\n\n    return horizontalSlide;\n  }\n  /**\n   * Returns the background element for the given slide.\n   * All slides, even the ones with no background properties\n   * defined, have a background element so as long as the\n   * index is valid an element will be returned.\n   *\n   * @param {mixed} x Horizontal background index OR a slide\n   * HTML element\n   * @param {number} y Vertical background index\n   * @return {(HTMLElement[]|*)}\n   */\n\n\n  function getSlideBackground(x, y) {\n    var slide = typeof x === 'number' ? getSlide(x, y) : x;\n\n    if (slide) {\n      return slide.slideBackgroundElement;\n    }\n\n    return undefined;\n  }\n  /**\n   * Retrieves the speaker notes from a slide. Notes can be\n   * defined in two ways:\n   * 1. As a data-notes attribute on the slide <section>\n   * 2. As an <aside class=\"notes\"> inside of the slide\n   *\n   * @param {HTMLElement} [slide=currentSlide]\n   * @return {(string|null)}\n   */\n\n\n  function getSlideNotes(slide) {\n    // Default to the current slide\n    slide = slide || currentSlide; // Notes can be specified via the data-notes attribute...\n\n    if (slide.hasAttribute('data-notes')) {\n      return slide.getAttribute('data-notes');\n    } // ... or using an <aside class=\"notes\"> element\n\n\n    var notesElement = slide.querySelector('aside.notes');\n\n    if (notesElement) {\n      return notesElement.innerHTML;\n    }\n\n    return null;\n  }\n  /**\n   * Retrieves the current state of the presentation as\n   * an object. This state can then be restored at any\n   * time.\n   *\n   * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n   */\n\n\n  function getState() {\n    var indices = getIndices();\n    return {\n      indexh: indices.h,\n      indexv: indices.v,\n      indexf: indices.f,\n      paused: isPaused(),\n      overview: isOverview()\n    };\n  }\n  /**\n   * Restores the presentation to the given state.\n   *\n   * @param {object} state As generated by getState()\n   * @see {@link getState} generates the parameter `state`\n   */\n\n\n  function setState(state) {\n    if (typeof state === 'object') {\n      slide(deserialize(state.indexh), deserialize(state.indexv), deserialize(state.indexf));\n      var pausedFlag = deserialize(state.paused),\n          overviewFlag = deserialize(state.overview);\n\n      if (typeof pausedFlag === 'boolean' && pausedFlag !== isPaused()) {\n        togglePause(pausedFlag);\n      }\n\n      if (typeof overviewFlag === 'boolean' && overviewFlag !== isOverview()) {\n        toggleOverview(overviewFlag);\n      }\n    }\n  }\n  /**\n   * Return a sorted fragments list, ordered by an increasing\n   * \"data-fragment-index\" attribute.\n   *\n   * Fragments will be revealed in the order that they are returned by\n   * this function, so you can use the index attributes to control the\n   * order of fragment appearance.\n   *\n   * To maintain a sensible default fragment order, fragments are presumed\n   * to be passed in document order. This function adds a \"fragment-index\"\n   * attribute to each node if such an attribute is not already present,\n   * and sets that attribute to an integer value which is the position of\n   * the fragment within the fragments list.\n   *\n   * @param {object[]|*} fragments\n   * @param {boolean} grouped If true the returned array will contain\n   * nested arrays for all fragments with the same index\n   * @return {object[]} sorted Sorted array of fragments\n   */\n\n\n  function sortFragments(fragments, grouped) {\n    fragments = toArray(fragments);\n    var ordered = [],\n        unordered = [],\n        sorted = []; // Group ordered and unordered elements\n\n    fragments.forEach(function (fragment, i) {\n      if (fragment.hasAttribute('data-fragment-index')) {\n        var index = parseInt(fragment.getAttribute('data-fragment-index'), 10);\n\n        if (!ordered[index]) {\n          ordered[index] = [];\n        }\n\n        ordered[index].push(fragment);\n      } else {\n        unordered.push([fragment]);\n      }\n    }); // Append fragments without explicit indices in their\n    // DOM order\n\n    ordered = ordered.concat(unordered); // Manually count the index up per group to ensure there\n    // are no gaps\n\n    var index = 0; // Push all fragments in their sorted order to an array,\n    // this flattens the groups\n\n    ordered.forEach(function (group) {\n      group.forEach(function (fragment) {\n        sorted.push(fragment);\n        fragment.setAttribute('data-fragment-index', index);\n      });\n      index++;\n    });\n    return grouped === true ? ordered : sorted;\n  }\n  /**\n   * Refreshes the fragments on the current slide so that they\n   * have the appropriate classes (.visible + .current-fragment).\n   *\n   * @param {number} [index] The index of the current fragment\n   * @param {array} [fragments] Array containing all fragments\n   * in the current slide\n   *\n   * @return {{shown: array, hidden: array}}\n   */\n\n\n  function updateFragments(index, fragments) {\n    var changedFragments = {\n      shown: [],\n      hidden: []\n    };\n\n    if (currentSlide && config.fragments) {\n      fragments = fragments || sortFragments(currentSlide.querySelectorAll('.fragment'));\n\n      if (fragments.length) {\n        var maxIndex = 0;\n\n        if (typeof index !== 'number') {\n          var currentFragment = sortFragments(currentSlide.querySelectorAll('.fragment.visible')).pop();\n\n          if (currentFragment) {\n            index = parseInt(currentFragment.getAttribute('data-fragment-index') || 0, 10);\n          }\n        }\n\n        toArray(fragments).forEach(function (el, i) {\n          if (el.hasAttribute('data-fragment-index')) {\n            i = parseInt(el.getAttribute('data-fragment-index'), 10);\n          }\n\n          maxIndex = Math.max(maxIndex, i); // Visible fragments\n\n          if (i <= index) {\n            if (!el.classList.contains('visible')) changedFragments.shown.push(el);\n            el.classList.add('visible');\n            el.classList.remove('current-fragment'); // Announce the fragments one by one to the Screen Reader\n\n            dom.statusDiv.textContent = getStatusText(el);\n\n            if (i === index) {\n              el.classList.add('current-fragment');\n              startEmbeddedContent(el);\n            }\n          } // Hidden fragments\n          else {\n              if (el.classList.contains('visible')) changedFragments.hidden.push(el);\n              el.classList.remove('visible');\n              el.classList.remove('current-fragment');\n            }\n        }); // Write the current fragment index to the slide <section>.\n        // This can be used by end users to apply styles based on\n        // the current fragment index.\n\n        index = typeof index === 'number' ? index : -1;\n        index = Math.max(Math.min(index, maxIndex), -1);\n        currentSlide.setAttribute('data-fragment', index);\n      }\n    }\n\n    return changedFragments;\n  }\n  /**\n   * Navigate to the specified slide fragment.\n   *\n   * @param {?number} index The index of the fragment that\n   * should be shown, -1 means all are invisible\n   * @param {number} offset Integer offset to apply to the\n   * fragment index\n   *\n   * @return {boolean} true if a change was made in any\n   * fragments visibility as part of this call\n   */\n\n\n  function navigateFragment(index, offset) {\n    if (currentSlide && config.fragments) {\n      var fragments = sortFragments(currentSlide.querySelectorAll('.fragment'));\n\n      if (fragments.length) {\n        // If no index is specified, find the current\n        if (typeof index !== 'number') {\n          var lastVisibleFragment = sortFragments(currentSlide.querySelectorAll('.fragment.visible')).pop();\n\n          if (lastVisibleFragment) {\n            index = parseInt(lastVisibleFragment.getAttribute('data-fragment-index') || 0, 10);\n          } else {\n            index = -1;\n          }\n        } // If an offset is specified, apply it to the index\n\n\n        if (typeof offset === 'number') {\n          index += offset;\n        }\n\n        var changedFragments = updateFragments(index, fragments);\n\n        if (changedFragments.hidden.length) {\n          dispatchEvent('fragmenthidden', {\n            fragment: changedFragments.hidden[0],\n            fragments: changedFragments.hidden\n          });\n        }\n\n        if (changedFragments.shown.length) {\n          dispatchEvent('fragmentshown', {\n            fragment: changedFragments.shown[0],\n            fragments: changedFragments.shown\n          });\n        }\n\n        updateControls();\n        updateProgress();\n\n        if (config.fragmentInURL) {\n          writeURL();\n        }\n\n        return !!(changedFragments.shown.length || changedFragments.hidden.length);\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Navigate to the next slide fragment.\n   *\n   * @return {boolean} true if there was a next fragment,\n   * false otherwise\n   */\n\n\n  function nextFragment() {\n    return navigateFragment(null, 1);\n  }\n  /**\n   * Navigate to the previous slide fragment.\n   *\n   * @return {boolean} true if there was a previous fragment,\n   * false otherwise\n   */\n\n\n  function previousFragment() {\n    return navigateFragment(null, -1);\n  }\n  /**\n   * Cues a new automated slide if enabled in the config.\n   */\n\n\n  function cueAutoSlide() {\n    cancelAutoSlide();\n\n    if (currentSlide && config.autoSlide !== false) {\n      var fragment = currentSlide.querySelector('.current-fragment'); // When the slide first appears there is no \"current\" fragment so\n      // we look for a data-autoslide timing on the first fragment\n\n      if (!fragment) fragment = currentSlide.querySelector('.fragment');\n      var fragmentAutoSlide = fragment ? fragment.getAttribute('data-autoslide') : null;\n      var parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute('data-autoslide') : null;\n      var slideAutoSlide = currentSlide.getAttribute('data-autoslide'); // Pick value in the following priority order:\n      // 1. Current fragment's data-autoslide\n      // 2. Current slide's data-autoslide\n      // 3. Parent slide's data-autoslide\n      // 4. Global autoSlide setting\n\n      if (fragmentAutoSlide) {\n        autoSlide = parseInt(fragmentAutoSlide, 10);\n      } else if (slideAutoSlide) {\n        autoSlide = parseInt(slideAutoSlide, 10);\n      } else if (parentAutoSlide) {\n        autoSlide = parseInt(parentAutoSlide, 10);\n      } else {\n        autoSlide = config.autoSlide;\n      } // If there are media elements with data-autoplay,\n      // automatically set the autoSlide duration to the\n      // length of that media. Not applicable if the slide\n      // is divided up into fragments.\n      // playbackRate is accounted for in the duration.\n\n\n      if (currentSlide.querySelectorAll('.fragment').length === 0) {\n        toArray(currentSlide.querySelectorAll('video, audio')).forEach(function (el) {\n          if (el.hasAttribute('data-autoplay')) {\n            if (autoSlide && el.duration * 1000 / el.playbackRate > autoSlide) {\n              autoSlide = el.duration * 1000 / el.playbackRate + 1000;\n            }\n          }\n        });\n      } // Cue the next auto-slide if:\n      // - There is an autoSlide value\n      // - Auto-sliding isn't paused by the user\n      // - The presentation isn't paused\n      // - The overview isn't active\n      // - The presentation isn't over\n\n\n      if (autoSlide && !autoSlidePaused && !isPaused() && !isOverview() && (!Reveal.isLastSlide() || availableFragments().next || config.loop === true)) {\n        autoSlideTimeout = setTimeout(function () {\n          typeof config.autoSlideMethod === 'function' ? config.autoSlideMethod() : navigateNext();\n          cueAutoSlide();\n        }, autoSlide);\n        autoSlideStartTime = Date.now();\n      }\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n      }\n    }\n  }\n  /**\n   * Cancels any ongoing request to auto-slide.\n   */\n\n\n  function cancelAutoSlide() {\n    clearTimeout(autoSlideTimeout);\n    autoSlideTimeout = -1;\n  }\n\n  function pauseAutoSlide() {\n    if (autoSlide && !autoSlidePaused) {\n      autoSlidePaused = true;\n      dispatchEvent('autoslidepaused');\n      clearTimeout(autoSlideTimeout);\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(false);\n      }\n    }\n  }\n\n  function resumeAutoSlide() {\n    if (autoSlide && autoSlidePaused) {\n      autoSlidePaused = false;\n      dispatchEvent('autoslideresumed');\n      cueAutoSlide();\n    }\n  }\n\n  function navigateLeft() {\n    // Reverse for RTL\n    if (config.rtl) {\n      if ((isOverview() || nextFragment() === false) && availableRoutes().left) {\n        slide(indexh + 1, config.navigationMode === 'grid' ? indexv : undefined);\n      }\n    } // Normal navigation\n    else if ((isOverview() || previousFragment() === false) && availableRoutes().left) {\n        slide(indexh - 1, config.navigationMode === 'grid' ? indexv : undefined);\n      }\n  }\n\n  function navigateRight() {\n    hasNavigatedRight = true; // Reverse for RTL\n\n    if (config.rtl) {\n      if ((isOverview() || previousFragment() === false) && availableRoutes().right) {\n        slide(indexh - 1, config.navigationMode === 'grid' ? indexv : undefined);\n      }\n    } // Normal navigation\n    else if ((isOverview() || nextFragment() === false) && availableRoutes().right) {\n        slide(indexh + 1, config.navigationMode === 'grid' ? indexv : undefined);\n      }\n  }\n\n  function navigateUp() {\n    // Prioritize hiding fragments\n    if ((isOverview() || previousFragment() === false) && availableRoutes().up) {\n      slide(indexh, indexv - 1);\n    }\n  }\n\n  function navigateDown() {\n    hasNavigatedDown = true; // Prioritize revealing fragments\n\n    if ((isOverview() || nextFragment() === false) && availableRoutes().down) {\n      slide(indexh, indexv + 1);\n    }\n  }\n  /**\n   * Navigates backwards, prioritized in the following order:\n   * 1) Previous fragment\n   * 2) Previous vertical slide\n   * 3) Previous horizontal slide\n   */\n\n\n  function navigatePrev() {\n    // Prioritize revealing fragments\n    if (previousFragment() === false) {\n      if (availableRoutes().up) {\n        navigateUp();\n      } else {\n        // Fetch the previous horizontal slide, if there is one\n        var previousSlide;\n\n        if (config.rtl) {\n          previousSlide = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.future')).pop();\n        } else {\n          previousSlide = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.past')).pop();\n        }\n\n        if (previousSlide) {\n          var v = previousSlide.querySelectorAll('section').length - 1 || undefined;\n          var h = indexh - 1;\n          slide(h, v);\n        }\n      }\n    }\n  }\n  /**\n   * The reverse of #navigatePrev().\n   */\n\n\n  function navigateNext() {\n    hasNavigatedRight = true;\n    hasNavigatedDown = true; // Prioritize revealing fragments\n\n    if (nextFragment() === false) {\n      var routes = availableRoutes(); // When looping is enabled `routes.down` is always available\n      // so we need a separate check for when we've reached the\n      // end of a stack and should move horizontally\n\n      if (routes.down && routes.right && config.loop && Reveal.isLastVerticalSlide(currentSlide)) {\n        routes.down = false;\n      }\n\n      if (routes.down) {\n        navigateDown();\n      } else if (config.rtl) {\n        navigateLeft();\n      } else {\n        navigateRight();\n      }\n    }\n  }\n  /**\n   * Checks if the target element prevents the triggering of\n   * swipe navigation.\n   */\n\n\n  function isSwipePrevented(target) {\n    while (target && typeof target.hasAttribute === 'function') {\n      if (target.hasAttribute('data-prevent-swipe')) return true;\n      target = target.parentNode;\n    }\n\n    return false;\n  } // --------------------------------------------------------------------//\n  // ----------------------------- EVENTS -------------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Called by all event handlers that are based on user\n   * input.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onUserInput(event) {\n    if (config.autoSlideStoppable) {\n      pauseAutoSlide();\n    }\n  }\n  /**\n   * Called whenever there is mouse input at the document level\n   * to determine if the cursor is active or not.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentCursorActive(event) {\n    showCursor();\n    clearTimeout(cursorInactiveTimeout);\n    cursorInactiveTimeout = setTimeout(hideCursor, config.hideCursorTime);\n  }\n  /**\n   * Handler for the document level 'keypress' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentKeyPress(event) {\n    // Check if the pressed key is question mark\n    if (event.shiftKey && event.charCode === 63) {\n      toggleHelp();\n    }\n  }\n  /**\n   * Handler for the document level 'keydown' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentKeyDown(event) {\n    // If there's a condition specified and it returns false,\n    // ignore this event\n    if (typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false) {\n      return true;\n    } // Shorthand\n\n\n    var keyCode = event.keyCode; // Remember if auto-sliding was paused so we can toggle it\n\n    var autoSlideWasPaused = autoSlidePaused;\n    onUserInput(event); // Is there a focused element that could be using the keyboard?\n\n    var activeElementIsCE = document.activeElement && document.activeElement.contentEditable !== 'inherit';\n    var activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test(document.activeElement.tagName);\n    var activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test(document.activeElement.className); // Whitelist specific modified + keycode combinations\n\n    var prevSlideShortcut = event.shiftKey && event.keyCode === 32;\n    var firstSlideShortcut = event.shiftKey && keyCode === 37;\n    var lastSlideShortcut = event.shiftKey && keyCode === 39; // Prevent all other events when a modifier is pressed\n\n    var unusedModifier = !prevSlideShortcut && !firstSlideShortcut && !lastSlideShortcut && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey); // Disregard the event if there's a focused element or a\n    // keyboard modifier key is present\n\n    if (activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier) return; // While paused only allow resume keyboard events; 'b', 'v', '.'\n\n    var resumeKeyCodes = [66, 86, 190, 191];\n    var key; // Custom key bindings for togglePause should be able to resume\n\n    if (typeof config.keyboard === 'object') {\n      for (key in config.keyboard) {\n        if (config.keyboard[key] === 'togglePause') {\n          resumeKeyCodes.push(parseInt(key, 10));\n        }\n      }\n    }\n\n    if (isPaused() && resumeKeyCodes.indexOf(keyCode) === -1) {\n      return false;\n    } // Use linear navigation if we're configured to OR if\n    // the presentation is one-dimensional\n\n\n    var useLinearMode = config.navigationMode === 'linear' || !hasHorizontalSlides() || !hasVerticalSlides();\n    var triggered = false; // 1. User defined key bindings\n\n    if (typeof config.keyboard === 'object') {\n      for (key in config.keyboard) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          var value = config.keyboard[key]; // Callback function\n\n          if (typeof value === 'function') {\n            value.apply(null, [event]);\n          } // String shortcuts to reveal.js API\n          else if (typeof value === 'string' && typeof Reveal[value] === 'function') {\n              Reveal[value].call();\n            }\n\n          triggered = true;\n        }\n      }\n    } // 2. Registered custom key bindings\n\n\n    if (triggered === false) {\n      for (key in registeredKeyBindings) {\n        // Check if this binding matches the pressed key\n        if (parseInt(key, 10) === keyCode) {\n          var action = registeredKeyBindings[key].callback; // Callback function\n\n          if (typeof action === 'function') {\n            action.apply(null, [event]);\n          } // String shortcuts to reveal.js API\n          else if (typeof action === 'string' && typeof Reveal[action] === 'function') {\n              Reveal[action].call();\n            }\n\n          triggered = true;\n        }\n      }\n    } // 3. System defined key bindings\n\n\n    if (triggered === false) {\n      // Assume true and try to prove false\n      triggered = true; // P, PAGE UP\n\n      if (keyCode === 80 || keyCode === 33) {\n        navigatePrev();\n      } // N, PAGE DOWN\n      else if (keyCode === 78 || keyCode === 34) {\n          navigateNext();\n        } // H, LEFT\n        else if (keyCode === 72 || keyCode === 37) {\n            if (firstSlideShortcut) {\n              slide(0);\n            } else if (!isOverview() && useLinearMode) {\n              navigatePrev();\n            } else {\n              navigateLeft();\n            }\n          } // L, RIGHT\n          else if (keyCode === 76 || keyCode === 39) {\n              if (lastSlideShortcut) {\n                slide(Number.MAX_VALUE);\n              } else if (!isOverview() && useLinearMode) {\n                navigateNext();\n              } else {\n                navigateRight();\n              }\n            } // K, UP\n            else if (keyCode === 75 || keyCode === 38) {\n                if (!isOverview() && useLinearMode) {\n                  navigatePrev();\n                } else {\n                  navigateUp();\n                }\n              } // J, DOWN\n              else if (keyCode === 74 || keyCode === 40) {\n                  if (!isOverview() && useLinearMode) {\n                    navigateNext();\n                  } else {\n                    navigateDown();\n                  }\n                } // HOME\n                else if (keyCode === 36) {\n                    slide(0);\n                  } // END\n                  else if (keyCode === 35) {\n                      slide(Number.MAX_VALUE);\n                    } // SPACE\n                    else if (keyCode === 32) {\n                        if (isOverview()) {\n                          deactivateOverview();\n                        }\n\n                        if (event.shiftKey) {\n                          navigatePrev();\n                        } else {\n                          navigateNext();\n                        }\n                      } // TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n                      else if (keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191) {\n                          togglePause();\n                        } // F\n                        else if (keyCode === 70) {\n                            enterFullscreen();\n                          } // A\n                          else if (keyCode === 65) {\n                              if (config.autoSlideStoppable) {\n                                toggleAutoSlide(autoSlideWasPaused);\n                              }\n                            } else {\n                              triggered = false;\n                            }\n    } // If the input resulted in a triggered action we should prevent\n    // the browsers default behavior\n\n\n    if (triggered) {\n      event.preventDefault && event.preventDefault();\n    } // ESC or O key\n    else if ((keyCode === 27 || keyCode === 79) && features.transforms3d) {\n        if (dom.overlay) {\n          closeOverlay();\n        } else {\n          toggleOverview();\n        }\n\n        event.preventDefault && event.preventDefault();\n      } // If auto-sliding is enabled we need to cue up\n    // another timeout\n\n\n    cueAutoSlide();\n  }\n  /**\n   * Handler for the 'touchstart' event, enables support for\n   * swipe and pinch gestures.\n   *\n   * @param {object} event\n   */\n\n\n  function onTouchStart(event) {\n    if (isSwipePrevented(event.target)) return true;\n    touch.startX = event.touches[0].clientX;\n    touch.startY = event.touches[0].clientY;\n    touch.startCount = event.touches.length;\n  }\n  /**\n   * Handler for the 'touchmove' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onTouchMove(event) {\n    if (isSwipePrevented(event.target)) return true; // Each touch should only trigger one action\n\n    if (!touch.captured) {\n      onUserInput(event);\n      var currentX = event.touches[0].clientX;\n      var currentY = event.touches[0].clientY; // There was only one touch point, look for a swipe\n\n      if (event.touches.length === 1 && touch.startCount !== 2) {\n        var deltaX = currentX - touch.startX,\n            deltaY = currentY - touch.startY;\n\n        if (deltaX > touch.threshold && Math.abs(deltaX) > Math.abs(deltaY)) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            if (config.rtl) {\n              navigateNext();\n            } else {\n              navigatePrev();\n            }\n          } else {\n            navigateLeft();\n          }\n        } else if (deltaX < -touch.threshold && Math.abs(deltaX) > Math.abs(deltaY)) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            if (config.rtl) {\n              navigatePrev();\n            } else {\n              navigateNext();\n            }\n          } else {\n            navigateRight();\n          }\n        } else if (deltaY > touch.threshold) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            navigatePrev();\n          } else {\n            navigateUp();\n          }\n        } else if (deltaY < -touch.threshold) {\n          touch.captured = true;\n\n          if (config.navigationMode === 'linear') {\n            navigateNext();\n          } else {\n            navigateDown();\n          }\n        } // If we're embedded, only block touch events if they have\n        // triggered an action\n\n\n        if (config.embedded) {\n          if (touch.captured || isVerticalSlide(currentSlide)) {\n            event.preventDefault();\n          }\n        } // Not embedded? Block them all to avoid needless tossing\n        // around of the viewport in iOS\n        else {\n            event.preventDefault();\n          }\n      }\n    } // There's a bug with swiping on some Android devices unless\n    // the default action is always prevented\n    else if (UA.match(/android/gi)) {\n        event.preventDefault();\n      }\n  }\n  /**\n   * Handler for the 'touchend' event.\n   *\n   * @param {object} event\n   */\n\n\n  function onTouchEnd(event) {\n    touch.captured = false;\n  }\n  /**\n   * Convert pointer down to touch start.\n   *\n   * @param {object} event\n   */\n\n\n  function onPointerDown(event) {\n    if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n      event.touches = [{\n        clientX: event.clientX,\n        clientY: event.clientY\n      }];\n      onTouchStart(event);\n    }\n  }\n  /**\n   * Convert pointer move to touch move.\n   *\n   * @param {object} event\n   */\n\n\n  function onPointerMove(event) {\n    if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n      event.touches = [{\n        clientX: event.clientX,\n        clientY: event.clientY\n      }];\n      onTouchMove(event);\n    }\n  }\n  /**\n   * Convert pointer up to touch end.\n   *\n   * @param {object} event\n   */\n\n\n  function onPointerUp(event) {\n    if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n      event.touches = [{\n        clientX: event.clientX,\n        clientY: event.clientY\n      }];\n      onTouchEnd(event);\n    }\n  }\n  /**\n   * Handles mouse wheel scrolling, throttled to avoid skipping\n   * multiple slides.\n   *\n   * @param {object} event\n   */\n\n\n  function onDocumentMouseScroll(event) {\n    if (Date.now() - lastMouseWheelStep > 600) {\n      lastMouseWheelStep = Date.now();\n      var delta = event.detail || -event.wheelDelta;\n\n      if (delta > 0) {\n        navigateNext();\n      } else if (delta < 0) {\n        navigatePrev();\n      }\n    }\n  }\n  /**\n   * Clicking on the progress bar results in a navigation to the\n   * closest approximate horizontal slide using this equation:\n   *\n   * ( clickX / presentationWidth ) * numberOfSlides\n   *\n   * @param {object} event\n   */\n\n\n  function onProgressClicked(event) {\n    onUserInput(event);\n    event.preventDefault();\n    var slidesTotal = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).length;\n    var slideIndex = Math.floor(event.clientX / dom.wrapper.offsetWidth * slidesTotal);\n\n    if (config.rtl) {\n      slideIndex = slidesTotal - slideIndex;\n    }\n\n    slide(slideIndex);\n  }\n  /**\n   * Event handler for navigation control buttons.\n   */\n\n\n  function onNavigateLeftClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    config.navigationMode === 'linear' ? navigatePrev() : navigateLeft();\n  }\n\n  function onNavigateRightClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    config.navigationMode === 'linear' ? navigateNext() : navigateRight();\n  }\n\n  function onNavigateUpClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigateUp();\n  }\n\n  function onNavigateDownClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigateDown();\n  }\n\n  function onNavigatePrevClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigatePrev();\n  }\n\n  function onNavigateNextClicked(event) {\n    event.preventDefault();\n    onUserInput();\n    navigateNext();\n  }\n  /**\n   * Handler for the window level 'hashchange' event.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onWindowHashChange(event) {\n    readURL();\n  }\n  /**\n   * Handler for the window level 'resize' event.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onWindowResize(event) {\n    layout();\n  }\n  /**\n   * Handle for the window level 'visibilitychange' event.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onPageVisibilityChange(event) {\n    var isHidden = document.webkitHidden || document.msHidden || document.hidden; // If, after clicking a link or similar and we're coming back,\n    // focus the document.body to ensure we can use keyboard shortcuts\n\n    if (isHidden === false && document.activeElement !== document.body) {\n      // Not all elements support .blur() - SVGs among them.\n      if (typeof document.activeElement.blur === 'function') {\n        document.activeElement.blur();\n      }\n\n      document.body.focus();\n    }\n  }\n  /**\n   * Invoked when a slide is and we're in the overview.\n   *\n   * @param {object} event\n   */\n\n\n  function onOverviewSlideClicked(event) {\n    // TODO There's a bug here where the event listeners are not\n    // removed after deactivating the overview.\n    if (eventsAreBound && isOverview()) {\n      event.preventDefault();\n      var element = event.target;\n\n      while (element && !element.nodeName.match(/section/gi)) {\n        element = element.parentNode;\n      }\n\n      if (element && !element.classList.contains('disabled')) {\n        deactivateOverview();\n\n        if (element.nodeName.match(/section/gi)) {\n          var h = parseInt(element.getAttribute('data-index-h'), 10),\n              v = parseInt(element.getAttribute('data-index-v'), 10);\n          slide(h, v);\n        }\n      }\n    }\n  }\n  /**\n   * Handles clicks on links that are set to preview in the\n   * iframe overlay.\n   *\n   * @param {object} event\n   */\n\n\n  function onPreviewLinkClicked(event) {\n    if (event.currentTarget && event.currentTarget.hasAttribute('href')) {\n      var url = event.currentTarget.getAttribute('href');\n\n      if (url) {\n        showPreview(url);\n        event.preventDefault();\n      }\n    }\n  }\n  /**\n   * Handles click on the auto-sliding controls element.\n   *\n   * @param {object} [event]\n   */\n\n\n  function onAutoSlidePlayerClick(event) {\n    // Replay\n    if (Reveal.isLastSlide() && config.loop === false) {\n      slide(0, 0);\n      resumeAutoSlide();\n    } // Resume\n    else if (autoSlidePaused) {\n        resumeAutoSlide();\n      } // Pause\n      else {\n          pauseAutoSlide();\n        }\n  } // --------------------------------------------------------------------//\n  // ------------------------ PLAYBACK COMPONENT ------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Constructor for the playback component, which displays\n   * play/pause/progress controls.\n   *\n   * @param {HTMLElement} container The component will append\n   * itself to this\n   * @param {function} progressCheck A method which will be\n   * called frequently to get the current progress on a range\n   * of 0-1\n   */\n\n\n  function Playback(container, progressCheck) {\n    // Cosmetics\n    this.diameter = 100;\n    this.diameter2 = this.diameter / 2;\n    this.thickness = 6; // Flags if we are currently playing\n\n    this.playing = false; // Current progress on a 0-1 range\n\n    this.progress = 0; // Used to loop the animation smoothly\n\n    this.progressOffset = 1;\n    this.container = container;\n    this.progressCheck = progressCheck;\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'playback';\n    this.canvas.width = this.diameter;\n    this.canvas.height = this.diameter;\n    this.canvas.style.width = this.diameter2 + 'px';\n    this.canvas.style.height = this.diameter2 + 'px';\n    this.context = this.canvas.getContext('2d');\n    this.container.appendChild(this.canvas);\n    this.render();\n  }\n  /**\n   * @param value\n   */\n\n\n  Playback.prototype.setPlaying = function (value) {\n    var wasPlaying = this.playing;\n    this.playing = value; // Start repainting if we weren't already\n\n    if (!wasPlaying && this.playing) {\n      this.animate();\n    } else {\n      this.render();\n    }\n  };\n\n  Playback.prototype.animate = function () {\n    var progressBefore = this.progress;\n    this.progress = this.progressCheck(); // When we loop, offset the progress so that it eases\n    // smoothly rather than immediately resetting\n\n    if (progressBefore > 0.8 && this.progress < 0.2) {\n      this.progressOffset = this.progress;\n    }\n\n    this.render();\n\n    if (this.playing) {\n      features.requestAnimationFrameMethod.call(window, this.animate.bind(this));\n    }\n  };\n  /**\n   * Renders the current progress and playback state.\n   */\n\n\n  Playback.prototype.render = function () {\n    var progress = this.playing ? this.progress : 0,\n        radius = this.diameter2 - this.thickness,\n        x = this.diameter2,\n        y = this.diameter2,\n        iconSize = 28; // Ease towards 1\n\n    this.progressOffset += (1 - this.progressOffset) * 0.1;\n    var endAngle = -Math.PI / 2 + progress * (Math.PI * 2);\n    var startAngle = -Math.PI / 2 + this.progressOffset * (Math.PI * 2);\n    this.context.save();\n    this.context.clearRect(0, 0, this.diameter, this.diameter); // Solid background color\n\n    this.context.beginPath();\n    this.context.arc(x, y, radius + 4, 0, Math.PI * 2, false);\n    this.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n    this.context.fill(); // Draw progress track\n\n    this.context.beginPath();\n    this.context.arc(x, y, radius, 0, Math.PI * 2, false);\n    this.context.lineWidth = this.thickness;\n    this.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n    this.context.stroke();\n\n    if (this.playing) {\n      // Draw progress on top of track\n      this.context.beginPath();\n      this.context.arc(x, y, radius, startAngle, endAngle, false);\n      this.context.lineWidth = this.thickness;\n      this.context.strokeStyle = '#fff';\n      this.context.stroke();\n    }\n\n    this.context.translate(x - iconSize / 2, y - iconSize / 2); // Draw play/pause icons\n\n    if (this.playing) {\n      this.context.fillStyle = '#fff';\n      this.context.fillRect(0, 0, iconSize / 2 - 4, iconSize);\n      this.context.fillRect(iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize);\n    } else {\n      this.context.beginPath();\n      this.context.translate(4, 0);\n      this.context.moveTo(0, 0);\n      this.context.lineTo(iconSize - 4, iconSize / 2);\n      this.context.lineTo(0, iconSize);\n      this.context.fillStyle = '#fff';\n      this.context.fill();\n    }\n\n    this.context.restore();\n  };\n\n  Playback.prototype.on = function (type, listener) {\n    this.canvas.addEventListener(type, listener, false);\n  };\n\n  Playback.prototype.off = function (type, listener) {\n    this.canvas.removeEventListener(type, listener, false);\n  };\n\n  Playback.prototype.destroy = function () {\n    this.playing = false;\n\n    if (this.canvas.parentNode) {\n      this.container.removeChild(this.canvas);\n    }\n  }; // --------------------------------------------------------------------//\n  // ------------------------------- API --------------------------------//\n  // --------------------------------------------------------------------//\n\n\n  Reveal = {\n    VERSION: VERSION,\n    initialize: initialize,\n    configure: configure,\n    sync: sync,\n    syncSlide: syncSlide,\n    syncFragments: syncFragments,\n    // Navigation methods\n    slide: slide,\n    left: navigateLeft,\n    right: navigateRight,\n    up: navigateUp,\n    down: navigateDown,\n    prev: navigatePrev,\n    next: navigateNext,\n    // Fragment methods\n    navigateFragment: navigateFragment,\n    prevFragment: previousFragment,\n    nextFragment: nextFragment,\n    // Deprecated aliases\n    navigateTo: slide,\n    navigateLeft: navigateLeft,\n    navigateRight: navigateRight,\n    navigateUp: navigateUp,\n    navigateDown: navigateDown,\n    navigatePrev: navigatePrev,\n    navigateNext: navigateNext,\n    // Forces an update in slide layout\n    layout: layout,\n    // Randomizes the order of slides\n    shuffle: shuffle,\n    // Returns an object with the available routes as booleans (left/right/top/bottom)\n    availableRoutes: availableRoutes,\n    // Returns an object with the available fragments as booleans (prev/next)\n    availableFragments: availableFragments,\n    // Toggles a help overlay with keyboard shortcuts\n    toggleHelp: toggleHelp,\n    // Toggles the overview mode on/off\n    toggleOverview: toggleOverview,\n    // Toggles the \"black screen\" mode on/off\n    togglePause: togglePause,\n    // Toggles the auto slide mode on/off\n    toggleAutoSlide: toggleAutoSlide,\n    // State checks\n    isOverview: isOverview,\n    isPaused: isPaused,\n    isAutoSliding: isAutoSliding,\n    isSpeakerNotes: isSpeakerNotes,\n    // Slide preloading\n    loadSlide: loadSlide,\n    unloadSlide: unloadSlide,\n    // Adds or removes all internal event listeners (such as keyboard)\n    addEventListeners: addEventListeners,\n    removeEventListeners: removeEventListeners,\n    // Facility for persisting and restoring the presentation state\n    getState: getState,\n    setState: setState,\n    // Presentation progress\n    getSlidePastCount: getSlidePastCount,\n    // Presentation progress on range of 0-1\n    getProgress: getProgress,\n    // Returns the indices of the current, or specified, slide\n    getIndices: getIndices,\n    // Returns an Array of all slides\n    getSlides: getSlides,\n    // Returns an Array of objects representing the attributes on\n    // the slides\n    getSlidesAttributes: getSlidesAttributes,\n    // Returns the total number of slides\n    getTotalSlides: getTotalSlides,\n    // Returns the slide element at the specified index\n    getSlide: getSlide,\n    // Returns the slide background element at the specified index\n    getSlideBackground: getSlideBackground,\n    // Returns the speaker notes string for a slide, or null\n    getSlideNotes: getSlideNotes,\n    // Returns an array with all horizontal/vertical slides in the deck\n    getHorizontalSlides: getHorizontalSlides,\n    getVerticalSlides: getVerticalSlides,\n    // Checks if the presentation contains two or more\n    // horizontal/vertical slides\n    hasHorizontalSlides: hasHorizontalSlides,\n    hasVerticalSlides: hasVerticalSlides,\n    // Returns the previous slide element, may be null\n    getPreviousSlide: function () {\n      return previousSlide;\n    },\n    // Returns the current slide element\n    getCurrentSlide: function () {\n      return currentSlide;\n    },\n    // Returns the current scale of the presentation content\n    getScale: function () {\n      return scale;\n    },\n    // Returns the current configuration object\n    getConfig: function () {\n      return config;\n    },\n    // Helper method, retrieves query string as a key/value hash\n    getQueryHash: function () {\n      var query = {};\n      location.search.replace(/[A-Z0-9]+?=([\\w\\.%-]*)/gi, function (a) {\n        query[a.split('=').shift()] = a.split('=').pop();\n      }); // Basic deserialization\n\n      for (var i in query) {\n        var value = query[i];\n        query[i] = deserialize(unescape(value));\n      }\n\n      return query;\n    },\n    // Returns the top-level DOM element\n    getRevealElement: function () {\n      return dom.wrapper || document.querySelector('.reveal');\n    },\n    // Returns a hash with all registered plugins\n    getPlugins: function () {\n      return plugins;\n    },\n    // Returns true if we're currently on the first slide\n    isFirstSlide: function () {\n      return indexh === 0 && indexv === 0;\n    },\n    // Returns true if we're currently on the last slide\n    isLastSlide: function () {\n      if (currentSlide) {\n        // Does this slide have a next sibling?\n        if (currentSlide.nextElementSibling) return false; // If it's vertical, does its parent have a next sibling?\n\n        if (isVerticalSlide(currentSlide) && currentSlide.parentNode.nextElementSibling) return false;\n        return true;\n      }\n\n      return false;\n    },\n    // Returns true if we're on the last slide in the current\n    // vertical stack\n    isLastVerticalSlide: function () {\n      if (currentSlide && isVerticalSlide(currentSlide)) {\n        // Does this slide have a next sibling?\n        if (currentSlide.nextElementSibling) return false;\n        return true;\n      }\n\n      return false;\n    },\n    // Checks if reveal.js has been loaded and is ready for use\n    isReady: function () {\n      return loaded;\n    },\n    // Forward event binding to the reveal DOM element\n    addEventListener: function (type, listener, useCapture) {\n      if ('addEventListener' in window) {\n        Reveal.getRevealElement().addEventListener(type, listener, useCapture);\n      }\n    },\n    removeEventListener: function (type, listener, useCapture) {\n      if ('addEventListener' in window) {\n        Reveal.getRevealElement().removeEventListener(type, listener, useCapture);\n      }\n    },\n    // Adds/removes a custom key binding\n    addKeyBinding: addKeyBinding,\n    removeKeyBinding: removeKeyBinding,\n    // API for registering and retrieving plugins\n    registerPlugin: registerPlugin,\n    hasPlugin: hasPlugin,\n    getPlugin: getPlugin,\n    // Programmatically triggers a keyboard event\n    triggerKey: function (keyCode) {\n      onDocumentKeyDown({\n        keyCode: keyCode\n      });\n    },\n    // Registers a new shortcut to include in the help overlay\n    registerKeyboardShortcut: function (key, value) {\n      keyboardShortcuts[key] = value;\n    }\n  };\n  return Reveal;\n});","map":{"version":3,"sources":["C:/Users/khanh/workspace/Code/commeun/frontend/src/reveal/js/reveal.js"],"names":["root","factory","define","amd","Reveal","exports","module","VERSION","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","HOME_SLIDE_SELECTOR","UA","navigator","userAgent","POST_MESSAGE_METHOD_BLACKLIST","config","width","height","margin","minScale","maxScale","controls","controlsTutorial","controlsLayout","controlsBackArrows","progress","slideNumber","showSlideNumber","hashOneBasedIndex","hash","history","keyboard","keyboardCondition","overview","disableLayout","center","touch","loop","rtl","navigationMode","shuffle","fragments","fragmentInURL","embedded","help","pause","showNotes","autoPlayMedia","preloadIframes","autoSlide","autoSlideStoppable","autoSlideMethod","defaultTiming","mouseWheel","rollingLinks","hideAddressBar","previewLinks","postMessage","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","backgroundTransition","parallaxBackgroundImage","parallaxBackgroundSize","parallaxBackgroundRepeat","parallaxBackgroundPosition","parallaxBackgroundHorizontal","parallaxBackgroundVertical","pdfMaxPagesPerSlide","Number","POSITIVE_INFINITY","pdfSeparateFragments","pdfPageHeightOffset","viewDistance","mobileViewDistance","display","hideInactiveCursor","hideCursorTime","dependencies","initialized","loaded","overviewSlideWidth","overviewSlideHeight","indexh","indexv","previousSlide","currentSlide","previousBackground","hasNavigatedRight","hasNavigatedDown","state","scale","slidesTransform","layout","dom","plugins","asyncDependencies","features","isMobileDevice","isChrome","lastMouseWheelStep","writeURLTimeout","cursorHidden","cursorInactiveTimeout","eventsAreBound","autoSlidePlayer","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","startX","startY","startCount","captured","threshold","keyboardShortcuts","registeredKeyBindings","initialize","options","checkCapabilities","transforms2d","transforms3d","document","body","setAttribute","images","toArray","getElementsByTagName","iframes","lazyLoadable","concat","i","len","length","element","getAttribute","removeAttribute","wrapper","querySelector","slides","window","addEventListener","query","getQueryHash","extend","load","test","platform","maxTouchPoints","testElement","createElement","style","requestAnimationFrameMethod","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","canvas","getContext","overviewTransitions","zoom","scripts","scriptsToLoad","forEach","s","condition","async","push","loadScript","src","callback","initPlugins","pluginsToInitialize","Object","keys","loadAsyncDependencies","afterPlugInitialized","plugin","init","then","start","url","script","type","defer","onload","onreadystatechange","event","readyState","onerror","err","Error","head","insertBefore","lastChild","setupDOM","setupPostMessage","setupScrollPrevention","resetVerticalSlides","configure","readURL","updateBackground","setTimeout","classList","remove","add","dispatchEvent","isPrintingPDF","removeEventListeners","setupPDF","background","createSingletonNode","progressbar","speakerNotes","pauseOverlay","controlsLeft","querySelectorAll","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsDownArrow","statusDiv","createStatusDiv","getElementById","position","overflow","clip","appendChild","getStatusText","node","text","nodeType","textContent","isAriaHidden","isDisplayHidden","getComputedStyle","childNodes","child","slideSize","getComputedSlideSize","innerWidth","innerHeight","pageWidth","Math","floor","pageHeight","slideWidth","slideHeight","injectStyleSheet","layoutSlideContents","doingSlideNumbers","slide","getSlideNumber","contains","left","top","contentHeight","scrollHeight","numberOfPages","max","ceil","min","page","className","parentNode","slideBackgroundElement","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","innerHTML","nextSibling","bottom","numberElement","fragmentGroups","sortFragments","previousFragmentStep","previousPage","fragment","clonedPage","cloneNode","setInterval","scrollTop","scrollLeft","container","tagname","classname","nodes","testNode","createBackgrounds","printMode","slideh","backgroundStack","createBackground","slidev","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","replace","contentElement","slideBackgroundContentElement","syncBackground","backgroundColor","opacity","data","backgroundVideo","backgroundIframe","backgroundOpacity","hasAttribute","contrastColor","computedBackgroundStyle","rgb","colorToRgb","a","colorBrightness","charAt","JSON","parse","method","result","apply","args","dispatchPostMessage","console","warn","oldTransition","numberOfSlides","resume","onDocumentMouseScroll","removeEventListener","enableRollingLinks","disableRollingLinks","onDocumentCursorActive","showCursor","enablePreviewLinks","disablePreviewLinks","destroy","Playback","Date","now","on","onAutoSlidePlayerClick","slideNumberDisplay","isSpeakerNotes","sync","addEventListeners","onWindowHashChange","onWindowResize","onPointerDown","onPointerMove","onPointerUp","msPointerEnabled","onTouchStart","onTouchMove","onTouchEnd","onDocumentKeyDown","onDocumentKeyPress","onProgressClicked","visibilityChange","onPageVisibilityChange","pointerEvents","match","eventName","el","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","registerPlugin","id","undefined","hasPlugin","getPlugin","addKeyBinding","binding","keyCode","key","description","removeKeyBinding","b","o","Array","prototype","slice","call","deserialize","value","parseFloat","distanceBetween","dx","x","dy","y","sqrt","transformElement","transform","WebkitTransform","MozTransform","msTransform","transformSlides","transforms","tag","styleSheet","cssText","createTextNode","closestParent","target","selector","parent","matchesMethod","matches","matchesSelector","msMatchesSelector","color","hex3","r","parseInt","g","hex6","substr","rgba","getRemainingHeight","newHeight","oldHeight","offsetHeight","removeProperty","location","search","removeAddressBar","scrollTo","createEvent","initEvent","self","message","namespace","getState","stringify","anchors","anchor","span","onPreviewLinkClicked","showPreview","closeOverlay","overlay","join","preventDefault","toggleHelp","override","showHelp","html","removeChild","documentElement","setProperty","size","oldScale","presentationWidth","presentationHeight","right","devicePixelRatio","updateProgress","updateParallax","isOverview","updateOverview","remainingHeight","nodeName","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","offsetWidth","setPreviousVerticalIndex","stack","v","getPreviousVerticalIndex","attributeName","activateOverview","cancelAutoSlide","onOverviewSlideClicked","updateSlidesVisibility","layoutOverview","hslide","h","vslide","hbackground","vbackground","vmin","deactivateOverview","cueAutoSlide","toggleOverview","locationHash","encodeURIComponent","index","getIndices","f","hashIndexBase","isVerticalSlide","enterFullscreen","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","cursor","hideCursor","wasPaused","togglePause","isPaused","toggleAutoSlide","resumeAutoSlide","pauseAutoSlide","isAutoSliding","horizontalSlides","stateBefore","indexhBefore","indexvBefore","updateSlides","currentHorizontalSlide","currentVerticalSlides","navigateFragment","slideChanged","stateLoop","j","splice","pop","stopEmbeddedContent","startEmbeddedContent","updateControls","updateSlideNumber","updateNotes","updateFragments","writeURL","sortAllFragments","updateNotesVisibility","formatEmbeddedContent","unloadIframes","syncSlide","syncFragments","loadSlide","horizontalSlide","verticalSlides","verticalSlide","random","slidesLength","reverse","slideState","split","horizontalSlidesLength","distanceX","distanceY","MAX_VALUE","verticalSlidesLength","abs","unloadSlide","oy","hasVerticalSlides","hasHorizontalSlides","hasNotes","getProgress","format","getSlidePastCount","getTotalSlides","indices","sep","formatSlideNumber","delimiter","isNaN","routes","availableRoutes","availableFragments","up","down","prev","next","includeAll","currentBackground","horizontalPast","horizontalFuture","backgroundh","backgroundv","shouldPreload","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","backgroundWidth","backgroundHeight","horizontalSlideCount","horizontalOffsetMultiplier","horizontalOffset","verticalSlideCount","verticalOffsetMultiplier","verticalOffset","preload","tagName","media","sources","source","backgroundContent","backgroundVideoLoop","backgroundVideoMuted","encodeURI","video","muted","autoplay","excludeIframes","iframe","maxHeight","maxWidth","backgroundIframeElement","getSlideBackground","hiddenFragments","_appendParamToIframeSource","sourceAttribute","sourceURL","param","indexOf","play","startEmbeddedMedia","promise","catch","startEmbeddedIframe","isAttachedToDOM","isVisible","currentTime","contentWindow","pastCount","mainLoop","totalCount","allFragments","visibleFragments","fragmentWeight","bits","name","decodeURIComponent","error","isSameNameAsCurrentSlide","delay","clearTimeout","replaceState","pathname","isVertical","hasFragments","currentFragment","getSlides","getHorizontalSlides","getVerticalSlides","getSlidesAttributes","map","attributes","attribute","getSlide","indexf","paused","setState","pausedFlag","overviewFlag","grouped","ordered","unordered","sorted","group","changedFragments","shown","hidden","maxIndex","offset","lastVisibleFragment","nextFragment","previousFragment","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","duration","playbackRate","isLastSlide","navigateNext","setPlaying","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","isLastVerticalSlide","isSwipePrevented","onUserInput","shiftKey","charCode","autoSlideWasPaused","activeElementIsCE","activeElement","contentEditable","activeElementIsInput","activeElementIsNotes","prevSlideShortcut","firstSlideShortcut","lastSlideShortcut","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","useLinearMode","triggered","action","touches","clientX","clientY","currentX","currentY","deltaX","deltaY","pointerType","MSPOINTER_TYPE_TOUCH","delta","detail","wheelDelta","slidesTotal","slideIndex","isHidden","webkitHidden","msHidden","blur","focus","currentTarget","progressCheck","diameter","diameter2","thickness","playing","progressOffset","context","render","wasPlaying","animate","progressBefore","bind","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","translate","fillRect","moveTo","lineTo","restore","listener","off","prevFragment","navigateTo","getPreviousSlide","getCurrentSlide","getScale","getConfig","shift","unescape","getRevealElement","getPlugins","isFirstSlide","nextElementSibling","isReady","useCapture","triggerKey","registerKeyboardShortcut"],"mappings":"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","sourcesContent":["/*!\n * reveal.js\n * http://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2020 Hakim El Hattab, http://hakim.se\n */\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(function() {\n            root.Reveal = factory();\n            return root.Reveal;\n        });\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS.\n        module.exports = factory();\n    } else {\n        // Browser globals.\n        root.Reveal = factory();\n    }\n}(this, function() {\n\n    'use strict';\n\n    var Reveal;\n\n    // The reveal.js version\n    var VERSION = '3.9.2';\n\n    var SLIDES_SELECTOR = '.slides section',\n        HORIZONTAL_SLIDES_SELECTOR = '.slides>section',\n        VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section',\n        HOME_SLIDE_SELECTOR = '.slides>section:first-of-type',\n\n        UA = navigator.userAgent,\n\n        // Methods that may not be invoked via the postMessage API\n        POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/,\n\n        // Configuration defaults, can be overridden at initialization time\n        config = {\n\n            // The \"normal\" size of the presentation, aspect ratio will be preserved\n            // when the presentation is scaled to fit different resolutions\n            width: 960,\n            height: 700,\n\n            // Factor of the display size that should remain empty around the content\n            margin: 0.04,\n\n            // Bounds for smallest/largest possible scale to apply to content\n            minScale: 0.2,\n            maxScale: 2.0,\n\n            // Display presentation control arrows\n            controls: true,\n\n            // Help the user learn the controls by providing hints, for example by\n            // bouncing the down arrow when they first encounter a vertical slide\n            controlsTutorial: true,\n\n            // Determines where controls appear, \"edges\" or \"bottom-right\"\n            controlsLayout: 'bottom-right',\n\n            // Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n            // or \"visible\"\n            controlsBackArrows: 'faded',\n\n            // Display a presentation progress bar\n            progress: true,\n\n            // Display the page number of the current slide\n            // - true:    Show slide number\n            // - false:   Hide slide number\n            //\n            // Can optionally be set as a string that specifies the number formatting:\n            // - \"h.v\":\t  Horizontal . vertical slide number (default)\n            // - \"h/v\":\t  Horizontal / vertical slide number\n            // - \"c\":\t  Flattened slide number\n            // - \"c/t\":\t  Flattened slide number / total slides\n            //\n            // Alternatively, you can provide a function that returns the slide\n            // number for the current slide. The function should take in a slide\n            // object and return an array with one string [slideNumber] or\n            // three strings [n1,delimiter,n2]. See #formatSlideNumber().\n            slideNumber: false,\n\n            // Can be used to limit the contexts in which the slide number appears\n            // - \"all\":      Always show the slide number\n            // - \"print\":    Only when printing to PDF\n            // - \"speaker\":  Only in the speaker view\n            showSlideNumber: 'all',\n\n            // Use 1 based indexing for # links to match slide number (default is zero\n            // based)\n            hashOneBasedIndex: false,\n\n            // Add the current slide number to the URL hash so that reloading the\n            // page/copying the URL will return you to the same slide\n            hash: false,\n\n            // Push each slide change to the browser history.  Implies `hash: true`\n            history: false,\n\n            // Enable keyboard shortcuts for navigation\n            keyboard: true,\n\n            // Optional function that blocks keyboard events when retuning false\n            keyboardCondition: null,\n\n            // Enable the slide overview mode\n            overview: true,\n\n            // Disables the default reveal.js slide layout so that you can use\n            // custom CSS layout\n            disableLayout: false,\n\n            // Vertical centering of slides\n            center: true,\n\n            // Enables touch navigation on devices with touch input\n            touch: true,\n\n            // Loop the presentation\n            loop: false,\n\n            // Change the presentation direction to be RTL\n            rtl: false,\n\n            // Changes the behavior of our navigation directions.\n            //\n            // \"default\"\n            // Left/right arrow keys step between horizontal slides, up/down\n            // arrow keys step between vertical slides. Space key steps through\n            // all slides (both horizontal and vertical).\n            //\n            // \"linear\"\n            // Removes the up/down arrows. Left/right arrows step through all\n            // slides (both horizontal and vertical).\n            //\n            // \"grid\"\n            // When this is enabled, stepping left/right from a vertical stack\n            // to an adjacent vertical stack will land you at the same vertical\n            // index.\n            //\n            // Consider a deck with six slides ordered in two vertical stacks:\n            // 1.1    2.1\n            // 1.2    2.2\n            // 1.3    2.3\n            //\n            // If you're on slide 1.3 and navigate right, you will normally move\n            // from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n            // from 1.3 -> 2.3.\n            navigationMode: 'default',\n\n            // Randomizes the order of slides each time the presentation loads\n            shuffle: false,\n\n            // Turns fragments on and off globally\n            fragments: true,\n\n            // Flags whether to include the current fragment in the URL,\n            // so that reloading brings you to the same fragment position\n            fragmentInURL: false,\n\n            // Flags if the presentation is running in an embedded mode,\n            // i.e. contained within a limited portion of the screen\n            embedded: false,\n\n            // Flags if we should show a help overlay when the question-mark\n            // key is pressed\n            help: true,\n\n            // Flags if it should be possible to pause the presentation (blackout)\n            pause: true,\n\n            // Flags if speaker notes should be visible to all viewers\n            showNotes: false,\n\n            // Global override for autolaying embedded media (video/audio/iframe)\n            // - null:   Media will only autoplay if data-autoplay is present\n            // - true:   All media will autoplay, regardless of individual setting\n            // - false:  No media will autoplay, regardless of individual setting\n            autoPlayMedia: null,\n\n            // Global override for preloading lazy-loaded iframes\n            // - null:   Iframes with data-src AND data-preload will be loaded when within\n            //           the viewDistance, iframes with only data-src will be loaded when visible\n            // - true:   All iframes with data-src will be loaded when within the viewDistance\n            // - false:  All iframes with data-src will be loaded only when visible\n            preloadIframes: null,\n\n            // Controls automatic progression to the next slide\n            // - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n            //           is present on the current slide or fragment\n            // - 1+:     All slides will progress automatically at the given interval\n            // - false:  No auto-sliding, even if data-autoslide is present\n            autoSlide: 0,\n\n            // Stop auto-sliding after user input\n            autoSlideStoppable: true,\n\n            // Use this method for navigation when auto-sliding (defaults to navigateNext)\n            autoSlideMethod: null,\n\n            // Specify the average time in seconds that you think you will spend\n            // presenting each slide. This is used to show a pacing timer in the\n            // speaker view\n            defaultTiming: null,\n\n            // Enable slide navigation via mouse wheel\n            mouseWheel: false,\n\n            // Apply a 3D roll to links on hover\n            rollingLinks: false,\n\n            // Hides the address bar on mobile devices\n            hideAddressBar: true,\n\n            // Opens links in an iframe preview overlay\n            // Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n            // individually\n            previewLinks: false,\n\n            // Exposes the reveal.js API through window.postMessage\n            postMessage: true,\n\n            // Dispatches all reveal.js events to the parent window through postMessage\n            postMessageEvents: false,\n\n            // Focuses body when page changes visibility to ensure keyboard shortcuts work\n            focusBodyOnPageVisibilityChange: true,\n\n            // Transition style\n            transition: 'slide', // none/fade/slide/convex/concave/zoom\n\n            // Transition speed\n            transitionSpeed: 'default', // default/fast/slow\n\n            // Transition style for full page slide backgrounds\n            backgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n            // Parallax background image\n            parallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n            // Parallax background size\n            parallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n            // Parallax background repeat\n            parallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n            // Parallax background position\n            parallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n            // Amount of pixels to move the parallax background per slide step\n            parallaxBackgroundHorizontal: null,\n            parallaxBackgroundVertical: null,\n\n            // The maximum number of pages a single slide can expand onto when printing\n            // to PDF, unlimited by default\n            pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n            // Prints each fragment on a separate slide\n            pdfSeparateFragments: true,\n\n            // Offset used to reduce the height of content within exported PDF pages.\n            // This exists to account for environment differences based on how you\n            // print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n            // on precisely the total height of the document whereas in-browser\n            // printing has to end one pixel before.\n            pdfPageHeightOffset: -1,\n\n            // Number of slides away from the current that are visible\n            viewDistance: 3,\n\n            // Number of slides away from the current that are visible on mobile\n            // devices. It is advisable to set this to a lower number than\n            // viewDistance in order to save resources.\n            mobileViewDistance: 2,\n\n            // The display mode that will be used to show slides\n            display: 'block',\n\n            // Hide cursor if inactive\n            hideInactiveCursor: true,\n\n            // Time before the cursor is hidden (in ms)\n            hideCursorTime: 5000,\n\n            // Script dependencies to load\n            dependencies: []\n\n        },\n\n        // Flags if Reveal.initialize() has been called\n        initialized = false,\n\n        // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n        loaded = false,\n\n        // Flags if the overview mode is currently active\n        overview = false,\n\n        // Holds the dimensions of our overview slides, including margins\n        overviewSlideWidth = null,\n        overviewSlideHeight = null,\n\n        // The horizontal and vertical index of the currently active slide\n        indexh,\n        indexv,\n\n        // The previous and current slide HTML elements\n        previousSlide,\n        currentSlide,\n\n        previousBackground,\n\n        // Remember which directions that the user has navigated towards\n        hasNavigatedRight = false,\n        hasNavigatedDown = false,\n\n        // Slides may hold a data-state attribute which we pick up and apply\n        // as a class to the body. This list contains the combined state of\n        // all current slides.\n        state = [],\n\n        // The current scale of the presentation (see width/height config)\n        scale = 1,\n\n        // CSS transform that is currently applied to the slides container,\n        // split into two groups\n        slidesTransform = {\n            layout: '',\n            overview: ''\n        },\n\n        // Cached references to DOM elements\n        dom = {},\n\n        // A list of registered reveal.js plugins\n        plugins = {},\n\n        // List of asynchronously loaded reveal.js dependencies\n        asyncDependencies = [],\n\n        // Features supported by the browser, see #checkCapabilities()\n        features = {},\n\n        // Client is a mobile device, see #checkCapabilities()\n        isMobileDevice,\n\n        // Client is a desktop Chrome, see #checkCapabilities()\n        isChrome,\n\n        // Throttles mouse wheel navigation\n        lastMouseWheelStep = 0,\n\n        // Delays updates to the URL due to a Chrome thumbnailer bug\n        writeURLTimeout = 0,\n\n        // Is the mouse pointer currently hidden from view\n        cursorHidden = false,\n\n        // Timeout used to determine when the cursor is inactive\n        cursorInactiveTimeout = 0,\n\n        // Flags if the interaction event listeners are bound\n        eventsAreBound = false,\n\n        // The current auto-slide duration\n        autoSlide = 0,\n\n        // Auto slide properties\n        autoSlidePlayer,\n        autoSlideTimeout = 0,\n        autoSlideStartTime = -1,\n        autoSlidePaused = false,\n\n        // Holds information about the currently ongoing touch input\n        touch = {\n            startX: 0,\n            startY: 0,\n            startCount: 0,\n            captured: false,\n            threshold: 40\n        },\n\n        // A key:value map of shortcut keyboard keys and descriptions of\n        // the actions they trigger, generated in #configure()\n        keyboardShortcuts = {},\n\n        // Holds custom key code mappings\n        registeredKeyBindings = {};\n\n    /**\n     * Starts up the presentation if the client is capable.\n     */\n    function initialize(options) {\n\n        // Make sure we only initialize once\n        if (initialized === true) return;\n\n        initialized = true;\n\n        checkCapabilities();\n\n        if (!features.transforms2d && !features.transforms3d) {\n            document.body.setAttribute('class', 'no-transforms');\n\n            // Since JS won't be running any further, we load all lazy\n            // loading elements upfront\n            var images = toArray(document.getElementsByTagName('img')),\n                iframes = toArray(document.getElementsByTagName('iframe'));\n\n            var lazyLoadable = images.concat(iframes);\n\n            for (var i = 0, len = lazyLoadable.length; i < len; i++) {\n                var element = lazyLoadable[i];\n                if (element.getAttribute('data-src')) {\n                    element.setAttribute('src', element.getAttribute('data-src'));\n                    element.removeAttribute('data-src');\n                }\n            }\n\n            // If the browser doesn't support core features we won't be\n            // using JavaScript to control the presentation\n            return;\n        }\n\n        // Cache references to key DOM elements\n        dom.wrapper = document.querySelector('.reveal');\n        dom.slides = document.querySelector('.reveal .slides');\n\n        // Force a layout when the whole page, incl fonts, has loaded\n        window.addEventListener('load', layout, false);\n\n        var query = Reveal.getQueryHash();\n\n        // Do not accept new dependencies via query config to avoid\n        // the potential of malicious script injection\n        if (typeof query['dependencies'] !== 'undefined') delete query['dependencies'];\n\n        // Copy options over to our config object\n        extend(config, options);\n        extend(config, query);\n\n        // Hide the address bar in mobile browsers\n        hideAddressBar();\n\n        // Loads dependencies and continues to #start() once done\n        load();\n\n    }\n\n    /**\n     * Inspect the client to see what it's capable of, this\n     * should only happens once per runtime.\n     */\n    function checkCapabilities() {\n\n        isMobileDevice = /(iphone|ipod|ipad|android)/gi.test(UA) ||\n            (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1); // iPadOS\n        isChrome = /chrome/i.test(UA) && !/edge/i.test(UA);\n\n        var testElement = document.createElement('div');\n\n        features.transforms3d = 'WebkitPerspective' in testElement.style ||\n            'MozPerspective' in testElement.style ||\n            'msPerspective' in testElement.style ||\n            'OPerspective' in testElement.style ||\n            'perspective' in testElement.style;\n\n        features.transforms2d = 'WebkitTransform' in testElement.style ||\n            'MozTransform' in testElement.style ||\n            'msTransform' in testElement.style ||\n            'OTransform' in testElement.style ||\n            'transform' in testElement.style;\n\n        features.requestAnimationFrameMethod = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n        features.requestAnimationFrame = typeof features.requestAnimationFrameMethod === 'function';\n\n        features.canvas = !!document.createElement('canvas').getContext;\n\n        // Transitions in the overview are disabled in desktop and\n        // Safari due to lag\n        features.overviewTransitions = !/Version\\/[\\d\\.]+.*Safari/.test(UA);\n\n        // Flags if we should use zoom instead of transform to scale\n        // up slides. Zoom produces crisper results but has a lot of\n        // xbrowser quirks so we only use it in whitelsited browsers.\n        features.zoom = 'zoom' in testElement.style && !isMobileDevice &&\n            (isChrome || /Version\\/[\\d\\.]+.*Safari/.test(UA));\n\n    }\n\n    /**\n     * Loads the dependencies of reveal.js. Dependencies are\n     * defined via the configuration option 'dependencies'\n     * and will be loaded prior to starting/binding reveal.js.\n     * Some dependencies may have an 'async' flag, if so they\n     * will load after reveal.js has been started up.\n     */\n    function load() {\n\n        var scripts = [],\n            scriptsToLoad = 0;\n\n        config.dependencies.forEach(function(s) {\n            // Load if there's no condition or the condition is truthy\n            if (!s.condition || s.condition()) {\n                if (s.async) {\n                    asyncDependencies.push(s);\n                } else {\n                    scripts.push(s);\n                }\n            }\n        });\n\n        if (scripts.length) {\n            scriptsToLoad = scripts.length;\n\n            // Load synchronous scripts\n            scripts.forEach(function(s) {\n                loadScript(s.src, function() {\n\n                    if (typeof s.callback === 'function') s.callback();\n\n                    if (--scriptsToLoad === 0) {\n                        initPlugins();\n                    }\n\n                });\n            });\n        } else {\n            initPlugins();\n        }\n\n    }\n\n    /**\n     * Initializes our plugins and waits for them to be ready\n     * before proceeding.\n     */\n    function initPlugins() {\n\n        var pluginsToInitialize = Object.keys(plugins).length;\n\n        // If there are no plugins, skip this step\n        if (pluginsToInitialize === 0) {\n            loadAsyncDependencies();\n        }\n        // ... otherwise initialize plugins\n        else {\n\n            var afterPlugInitialized = function() {\n                if (--pluginsToInitialize === 0) {\n                    loadAsyncDependencies();\n                }\n            };\n\n            for (var i in plugins) {\n\n                var plugin = plugins[i];\n\n                // If the plugin has an 'init' method, invoke it\n                if (typeof plugin.init === 'function') {\n                    var callback = plugin.init();\n\n                    // If the plugin returned a Promise, wait for it\n                    if (callback && typeof callback.then === 'function') {\n                        callback.then(afterPlugInitialized);\n                    } else {\n                        afterPlugInitialized();\n                    }\n                } else {\n                    afterPlugInitialized();\n                }\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Loads all async reveal.js dependencies.\n     */\n    function loadAsyncDependencies() {\n\n        if (asyncDependencies.length) {\n            asyncDependencies.forEach(function(s) {\n                loadScript(s.src, s.callback);\n            });\n        }\n\n        start();\n\n    }\n\n    /**\n     * Loads a JavaScript file from the given URL and executes it.\n     *\n     * @param {string} url Address of the .js file to load\n     * @param {function} callback Method to invoke when the script\n     * has loaded and executed\n     */\n    function loadScript(url, callback) {\n\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = false;\n        script.defer = false;\n        script.src = url;\n\n        if (callback) {\n\n            // Success callback\n            script.onload = script.onreadystatechange = function(event) {\n                if (event.type === \"load\" || (/loaded|complete/.test(script.readyState))) {\n\n                    // Kill event listeners\n                    script.onload = script.onreadystatechange = script.onerror = null;\n\n                    callback();\n\n                }\n            };\n\n            // Error callback\n            script.onerror = function(err) {\n\n                // Kill event listeners\n                script.onload = script.onreadystatechange = script.onerror = null;\n\n                callback(new Error('Failed loading script: ' + script.src + '\\n' + err));\n\n            };\n\n        }\n\n        // Append the script at the end of <head>\n        var head = document.querySelector('head');\n        head.insertBefore(script, head.lastChild);\n\n    }\n\n    /**\n     * Starts up reveal.js by binding input events and navigating\n     * to the current URL deeplink if there is one.\n     */\n    function start() {\n\n        loaded = true;\n\n        // Make sure we've got all the DOM elements we need\n        setupDOM();\n\n        // Listen to messages posted to this window\n        setupPostMessage();\n\n        // Prevent the slides from being scrolled out of view\n        setupScrollPrevention();\n\n        // Resets all vertical slides so that only the first is visible\n        resetVerticalSlides();\n\n        // Updates the presentation to match the current configuration values\n        configure();\n\n        // Read the initial hash\n        readURL();\n\n        // Update all backgrounds\n        updateBackground(true);\n\n        // Notify listeners that the presentation is ready but use a 1ms\n        // timeout to ensure it's not fired synchronously after #initialize()\n        setTimeout(function() {\n            // Enable transitions now that we're loaded\n            dom.slides.classList.remove('no-transition');\n\n            dom.wrapper.classList.add('ready');\n\n            dispatchEvent('ready', {\n                'indexh': indexh,\n                'indexv': indexv,\n                'currentSlide': currentSlide\n            });\n        }, 1);\n\n        // Special setup and config is required when printing to PDF\n        if (isPrintingPDF()) {\n            removeEventListeners();\n\n            // The document needs to have loaded for the PDF layout\n            // measurements to be accurate\n            if (document.readyState === 'complete') {\n                setupPDF();\n            } else {\n                window.addEventListener('load', setupPDF);\n            }\n        }\n\n    }\n\n    /**\n     * Finds and stores references to DOM elements which are\n     * required by the presentation. If a required element is\n     * not found, it is created.\n     */\n    function setupDOM() {\n\n        // Prevent transitions while we're loading\n        dom.slides.classList.add('no-transition');\n\n        if (isMobileDevice) {\n            dom.wrapper.classList.add('no-hover');\n        } else {\n            dom.wrapper.classList.remove('no-hover');\n        }\n\n        if (/iphone/gi.test(UA)) {\n            dom.wrapper.classList.add('ua-iphone');\n        } else {\n            dom.wrapper.classList.remove('ua-iphone');\n        }\n\n        // Background element\n        dom.background = createSingletonNode(dom.wrapper, 'div', 'backgrounds', null);\n\n        // Progress bar\n        dom.progress = createSingletonNode(dom.wrapper, 'div', 'progress', '<span></span>');\n        dom.progressbar = dom.progress.querySelector('span');\n\n        // Arrow controls\n        dom.controls = createSingletonNode(dom.wrapper, 'aside', 'controls',\n            '<button class=\"navigate-left\" aria-label=\"previous slide\"><div class=\"controls-arrow\"></div></button>' +\n            '<button class=\"navigate-right\" aria-label=\"next slide\"><div class=\"controls-arrow\"></div></button>' +\n            '<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>' +\n            '<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>');\n\n        // Slide number\n        dom.slideNumber = createSingletonNode(dom.wrapper, 'div', 'slide-number', '');\n\n        // Element containing notes that are visible to the audience\n        dom.speakerNotes = createSingletonNode(dom.wrapper, 'div', 'speaker-notes', null);\n        dom.speakerNotes.setAttribute('data-prevent-swipe', '');\n        dom.speakerNotes.setAttribute('tabindex', '0');\n\n        // Overlay graphic which is displayed during the paused mode\n        dom.pauseOverlay = createSingletonNode(dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null);\n\n        dom.wrapper.setAttribute('role', 'application');\n\n        // There can be multiple instances of controls throughout the page\n        dom.controlsLeft = toArray(document.querySelectorAll('.navigate-left'));\n        dom.controlsRight = toArray(document.querySelectorAll('.navigate-right'));\n        dom.controlsUp = toArray(document.querySelectorAll('.navigate-up'));\n        dom.controlsDown = toArray(document.querySelectorAll('.navigate-down'));\n        dom.controlsPrev = toArray(document.querySelectorAll('.navigate-prev'));\n        dom.controlsNext = toArray(document.querySelectorAll('.navigate-next'));\n\n        // The right and down arrows in the standard reveal.js controls\n        dom.controlsRightArrow = dom.controls.querySelector('.navigate-right');\n        dom.controlsDownArrow = dom.controls.querySelector('.navigate-down');\n\n        dom.statusDiv = createStatusDiv();\n    }\n\n    /**\n     * Creates a hidden div with role aria-live to announce the\n     * current slide content. Hide the div off-screen to make it\n     * available only to Assistive Technologies.\n     *\n     * @return {HTMLElement}\n     */\n    function createStatusDiv() {\n\n        var statusDiv = document.getElementById('aria-status-div');\n        if (!statusDiv) {\n            statusDiv = document.createElement('div');\n            statusDiv.style.position = 'absolute';\n            statusDiv.style.height = '1px';\n            statusDiv.style.width = '1px';\n            statusDiv.style.overflow = 'hidden';\n            statusDiv.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n            statusDiv.setAttribute('id', 'aria-status-div');\n            statusDiv.setAttribute('aria-live', 'polite');\n            statusDiv.setAttribute('aria-atomic', 'true');\n            dom.wrapper.appendChild(statusDiv);\n        }\n        return statusDiv;\n\n    }\n\n    /**\n     * Converts the given HTML element into a string of text\n     * that can be announced to a screen reader. Hidden\n     * elements are excluded.\n     */\n    function getStatusText(node) {\n\n        var text = '';\n\n        // Text node\n        if (node.nodeType === 3) {\n            text += node.textContent;\n        }\n        // Element node\n        else if (node.nodeType === 1) {\n\n            var isAriaHidden = node.getAttribute('aria-hidden');\n            var isDisplayHidden = window.getComputedStyle(node)['display'] === 'none';\n            if (isAriaHidden !== 'true' && !isDisplayHidden) {\n\n                toArray(node.childNodes).forEach(function(child) {\n                    text += getStatusText(child);\n                });\n\n            }\n\n        }\n\n        return text;\n\n    }\n\n    /**\n     * Configures the presentation for printing to a static\n     * PDF.\n     */\n    function setupPDF() {\n\n        var slideSize = getComputedSlideSize(window.innerWidth, window.innerHeight);\n\n        // Dimensions of the PDF pages\n        var pageWidth = Math.floor(slideSize.width * (1 + config.margin)),\n            pageHeight = Math.floor(slideSize.height * (1 + config.margin));\n\n        // Dimensions of slides within the pages\n        var slideWidth = slideSize.width,\n            slideHeight = slideSize.height;\n\n        // Let the browser know what page size we want to print\n        injectStyleSheet('@page{size:' + pageWidth + 'px ' + pageHeight + 'px; margin: 0px;}');\n\n        // Limit the size of certain elements to the dimensions of the slide\n        injectStyleSheet('.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: ' + slideWidth + 'px; max-height:' + slideHeight + 'px}');\n\n        document.body.classList.add('print-pdf');\n        document.body.style.width = pageWidth + 'px';\n        document.body.style.height = pageHeight + 'px';\n\n        // Make sure stretch elements fit on slide\n        layoutSlideContents(slideWidth, slideHeight);\n\n        // Compute slide numbers now, before we start duplicating slides\n        var doingSlideNumbers = config.slideNumber && /all|print/i.test(config.showSlideNumber);\n        toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function(slide) {\n            slide.setAttribute('data-slide-number', getSlideNumber(slide));\n        });\n\n        // Slide and slide background layout\n        toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function(slide) {\n\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains('stack') === false) {\n                // Center the slide inside of the page, giving the slide some margin\n                var left = (pageWidth - slideWidth) / 2,\n                    top = (pageHeight - slideHeight) / 2;\n\n                var contentHeight = slide.scrollHeight;\n                var numberOfPages = Math.max(Math.ceil(contentHeight / pageHeight), 1);\n\n                // Adhere to configured pages per slide limit\n                numberOfPages = Math.min(numberOfPages, config.pdfMaxPagesPerSlide);\n\n                // Center slides vertically\n                if (numberOfPages === 1 && config.center || slide.classList.contains('center')) {\n                    top = Math.max((pageHeight - contentHeight) / 2, 0);\n                }\n\n                // Wrap the slide in a page element and hide its overflow\n                // so that no page ever flows onto another\n                var page = document.createElement('div');\n                page.className = 'pdf-page';\n                page.style.height = ((pageHeight + config.pdfPageHeightOffset) * numberOfPages) + 'px';\n                slide.parentNode.insertBefore(page, slide);\n                page.appendChild(slide);\n\n                // Position the slide inside of the page\n                slide.style.left = left + 'px';\n                slide.style.top = top + 'px';\n                slide.style.width = slideWidth + 'px';\n\n                if (slide.slideBackgroundElement) {\n                    page.insertBefore(slide.slideBackgroundElement, slide);\n                }\n\n                // Inject notes if `showNotes` is enabled\n                if (config.showNotes) {\n\n                    // Are there notes for this slide?\n                    var notes = getSlideNotes(slide);\n                    if (notes) {\n\n                        var notesSpacing = 8;\n                        var notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n                        var notesElement = document.createElement('div');\n                        notesElement.classList.add('speaker-notes');\n                        notesElement.classList.add('speaker-notes-pdf');\n                        notesElement.setAttribute('data-layout', notesLayout);\n                        notesElement.innerHTML = notes;\n\n                        if (notesLayout === 'separate-page') {\n                            page.parentNode.insertBefore(notesElement, page.nextSibling);\n                        } else {\n                            notesElement.style.left = notesSpacing + 'px';\n                            notesElement.style.bottom = notesSpacing + 'px';\n                            notesElement.style.width = (pageWidth - notesSpacing * 2) + 'px';\n                            page.appendChild(notesElement);\n                        }\n\n                    }\n\n                }\n\n                // Inject slide numbers if `slideNumbers` are enabled\n                if (doingSlideNumbers) {\n                    var numberElement = document.createElement('div');\n                    numberElement.classList.add('slide-number');\n                    numberElement.classList.add('slide-number-pdf');\n                    numberElement.innerHTML = slide.getAttribute('data-slide-number');\n                    page.appendChild(numberElement);\n                }\n\n                // Copy page and show fragments one after another\n                if (config.pdfSeparateFragments) {\n\n                    // Each fragment 'group' is an array containing one or more\n                    // fragments. Multiple fragments that appear at the same time\n                    // are part of the same group.\n                    var fragmentGroups = sortFragments(page.querySelectorAll('.fragment'), true);\n\n                    var previousFragmentStep;\n                    var previousPage;\n\n                    fragmentGroups.forEach(function(fragments) {\n\n                        // Remove 'current-fragment' from the previous group\n                        if (previousFragmentStep) {\n                            previousFragmentStep.forEach(function(fragment) {\n                                fragment.classList.remove('current-fragment');\n                            });\n                        }\n\n                        // Show the fragments for the current index\n                        fragments.forEach(function(fragment) {\n                            fragment.classList.add('visible', 'current-fragment');\n                        });\n\n                        // Create a separate page for the current fragment state\n                        var clonedPage = page.cloneNode(true);\n                        page.parentNode.insertBefore(clonedPage, (previousPage || page).nextSibling);\n\n                        previousFragmentStep = fragments;\n                        previousPage = clonedPage;\n\n                    });\n\n                    // Reset the first/original page so that all fragments are hidden\n                    fragmentGroups.forEach(function(fragments) {\n                        fragments.forEach(function(fragment) {\n                            fragment.classList.remove('visible', 'current-fragment');\n                        });\n                    });\n\n                }\n                // Show all fragments\n                else {\n                    toArray(page.querySelectorAll('.fragment:not(.fade-out)')).forEach(function(fragment) {\n                        fragment.classList.add('visible');\n                    });\n                }\n\n            }\n\n        });\n\n        // Notify subscribers that the PDF layout is good to go\n        dispatchEvent('pdf-ready');\n\n    }\n\n    /**\n     * This is an unfortunate necessity. Some actions – such as\n     * an input field being focused in an iframe or using the\n     * keyboard to expand text selection beyond the bounds of\n     * a slide – can trigger our content to be pushed out of view.\n     * This scrolling can not be prevented by hiding overflow in\n     * CSS (we already do) so we have to resort to repeatedly\n     * checking if the slides have been offset :(\n     */\n    function setupScrollPrevention() {\n\n        setInterval(function() {\n            if (dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0) {\n                dom.wrapper.scrollTop = 0;\n                dom.wrapper.scrollLeft = 0;\n            }\n        }, 1000);\n\n    }\n\n    /**\n     * Creates an HTML element and returns a reference to it.\n     * If the element already exists the existing instance will\n     * be returned.\n     *\n     * @param {HTMLElement} container\n     * @param {string} tagname\n     * @param {string} classname\n     * @param {string} innerHTML\n     *\n     * @return {HTMLElement}\n     */\n    function createSingletonNode(container, tagname, classname, innerHTML) {\n\n        // Find all nodes matching the description\n        var nodes = container.querySelectorAll('.' + classname);\n\n        // Check all matches to find one which is a direct child of\n        // the specified container\n        for (var i = 0; i < nodes.length; i++) {\n            var testNode = nodes[i];\n            if (testNode.parentNode === container) {\n                return testNode;\n            }\n        }\n\n        // If no node was found, create it now\n        var node = document.createElement(tagname);\n        node.className = classname;\n        if (typeof innerHTML === 'string') {\n            node.innerHTML = innerHTML;\n        }\n        container.appendChild(node);\n\n        return node;\n\n    }\n\n    /**\n     * Creates the slide background elements and appends them\n     * to the background container. One element is created per\n     * slide no matter if the given slide has visible background.\n     */\n    function createBackgrounds() {\n\n        var printMode = isPrintingPDF();\n\n        // Clear prior backgrounds\n        dom.background.innerHTML = '';\n        dom.background.classList.add('no-transition');\n\n        // Iterate over all horizontal slides\n        toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).forEach(function(slideh) {\n\n            var backgroundStack = createBackground(slideh, dom.background);\n\n            // Iterate over all vertical slides\n            toArray(slideh.querySelectorAll('section')).forEach(function(slidev) {\n\n                createBackground(slidev, backgroundStack);\n\n                backgroundStack.classList.add('stack');\n\n            });\n\n        });\n\n        // Add parallax background if specified\n        if (config.parallaxBackgroundImage) {\n\n            dom.background.style.backgroundImage = 'url(\"' + config.parallaxBackgroundImage + '\")';\n            dom.background.style.backgroundSize = config.parallaxBackgroundSize;\n            dom.background.style.backgroundRepeat = config.parallaxBackgroundRepeat;\n            dom.background.style.backgroundPosition = config.parallaxBackgroundPosition;\n\n            // Make sure the below properties are set on the element - these properties are\n            // needed for proper transitions to be set on the element via CSS. To remove\n            // annoying background slide-in effect when the presentation starts, apply\n            // these properties after short time delay\n            setTimeout(function() {\n                dom.wrapper.classList.add('has-parallax-background');\n            }, 1);\n\n        } else {\n\n            dom.background.style.backgroundImage = '';\n            dom.wrapper.classList.remove('has-parallax-background');\n\n        }\n\n    }\n\n    /**\n     * Creates a background for the given slide.\n     *\n     * @param {HTMLElement} slide\n     * @param {HTMLElement} container The element that the background\n     * should be appended to\n     * @return {HTMLElement} New background div\n     */\n    function createBackground(slide, container) {\n\n\n        // Main slide background element\n        var element = document.createElement('div');\n        element.className = 'slide-background ' + slide.className.replace(/present|past|future/, '');\n\n        // Inner background element that wraps images/videos/iframes\n        var contentElement = document.createElement('div');\n        contentElement.className = 'slide-background-content';\n\n        element.appendChild(contentElement);\n        container.appendChild(element);\n\n        slide.slideBackgroundElement = element;\n        slide.slideBackgroundContentElement = contentElement;\n\n        // Syncs the background to reflect all current background settings\n        syncBackground(slide);\n\n        return element;\n\n    }\n\n    /**\n     * Renders all of the visual properties of a slide background\n     * based on the various background attributes.\n     *\n     * @param {HTMLElement} slide\n     */\n    function syncBackground(slide) {\n\n        var element = slide.slideBackgroundElement,\n            contentElement = slide.slideBackgroundContentElement;\n\n        // Reset the prior background state in case this is not the\n        // initial sync\n        slide.classList.remove('has-dark-background');\n        slide.classList.remove('has-light-background');\n\n        element.removeAttribute('data-loaded');\n        element.removeAttribute('data-background-hash');\n        element.removeAttribute('data-background-size');\n        element.removeAttribute('data-background-transition');\n        element.style.backgroundColor = '';\n\n        contentElement.style.backgroundSize = '';\n        contentElement.style.backgroundRepeat = '';\n        contentElement.style.backgroundPosition = '';\n        contentElement.style.backgroundImage = '';\n        contentElement.style.opacity = '';\n        contentElement.innerHTML = '';\n\n        var data = {\n            background: slide.getAttribute('data-background'),\n            backgroundSize: slide.getAttribute('data-background-size'),\n            backgroundImage: slide.getAttribute('data-background-image'),\n            backgroundVideo: slide.getAttribute('data-background-video'),\n            backgroundIframe: slide.getAttribute('data-background-iframe'),\n            backgroundColor: slide.getAttribute('data-background-color'),\n            backgroundRepeat: slide.getAttribute('data-background-repeat'),\n            backgroundPosition: slide.getAttribute('data-background-position'),\n            backgroundTransition: slide.getAttribute('data-background-transition'),\n            backgroundOpacity: slide.getAttribute('data-background-opacity')\n        };\n\n        if (data.background) {\n            // Auto-wrap image urls in url(...)\n            if (/^(http|file|\\/\\/)/gi.test(data.background) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#\\s]|$)/gi.test(data.background)) {\n                slide.setAttribute('data-background-image', data.background);\n            } else {\n                element.style.background = data.background;\n            }\n        }\n\n        // Create a hash for this combination of background settings.\n        // This is used to determine when two slide backgrounds are\n        // the same.\n        if (data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe) {\n            element.setAttribute('data-background-hash', data.background +\n                data.backgroundSize +\n                data.backgroundImage +\n                data.backgroundVideo +\n                data.backgroundIframe +\n                data.backgroundColor +\n                data.backgroundRepeat +\n                data.backgroundPosition +\n                data.backgroundTransition +\n                data.backgroundOpacity);\n        }\n\n        // Additional and optional background properties\n        if (data.backgroundSize) element.setAttribute('data-background-size', data.backgroundSize);\n        if (data.backgroundColor) element.style.backgroundColor = data.backgroundColor;\n        if (data.backgroundTransition) element.setAttribute('data-background-transition', data.backgroundTransition);\n\n        if (slide.hasAttribute('data-preload')) element.setAttribute('data-preload', '');\n\n        // Background image options are set on the content wrapper\n        if (data.backgroundSize) contentElement.style.backgroundSize = data.backgroundSize;\n        if (data.backgroundRepeat) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n        if (data.backgroundPosition) contentElement.style.backgroundPosition = data.backgroundPosition;\n        if (data.backgroundOpacity) contentElement.style.opacity = data.backgroundOpacity;\n\n        // If this slide has a background color, we add a class that\n        // signals if it is light or dark. If the slide has no background\n        // color, no class will be added\n        var contrastColor = data.backgroundColor;\n\n        // If no bg color was found, check the computed background\n        if (!contrastColor) {\n            var computedBackgroundStyle = window.getComputedStyle(element);\n            if (computedBackgroundStyle && computedBackgroundStyle.backgroundColor) {\n                contrastColor = computedBackgroundStyle.backgroundColor;\n            }\n        }\n\n        if (contrastColor) {\n            var rgb = colorToRgb(contrastColor);\n\n            // Ignore fully transparent backgrounds. Some browsers return\n            // rgba(0,0,0,0) when reading the computed background color of\n            // an element with no background\n            if (rgb && rgb.a !== 0) {\n                if (colorBrightness(contrastColor) < 128) {\n                    slide.classList.add('has-dark-background');\n                } else {\n                    slide.classList.add('has-light-background');\n                }\n            }\n        }\n\n    }\n\n    /**\n     * Registers a listener to postMessage events, this makes it\n     * possible to call all reveal.js API methods from another\n     * window. For example:\n     *\n     * revealWindow.postMessage( JSON.stringify({\n     *   method: 'slide',\n     *   args: [ 2 ]\n     * }), '*' );\n     */\n    function setupPostMessage() {\n\n        if (config.postMessage) {\n            window.addEventListener('message', function(event) {\n                var data = event.data;\n\n                // Make sure we're dealing with JSON\n                if (typeof data === 'string' && data.charAt(0) === '{' && data.charAt(data.length - 1) === '}') {\n                    data = JSON.parse(data);\n\n                    // Check if the requested method can be found\n                    if (data.method && typeof Reveal[data.method] === 'function') {\n\n                        if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n\n                            var result = Reveal[data.method].apply(Reveal, data.args);\n\n                            // Dispatch a postMessage event with the returned value from\n                            // our method invocation for getter functions\n                            dispatchPostMessage('callback', {\n                                method: data.method,\n                                result: result\n                            });\n\n                        } else {\n                            console.warn('reveal.js: \"' + data.method + '\" is is blacklisted from the postMessage API');\n                        }\n\n                    }\n                }\n            }, false);\n        }\n\n    }\n\n    /**\n     * Applies the configuration settings from the config\n     * object. May be called multiple times.\n     *\n     * @param {object} options\n     */\n    function configure(options) {\n\n        var oldTransition = config.transition;\n\n        // New config options may be passed when this method\n        // is invoked through the API after initialization\n        if (typeof options === 'object') extend(config, options);\n\n        // Abort if reveal.js hasn't finished loading, config\n        // changes will be applied automatically once loading\n        // finishes\n        if (loaded === false) return;\n\n        var numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length;\n\n        // Remove the previously configured transition class\n        dom.wrapper.classList.remove(oldTransition);\n\n        // Force linear transition based on browser capabilities\n        if (features.transforms3d === false) config.transition = 'linear';\n\n        dom.wrapper.classList.add(config.transition);\n\n        dom.wrapper.setAttribute('data-transition-speed', config.transitionSpeed);\n        dom.wrapper.setAttribute('data-background-transition', config.backgroundTransition);\n\n        dom.controls.style.display = config.controls ? 'block' : 'none';\n        dom.progress.style.display = config.progress ? 'block' : 'none';\n\n        dom.controls.setAttribute('data-controls-layout', config.controlsLayout);\n        dom.controls.setAttribute('data-controls-back-arrows', config.controlsBackArrows);\n\n        if (config.shuffle) {\n            shuffle();\n        }\n\n        if (config.rtl) {\n            dom.wrapper.classList.add('rtl');\n        } else {\n            dom.wrapper.classList.remove('rtl');\n        }\n\n        if (config.center) {\n            dom.wrapper.classList.add('center');\n        } else {\n            dom.wrapper.classList.remove('center');\n        }\n\n        // Exit the paused mode if it was configured off\n        if (config.pause === false) {\n            resume();\n        }\n\n        if (config.showNotes) {\n            dom.speakerNotes.setAttribute('data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline');\n        }\n\n        if (config.mouseWheel) {\n            document.addEventListener('DOMMouseScroll', onDocumentMouseScroll, false); // FF\n            document.addEventListener('mousewheel', onDocumentMouseScroll, false);\n        } else {\n            document.removeEventListener('DOMMouseScroll', onDocumentMouseScroll, false); // FF\n            document.removeEventListener('mousewheel', onDocumentMouseScroll, false);\n        }\n\n        // Rolling 3D links\n        if (config.rollingLinks) {\n            enableRollingLinks();\n        } else {\n            disableRollingLinks();\n        }\n\n        // Auto-hide the mouse pointer when its inactive\n        if (config.hideInactiveCursor) {\n            document.addEventListener('mousemove', onDocumentCursorActive, false);\n            document.addEventListener('mousedown', onDocumentCursorActive, false);\n        } else {\n            showCursor();\n\n            document.removeEventListener('mousemove', onDocumentCursorActive, false);\n            document.removeEventListener('mousedown', onDocumentCursorActive, false);\n        }\n\n        // Iframe link previews\n        if (config.previewLinks) {\n            enablePreviewLinks();\n            disablePreviewLinks('[data-preview-link=false]');\n        } else {\n            disablePreviewLinks();\n            enablePreviewLinks('[data-preview-link]:not([data-preview-link=false])');\n        }\n\n        // Remove existing auto-slide controls\n        if (autoSlidePlayer) {\n            autoSlidePlayer.destroy();\n            autoSlidePlayer = null;\n        }\n\n        // Generate auto-slide controls if needed\n        if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable && features.canvas && features.requestAnimationFrame) {\n            autoSlidePlayer = new Playback(dom.wrapper, function() {\n                return Math.min(Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0), 1);\n            });\n\n            autoSlidePlayer.on('click', onAutoSlidePlayerClick);\n            autoSlidePaused = false;\n        }\n\n        // When fragments are turned off they should be visible\n        if (config.fragments === false) {\n            toArray(dom.slides.querySelectorAll('.fragment')).forEach(function(element) {\n                element.classList.add('visible');\n                element.classList.remove('current-fragment');\n            });\n        }\n\n        // Slide numbers\n        var slideNumberDisplay = 'none';\n        if (config.slideNumber && !isPrintingPDF()) {\n            if (config.showSlideNumber === 'all') {\n                slideNumberDisplay = 'block';\n            } else if (config.showSlideNumber === 'speaker' && isSpeakerNotes()) {\n                slideNumberDisplay = 'block';\n            }\n        }\n\n        dom.slideNumber.style.display = slideNumberDisplay;\n\n        // Add the navigation mode to the DOM so we can adjust styling\n        if (config.navigationMode !== 'default') {\n            dom.wrapper.setAttribute('data-navigation-mode', config.navigationMode);\n        } else {\n            dom.wrapper.removeAttribute('data-navigation-mode');\n        }\n\n        // Define our contextual list of keyboard shortcuts\n        if (config.navigationMode === 'linear') {\n            keyboardShortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n            keyboardShortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K'] = 'Previous slide';\n        } else {\n            keyboardShortcuts['N  ,  SPACE'] = 'Next slide';\n            keyboardShortcuts['P'] = 'Previous slide';\n            keyboardShortcuts['&#8592;  ,  H'] = 'Navigate left';\n            keyboardShortcuts['&#8594;  ,  L'] = 'Navigate right';\n            keyboardShortcuts['&#8593;  ,  K'] = 'Navigate up';\n            keyboardShortcuts['&#8595;  ,  J'] = 'Navigate down';\n        }\n\n        keyboardShortcuts['Home  ,  Shift &#8592;'] = 'First slide';\n        keyboardShortcuts['End  ,  Shift &#8594;'] = 'Last slide';\n        keyboardShortcuts['B  ,  .'] = 'Pause';\n        keyboardShortcuts['F'] = 'Fullscreen';\n        keyboardShortcuts['ESC, O'] = 'Slide overview';\n\n        sync();\n\n    }\n\n    /**\n     * Binds all event listeners.\n     */\n    function addEventListeners() {\n\n        eventsAreBound = true;\n\n        window.addEventListener('hashchange', onWindowHashChange, false);\n        window.addEventListener('resize', onWindowResize, false);\n\n        if (config.touch) {\n            if ('onpointerdown' in window) {\n                // Use W3C pointer events\n                dom.wrapper.addEventListener('pointerdown', onPointerDown, false);\n                dom.wrapper.addEventListener('pointermove', onPointerMove, false);\n                dom.wrapper.addEventListener('pointerup', onPointerUp, false);\n            } else if (window.navigator.msPointerEnabled) {\n                // IE 10 uses prefixed version of pointer events\n                dom.wrapper.addEventListener('MSPointerDown', onPointerDown, false);\n                dom.wrapper.addEventListener('MSPointerMove', onPointerMove, false);\n                dom.wrapper.addEventListener('MSPointerUp', onPointerUp, false);\n            } else {\n                // Fall back to touch events\n                dom.wrapper.addEventListener('touchstart', onTouchStart, false);\n                dom.wrapper.addEventListener('touchmove', onTouchMove, false);\n                dom.wrapper.addEventListener('touchend', onTouchEnd, false);\n            }\n        }\n\n        if (config.keyboard) {\n            document.addEventListener('keydown', onDocumentKeyDown, false);\n            document.addEventListener('keypress', onDocumentKeyPress, false);\n        }\n\n        if (config.progress && dom.progress) {\n            dom.progress.addEventListener('click', onProgressClicked, false);\n        }\n\n        dom.pauseOverlay.addEventListener('click', resume, false);\n\n        if (config.focusBodyOnPageVisibilityChange) {\n            var visibilityChange;\n\n            if ('hidden' in document) {\n                visibilityChange = 'visibilitychange';\n            } else if ('msHidden' in document) {\n                visibilityChange = 'msvisibilitychange';\n            } else if ('webkitHidden' in document) {\n                visibilityChange = 'webkitvisibilitychange';\n            }\n\n            if (visibilityChange) {\n                document.addEventListener(visibilityChange, onPageVisibilityChange, false);\n            }\n        }\n\n        // Listen to both touch and click events, in case the device\n        // supports both\n        var pointerEvents = ['touchstart', 'click'];\n\n        // Only support touch for Android, fixes double navigations in\n        // stock browser\n        if (UA.match(/android/gi)) {\n            pointerEvents = ['touchstart'];\n        }\n\n        pointerEvents.forEach(function(eventName) {\n            dom.controlsLeft.forEach(function(el) {\n                el.addEventListener(eventName, onNavigateLeftClicked, false);\n            });\n            dom.controlsRight.forEach(function(el) {\n                el.addEventListener(eventName, onNavigateRightClicked, false);\n            });\n            dom.controlsUp.forEach(function(el) {\n                el.addEventListener(eventName, onNavigateUpClicked, false);\n            });\n            dom.controlsDown.forEach(function(el) {\n                el.addEventListener(eventName, onNavigateDownClicked, false);\n            });\n            dom.controlsPrev.forEach(function(el) {\n                el.addEventListener(eventName, onNavigatePrevClicked, false);\n            });\n            dom.controlsNext.forEach(function(el) {\n                el.addEventListener(eventName, onNavigateNextClicked, false);\n            });\n        });\n\n    }\n\n    /**\n     * Unbinds all event listeners.\n     */\n    function removeEventListeners() {\n\n        eventsAreBound = false;\n\n        document.removeEventListener('keydown', onDocumentKeyDown, false);\n        document.removeEventListener('keypress', onDocumentKeyPress, false);\n        window.removeEventListener('hashchange', onWindowHashChange, false);\n        window.removeEventListener('resize', onWindowResize, false);\n\n        dom.wrapper.removeEventListener('pointerdown', onPointerDown, false);\n        dom.wrapper.removeEventListener('pointermove', onPointerMove, false);\n        dom.wrapper.removeEventListener('pointerup', onPointerUp, false);\n\n        dom.wrapper.removeEventListener('MSPointerDown', onPointerDown, false);\n        dom.wrapper.removeEventListener('MSPointerMove', onPointerMove, false);\n        dom.wrapper.removeEventListener('MSPointerUp', onPointerUp, false);\n\n        dom.wrapper.removeEventListener('touchstart', onTouchStart, false);\n        dom.wrapper.removeEventListener('touchmove', onTouchMove, false);\n        dom.wrapper.removeEventListener('touchend', onTouchEnd, false);\n\n        dom.pauseOverlay.removeEventListener('click', resume, false);\n\n        if (config.progress && dom.progress) {\n            dom.progress.removeEventListener('click', onProgressClicked, false);\n        }\n\n        ['touchstart', 'click'].forEach(function(eventName) {\n            dom.controlsLeft.forEach(function(el) {\n                el.removeEventListener(eventName, onNavigateLeftClicked, false);\n            });\n            dom.controlsRight.forEach(function(el) {\n                el.removeEventListener(eventName, onNavigateRightClicked, false);\n            });\n            dom.controlsUp.forEach(function(el) {\n                el.removeEventListener(eventName, onNavigateUpClicked, false);\n            });\n            dom.controlsDown.forEach(function(el) {\n                el.removeEventListener(eventName, onNavigateDownClicked, false);\n            });\n            dom.controlsPrev.forEach(function(el) {\n                el.removeEventListener(eventName, onNavigatePrevClicked, false);\n            });\n            dom.controlsNext.forEach(function(el) {\n                el.removeEventListener(eventName, onNavigateNextClicked, false);\n            });\n        });\n\n    }\n\n    /**\n     * Registers a new plugin with this reveal.js instance.\n     *\n     * reveal.js waits for all regisered plugins to initialize\n     * before considering itself ready, as long as the plugin\n     * is registered before calling `Reveal.initialize()`.\n     */\n    function registerPlugin(id, plugin) {\n\n        if (plugins[id] === undefined) {\n            plugins[id] = plugin;\n\n            // If a plugin is registered after reveal.js is loaded,\n            // initialize it right away\n            if (loaded && typeof plugin.init === 'function') {\n                plugin.init();\n            }\n        } else {\n            console.warn('reveal.js: \"' + id + '\" plugin has already been registered');\n        }\n\n    }\n\n    /**\n     * Checks if a specific plugin has been registered.\n     *\n     * @param {String} id Unique plugin identifier\n     */\n    function hasPlugin(id) {\n\n        return !!plugins[id];\n\n    }\n\n    /**\n     * Returns the specific plugin instance, if a plugin\n     * with the given ID has been registered.\n     *\n     * @param {String} id Unique plugin identifier\n     */\n    function getPlugin(id) {\n\n        return plugins[id];\n\n    }\n\n    /**\n     * Add a custom key binding with optional description to\n     * be added to the help screen.\n     */\n    function addKeyBinding(binding, callback) {\n\n        if (typeof binding === 'object' && binding.keyCode) {\n            registeredKeyBindings[binding.keyCode] = {\n                callback: callback,\n                key: binding.key,\n                description: binding.description\n            };\n        } else {\n            registeredKeyBindings[binding] = {\n                callback: callback,\n                key: null,\n                description: null\n            };\n        }\n\n    }\n\n    /**\n     * Removes the specified custom key binding.\n     */\n    function removeKeyBinding(keyCode) {\n\n        delete registeredKeyBindings[keyCode];\n\n    }\n\n    /**\n     * Extend object a with the properties of object b.\n     * If there's a conflict, object b takes precedence.\n     *\n     * @param {object} a\n     * @param {object} b\n     */\n    function extend(a, b) {\n\n        for (var i in b) {\n            a[i] = b[i];\n        }\n\n        return a;\n\n    }\n\n    /**\n     * Converts the target object to an array.\n     *\n     * @param {object} o\n     * @return {object[]}\n     */\n    function toArray(o) {\n\n        return Array.prototype.slice.call(o);\n\n    }\n\n    /**\n     * Utility for deserializing a value.\n     *\n     * @param {*} value\n     * @return {*}\n     */\n    function deserialize(value) {\n\n        if (typeof value === 'string') {\n            if (value === 'null') return null;\n            else if (value === 'true') return true;\n            else if (value === 'false') return false;\n            else if (value.match(/^-?[\\d\\.]+$/)) return parseFloat(value);\n        }\n\n        return value;\n\n    }\n\n    /**\n     * Measures the distance in pixels between point a\n     * and point b.\n     *\n     * @param {object} a point with x/y properties\n     * @param {object} b point with x/y properties\n     *\n     * @return {number}\n     */\n    function distanceBetween(a, b) {\n\n        var dx = a.x - b.x,\n            dy = a.y - b.y;\n\n        return Math.sqrt(dx * dx + dy * dy);\n\n    }\n\n    /**\n     * Applies a CSS transform to the target element.\n     *\n     * @param {HTMLElement} element\n     * @param {string} transform\n     */\n    function transformElement(element, transform) {\n\n        element.style.WebkitTransform = transform;\n        element.style.MozTransform = transform;\n        element.style.msTransform = transform;\n        element.style.transform = transform;\n\n    }\n\n    /**\n     * Applies CSS transforms to the slides container. The container\n     * is transformed from two separate sources: layout and the overview\n     * mode.\n     *\n     * @param {object} transforms\n     */\n    function transformSlides(transforms) {\n\n        // Pick up new transforms from arguments\n        if (typeof transforms.layout === 'string') slidesTransform.layout = transforms.layout;\n        if (typeof transforms.overview === 'string') slidesTransform.overview = transforms.overview;\n\n        // Apply the transforms to the slides container\n        if (slidesTransform.layout) {\n            transformElement(dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview);\n        } else {\n            transformElement(dom.slides, slidesTransform.overview);\n        }\n\n    }\n\n    /**\n     * Injects the given CSS styles into the DOM.\n     *\n     * @param {string} value\n     */\n    function injectStyleSheet(value) {\n\n        var tag = document.createElement('style');\n        tag.type = 'text/css';\n        if (tag.styleSheet) {\n            tag.styleSheet.cssText = value;\n        } else {\n            tag.appendChild(document.createTextNode(value));\n        }\n        document.getElementsByTagName('head')[0].appendChild(tag);\n\n    }\n\n    /**\n     * Find the closest parent that matches the given\n     * selector.\n     *\n     * @param {HTMLElement} target The child element\n     * @param {String} selector The CSS selector to match\n     * the parents against\n     *\n     * @return {HTMLElement} The matched parent or null\n     * if no matching parent was found\n     */\n    function closestParent(target, selector) {\n\n        var parent = target.parentNode;\n\n        while (parent) {\n\n            // There's some overhead doing this each time, we don't\n            // want to rewrite the element prototype but should still\n            // be enough to feature detect once at startup...\n            var matchesMethod = parent.matches || parent.matchesSelector || parent.msMatchesSelector;\n\n            // If we find a match, we're all set\n            if (matchesMethod && matchesMethod.call(parent, selector)) {\n                return parent;\n            }\n\n            // Keep searching\n            parent = parent.parentNode;\n\n        }\n\n        return null;\n\n    }\n\n    /**\n     * Converts various color input formats to an {r:0,g:0,b:0} object.\n     *\n     * @param {string} color The string representation of a color\n     * @example\n     * colorToRgb('#000');\n     * @example\n     * colorToRgb('#000000');\n     * @example\n     * colorToRgb('rgb(0,0,0)');\n     * @example\n     * colorToRgb('rgba(0,0,0)');\n     *\n     * @return {{r: number, g: number, b: number, [a]: number}|null}\n     */\n    function colorToRgb(color) {\n\n        var hex3 = color.match(/^#([0-9a-f]{3})$/i);\n        if (hex3 && hex3[1]) {\n            hex3 = hex3[1];\n            return {\n                r: parseInt(hex3.charAt(0), 16) * 0x11,\n                g: parseInt(hex3.charAt(1), 16) * 0x11,\n                b: parseInt(hex3.charAt(2), 16) * 0x11\n            };\n        }\n\n        var hex6 = color.match(/^#([0-9a-f]{6})$/i);\n        if (hex6 && hex6[1]) {\n            hex6 = hex6[1];\n            return {\n                r: parseInt(hex6.substr(0, 2), 16),\n                g: parseInt(hex6.substr(2, 2), 16),\n                b: parseInt(hex6.substr(4, 2), 16)\n            };\n        }\n\n        var rgb = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\n        if (rgb) {\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10)\n            };\n        }\n\n        var rgba = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i);\n        if (rgba) {\n            return {\n                r: parseInt(rgba[1], 10),\n                g: parseInt(rgba[2], 10),\n                b: parseInt(rgba[3], 10),\n                a: parseFloat(rgba[4])\n            };\n        }\n\n        return null;\n\n    }\n\n    /**\n     * Calculates brightness on a scale of 0-255.\n     *\n     * @param {string} color See colorToRgb for supported formats.\n     * @see {@link colorToRgb}\n     */\n    function colorBrightness(color) {\n\n        if (typeof color === 'string') color = colorToRgb(color);\n\n        if (color) {\n            return (color.r * 299 + color.g * 587 + color.b * 114) / 1000;\n        }\n\n        return null;\n\n    }\n\n    /**\n     * Returns the remaining height within the parent of the\n     * target element.\n     *\n     * remaining height = [ configured parent height ] - [ current parent height ]\n     *\n     * @param {HTMLElement} element\n     * @param {number} [height]\n     */\n    function getRemainingHeight(element, height) {\n\n        height = height || 0;\n\n        if (element) {\n            var newHeight, oldHeight = element.style.height;\n\n            // Change the .stretch element height to 0 in order find the height of all\n            // the other elements\n            element.style.height = '0px';\n\n            // In Overview mode, the parent (.slide) height is set of 700px.\n            // Restore it temporarily to its natural height.\n            element.parentNode.style.height = 'auto';\n\n            newHeight = height - element.parentNode.offsetHeight;\n\n            // Restore the old height, just in case\n            element.style.height = oldHeight + 'px';\n\n            // Clear the parent (.slide) height. .removeProperty works in IE9+\n            element.parentNode.style.removeProperty('height');\n\n            return newHeight;\n        }\n\n        return height;\n\n    }\n\n    /**\n     * Checks if this instance is being used to print a PDF.\n     */\n    function isPrintingPDF() {\n\n        return (/print-pdf/gi).test(window.location.search);\n\n    }\n\n    /**\n     * Hides the address bar if we're on a mobile device.\n     */\n    function hideAddressBar() {\n\n        if (config.hideAddressBar && isMobileDevice) {\n            // Events that should trigger the address bar to hide\n            window.addEventListener('load', removeAddressBar, false);\n            window.addEventListener('orientationchange', removeAddressBar, false);\n        }\n\n    }\n\n    /**\n     * Causes the address bar to hide on mobile devices,\n     * more vertical space ftw.\n     */\n    function removeAddressBar() {\n\n        setTimeout(function() {\n            window.scrollTo(0, 1);\n        }, 10);\n\n    }\n\n    /**\n     * Dispatches an event of the specified type from the\n     * reveal DOM element.\n     */\n    function dispatchEvent(type, args) {\n\n        var event = document.createEvent('HTMLEvents', 1, 2);\n        event.initEvent(type, true, true);\n        extend(event, args);\n        dom.wrapper.dispatchEvent(event);\n\n        // If we're in an iframe, post each reveal.js event to the\n        // parent window. Used by the notes plugin\n        dispatchPostMessage(type);\n\n    }\n\n    /**\n     * Dispatched a postMessage of the given type from our window.\n     */\n    function dispatchPostMessage(type, data) {\n\n        if (config.postMessageEvents && window.parent !== window.self) {\n            var message = {\n                namespace: 'reveal',\n                eventName: type,\n                state: getState()\n            };\n\n            extend(message, data);\n\n            window.parent.postMessage(JSON.stringify(message), '*');\n        }\n\n    }\n\n    /**\n     * Wrap all links in 3D goodness.\n     */\n    function enableRollingLinks() {\n\n        if (features.transforms3d && !('msPerspective' in document.body.style)) {\n            var anchors = dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ' a');\n\n            for (var i = 0, len = anchors.length; i < len; i++) {\n                var anchor = anchors[i];\n\n                if (anchor.textContent && !anchor.querySelector('*') && (!anchor.className || !anchor.classList.contains(anchor, 'roll'))) {\n                    var span = document.createElement('span');\n                    span.setAttribute('data-title', anchor.text);\n                    span.innerHTML = anchor.innerHTML;\n\n                    anchor.classList.add('roll');\n                    anchor.innerHTML = '';\n                    anchor.appendChild(span);\n                }\n            }\n        }\n\n    }\n\n    /**\n     * Unwrap all 3D links.\n     */\n    function disableRollingLinks() {\n\n        var anchors = dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ' a.roll');\n\n        for (var i = 0, len = anchors.length; i < len; i++) {\n            var anchor = anchors[i];\n            var span = anchor.querySelector('span');\n\n            if (span) {\n                anchor.classList.remove('roll');\n                anchor.innerHTML = span.innerHTML;\n            }\n        }\n\n    }\n\n    /**\n     * Bind preview frame links.\n     *\n     * @param {string} [selector=a] - selector for anchors\n     */\n    function enablePreviewLinks(selector) {\n\n        var anchors = toArray(document.querySelectorAll(selector ? selector : 'a'));\n\n        anchors.forEach(function(element) {\n            if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n                element.addEventListener('click', onPreviewLinkClicked, false);\n            }\n        });\n\n    }\n\n    /**\n     * Unbind preview frame links.\n     */\n    function disablePreviewLinks(selector) {\n\n        var anchors = toArray(document.querySelectorAll(selector ? selector : 'a'));\n\n        anchors.forEach(function(element) {\n            if (/^(http|www)/gi.test(element.getAttribute('href'))) {\n                element.removeEventListener('click', onPreviewLinkClicked, false);\n            }\n        });\n\n    }\n\n    /**\n     * Opens a preview window for the target URL.\n     *\n     * @param {string} url - url for preview iframe src\n     */\n    function showPreview(url) {\n\n        closeOverlay();\n\n        dom.overlay = document.createElement('div');\n        dom.overlay.classList.add('overlay');\n        dom.overlay.classList.add('overlay-preview');\n        dom.wrapper.appendChild(dom.overlay);\n\n        dom.overlay.innerHTML = [\n            '<header>',\n            '<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>',\n            '<a class=\"external\" href=\"' + url + '\" target=\"_blank\"><span class=\"icon\"></span></a>',\n            '</header>',\n            '<div class=\"spinner\"></div>',\n            '<div class=\"viewport\">',\n            '<iframe src=\"' + url + '\"></iframe>',\n            '<small class=\"viewport-inner\">',\n            '<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site\\'s policy (x-frame-options).</span>',\n            '</small>',\n            '</div>'\n        ].join('');\n\n        dom.overlay.querySelector('iframe').addEventListener('load', function(event) {\n            dom.overlay.classList.add('loaded');\n        }, false);\n\n        dom.overlay.querySelector('.close').addEventListener('click', function(event) {\n            closeOverlay();\n            event.preventDefault();\n        }, false);\n\n        dom.overlay.querySelector('.external').addEventListener('click', function(event) {\n            closeOverlay();\n        }, false);\n\n        setTimeout(function() {\n            dom.overlay.classList.add('visible');\n        }, 1);\n\n    }\n\n    /**\n     * Open or close help overlay window.\n     *\n     * @param {Boolean} [override] Flag which overrides the\n     * toggle logic and forcibly sets the desired state. True means\n     * help is open, false means it's closed.\n     */\n    function toggleHelp(override) {\n\n        if (typeof override === 'boolean') {\n            override ? showHelp() : closeOverlay();\n        } else {\n            if (dom.overlay) {\n                closeOverlay();\n            } else {\n                showHelp();\n            }\n        }\n    }\n\n    /**\n     * Opens an overlay window with help material.\n     */\n    function showHelp() {\n\n        if (config.help) {\n\n            closeOverlay();\n\n            dom.overlay = document.createElement('div');\n            dom.overlay.classList.add('overlay');\n            dom.overlay.classList.add('overlay-help');\n            dom.wrapper.appendChild(dom.overlay);\n\n            var html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n            html += '<table><th>KEY</th><th>ACTION</th>';\n            for (var key in keyboardShortcuts) {\n                html += '<tr><td>' + key + '</td><td>' + keyboardShortcuts[key] + '</td></tr>';\n            }\n\n            // Add custom key bindings that have associated descriptions\n            for (var binding in registeredKeyBindings) {\n                if (registeredKeyBindings[binding].key && registeredKeyBindings[binding].description) {\n                    html += '<tr><td>' + registeredKeyBindings[binding].key + '</td><td>' + registeredKeyBindings[binding].description + '</td></tr>';\n                }\n            }\n\n            html += '</table>';\n\n            dom.overlay.innerHTML = [\n                '<header>',\n                '<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>',\n                '</header>',\n                '<div class=\"viewport\">',\n                '<div class=\"viewport-inner\">' + html + '</div>',\n                '</div>'\n            ].join('');\n\n            dom.overlay.querySelector('.close').addEventListener('click', function(event) {\n                closeOverlay();\n                event.preventDefault();\n            }, false);\n\n            setTimeout(function() {\n                dom.overlay.classList.add('visible');\n            }, 1);\n\n        }\n\n    }\n\n    /**\n     * Closes any currently open overlay.\n     */\n    function closeOverlay() {\n\n        if (dom.overlay) {\n            dom.overlay.parentNode.removeChild(dom.overlay);\n            dom.overlay = null;\n        }\n\n    }\n\n    /**\n     * Applies JavaScript-controlled layout rules to the\n     * presentation.\n     */\n    function layout() {\n\n        if (dom.wrapper && !isPrintingPDF()) {\n\n            if (!config.disableLayout) {\n\n                // On some mobile devices '100vh' is taller than the visible\n                // viewport which leads to part of the presentation being\n                // cut off. To work around this we define our own '--vh' custom\n                // property where 100x adds up to the correct height.\n                //\n                // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n                if (isMobileDevice) {\n                    document.documentElement.style.setProperty('--vh', (window.innerHeight * 0.01) + 'px');\n                }\n\n                var size = getComputedSlideSize();\n\n                var oldScale = scale;\n\n                // Layout the contents of the slides\n                layoutSlideContents(config.width, config.height);\n\n                dom.slides.style.width = size.width + 'px';\n                dom.slides.style.height = size.height + 'px';\n\n                // Determine scale of content to fit within available space\n                scale = Math.min(size.presentationWidth / size.width, size.presentationHeight / size.height);\n\n                // Respect max/min scale settings\n                scale = Math.max(scale, config.minScale);\n                scale = Math.min(scale, config.maxScale);\n\n                // Don't apply any scaling styles if scale is 1\n                if (scale === 1) {\n                    dom.slides.style.zoom = '';\n                    dom.slides.style.left = '';\n                    dom.slides.style.top = '';\n                    dom.slides.style.bottom = '';\n                    dom.slides.style.right = '';\n                    transformSlides({\n                        layout: ''\n                    });\n                } else {\n                    // Zoom Scaling\n                    // Content remains crisp no matter how much we scale. Side\n                    // effects are minor differences in text layout and iframe\n                    // viewports changing size. A 200x200 iframe viewport in a\n                    // 2x zoomed presentation ends up having a 400x400 viewport.\n                    if (scale > 1 && features.zoom && window.devicePixelRatio < 2) {\n                        dom.slides.style.zoom = scale;\n                        dom.slides.style.left = '';\n                        dom.slides.style.top = '';\n                        dom.slides.style.bottom = '';\n                        dom.slides.style.right = '';\n                        transformSlides({\n                            layout: ''\n                        });\n                    }\n                    // Transform Scaling\n                    // Content layout remains the exact same when scaled up.\n                    // Side effect is content becoming blurred, especially with\n                    // high scale values on ldpi screens.\n                    else {\n                        dom.slides.style.zoom = '';\n                        dom.slides.style.left = '50%';\n                        dom.slides.style.top = '50%';\n                        dom.slides.style.bottom = 'auto';\n                        dom.slides.style.right = 'auto';\n                        transformSlides({\n                            layout: 'translate(-50%, -50%) scale(' + scale + ')'\n                        });\n                    }\n                }\n\n                // Select all slides, vertical and horizontal\n                var slides = toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR));\n\n                for (var i = 0, len = slides.length; i < len; i++) {\n                    var slide = slides[i];\n\n                    // Don't bother updating invisible slides\n                    if (slide.style.display === 'none') {\n                        continue;\n                    }\n\n                    if (config.center || slide.classList.contains('center')) {\n                        // Vertical stacks are not centred since their section\n                        // children will be\n                        if (slide.classList.contains('stack')) {\n                            slide.style.top = 0;\n                        } else {\n                            slide.style.top = Math.max((size.height - slide.scrollHeight) / 2, 0) + 'px';\n                        }\n                    } else {\n                        slide.style.top = '';\n                    }\n\n                }\n\n                if (oldScale !== scale) {\n                    dispatchEvent('resize', {\n                        'oldScale': oldScale,\n                        'scale': scale,\n                        'size': size\n                    });\n                }\n            }\n\n            updateProgress();\n            updateParallax();\n\n            if (isOverview()) {\n                updateOverview();\n            }\n\n        }\n\n    }\n\n    /**\n     * Applies layout logic to the contents of all slides in\n     * the presentation.\n     *\n     * @param {string|number} width\n     * @param {string|number} height\n     */\n    function layoutSlideContents(width, height) {\n\n        // Handle sizing of elements with the 'stretch' class\n        toArray(dom.slides.querySelectorAll('section > .stretch')).forEach(function(element) {\n\n            // Determine how much vertical space we can use\n            var remainingHeight = getRemainingHeight(element, height);\n\n            // Consider the aspect ratio of media elements\n            if (/(img|video)/gi.test(element.nodeName)) {\n                var nw = element.naturalWidth || element.videoWidth,\n                    nh = element.naturalHeight || element.videoHeight;\n\n                var es = Math.min(width / nw, remainingHeight / nh);\n\n                element.style.width = (nw * es) + 'px';\n                element.style.height = (nh * es) + 'px';\n\n            } else {\n                element.style.width = width + 'px';\n                element.style.height = remainingHeight + 'px';\n            }\n\n        });\n\n    }\n\n    /**\n     * Calculates the computed pixel size of our slides. These\n     * values are based on the width and height configuration\n     * options.\n     *\n     * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n     * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n     */\n    function getComputedSlideSize(presentationWidth, presentationHeight) {\n\n        var size = {\n            // Slide size\n            width: config.width,\n            height: config.height,\n\n            // Presentation size\n            presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n            presentationHeight: presentationHeight || dom.wrapper.offsetHeight\n        };\n\n        // Reduce available space by margin\n        size.presentationWidth -= (size.presentationWidth * config.margin);\n        size.presentationHeight -= (size.presentationHeight * config.margin);\n\n        // Slide width may be a percentage of available width\n        if (typeof size.width === 'string' && /%$/.test(size.width)) {\n            size.width = parseInt(size.width, 10) / 100 * size.presentationWidth;\n        }\n\n        // Slide height may be a percentage of available height\n        if (typeof size.height === 'string' && /%$/.test(size.height)) {\n            size.height = parseInt(size.height, 10) / 100 * size.presentationHeight;\n        }\n\n        return size;\n\n    }\n\n    /**\n     * Stores the vertical index of a stack so that the same\n     * vertical slide can be selected when navigating to and\n     * from the stack.\n     *\n     * @param {HTMLElement} stack The vertical stack element\n     * @param {string|number} [v=0] Index to memorize\n     */\n    function setPreviousVerticalIndex(stack, v) {\n\n        if (typeof stack === 'object' && typeof stack.setAttribute === 'function') {\n            stack.setAttribute('data-previous-indexv', v || 0);\n        }\n\n    }\n\n    /**\n     * Retrieves the vertical index which was stored using\n     * #setPreviousVerticalIndex() or 0 if no previous index\n     * exists.\n     *\n     * @param {HTMLElement} stack The vertical stack element\n     */\n    function getPreviousVerticalIndex(stack) {\n\n        if (typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains('stack')) {\n            // Prefer manually defined start-indexv\n            var attributeName = stack.hasAttribute('data-start-indexv') ? 'data-start-indexv' : 'data-previous-indexv';\n\n            return parseInt(stack.getAttribute(attributeName) || 0, 10);\n        }\n\n        return 0;\n\n    }\n\n    /**\n     * Displays the overview of slides (quick nav) by scaling\n     * down and arranging all slide elements.\n     */\n    function activateOverview() {\n\n        // Only proceed if enabled in config\n        if (config.overview && !isOverview()) {\n\n            overview = true;\n\n            dom.wrapper.classList.add('overview');\n            dom.wrapper.classList.remove('overview-deactivating');\n\n            if (features.overviewTransitions) {\n                setTimeout(function() {\n                    dom.wrapper.classList.add('overview-animated');\n                }, 1);\n            }\n\n            // Don't auto-slide while in overview mode\n            cancelAutoSlide();\n\n            // Move the backgrounds element into the slide container to\n            // that the same scaling is applied\n            dom.slides.appendChild(dom.background);\n\n            // Clicking on an overview slide navigates to it\n            toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function(slide) {\n                if (!slide.classList.contains('stack')) {\n                    slide.addEventListener('click', onOverviewSlideClicked, true);\n                }\n            });\n\n            // Calculate slide sizes\n            var margin = 70;\n            var slideSize = getComputedSlideSize();\n            overviewSlideWidth = slideSize.width + margin;\n            overviewSlideHeight = slideSize.height + margin;\n\n            // Reverse in RTL mode\n            if (config.rtl) {\n                overviewSlideWidth = -overviewSlideWidth;\n            }\n\n            updateSlidesVisibility();\n            layoutOverview();\n            updateOverview();\n\n            layout();\n\n            // Notify observers of the overview showing\n            dispatchEvent('overviewshown', {\n                'indexh': indexh,\n                'indexv': indexv,\n                'currentSlide': currentSlide\n            });\n\n        }\n\n    }\n\n    /**\n     * Uses CSS transforms to position all slides in a grid for\n     * display inside of the overview mode.\n     */\n    function layoutOverview() {\n\n        // Layout slides\n        toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).forEach(function(hslide, h) {\n            hslide.setAttribute('data-index-h', h);\n            transformElement(hslide, 'translate3d(' + (h * overviewSlideWidth) + 'px, 0, 0)');\n\n            if (hslide.classList.contains('stack')) {\n\n                toArray(hslide.querySelectorAll('section')).forEach(function(vslide, v) {\n                    vslide.setAttribute('data-index-h', h);\n                    vslide.setAttribute('data-index-v', v);\n\n                    transformElement(vslide, 'translate3d(0, ' + (v * overviewSlideHeight) + 'px, 0)');\n                });\n\n            }\n        });\n\n        // Layout slide backgrounds\n        toArray(dom.background.childNodes).forEach(function(hbackground, h) {\n            transformElement(hbackground, 'translate3d(' + (h * overviewSlideWidth) + 'px, 0, 0)');\n\n            toArray(hbackground.querySelectorAll('.slide-background')).forEach(function(vbackground, v) {\n                transformElement(vbackground, 'translate3d(0, ' + (v * overviewSlideHeight) + 'px, 0)');\n            });\n        });\n\n    }\n\n    /**\n     * Moves the overview viewport to the current slides.\n     * Called each time the current slide changes.\n     */\n    function updateOverview() {\n\n        var vmin = Math.min(window.innerWidth, window.innerHeight);\n        var scale = Math.max(vmin / 5, 150) / vmin;\n\n        transformSlides({\n            overview: [\n                'scale(' + scale + ')',\n                'translateX(' + (-indexh * overviewSlideWidth) + 'px)',\n                'translateY(' + (-indexv * overviewSlideHeight) + 'px)'\n            ].join(' ')\n        });\n\n    }\n\n    /**\n     * Exits the slide overview and enters the currently\n     * active slide.\n     */\n    function deactivateOverview() {\n\n        // Only proceed if enabled in config\n        if (config.overview) {\n\n            overview = false;\n\n            dom.wrapper.classList.remove('overview');\n            dom.wrapper.classList.remove('overview-animated');\n\n            // Temporarily add a class so that transitions can do different things\n            // depending on whether they are exiting/entering overview, or just\n            // moving from slide to slide\n            dom.wrapper.classList.add('overview-deactivating');\n\n            setTimeout(function() {\n                dom.wrapper.classList.remove('overview-deactivating');\n            }, 1);\n\n            // Move the background element back out\n            dom.wrapper.appendChild(dom.background);\n\n            // Clean up changes made to slides\n            toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(function(slide) {\n                transformElement(slide, '');\n\n                slide.removeEventListener('click', onOverviewSlideClicked, true);\n            });\n\n            // Clean up changes made to backgrounds\n            toArray(dom.background.querySelectorAll('.slide-background')).forEach(function(background) {\n                transformElement(background, '');\n            });\n\n            transformSlides({\n                overview: ''\n            });\n\n            slide(indexh, indexv);\n\n            layout();\n\n            cueAutoSlide();\n\n            // Notify observers of the overview hiding\n            dispatchEvent('overviewhidden', {\n                'indexh': indexh,\n                'indexv': indexv,\n                'currentSlide': currentSlide\n            });\n\n        }\n    }\n\n    /**\n     * Toggles the slide overview mode on and off.\n     *\n     * @param {Boolean} [override] Flag which overrides the\n     * toggle logic and forcibly sets the desired state. True means\n     * overview is open, false means it's closed.\n     */\n    function toggleOverview(override) {\n\n        if (typeof override === 'boolean') {\n            override ? activateOverview() : deactivateOverview();\n        } else {\n            isOverview() ? deactivateOverview() : activateOverview();\n        }\n\n    }\n\n    /**\n     * Checks if the overview is currently active.\n     *\n     * @return {Boolean} true if the overview is active,\n     * false otherwise\n     */\n    function isOverview() {\n\n        return overview;\n\n    }\n\n    /**\n     * Return a hash URL that will resolve to the given slide location.\n     *\n     * @param {HTMLElement} [slide=currentSlide] The slide to link to\n     */\n    function locationHash(slide) {\n\n        var url = '/';\n\n        // Attempt to create a named link based on the slide's ID\n        var s = slide || currentSlide;\n        var id = s ? s.getAttribute('id') : null;\n        if (id) {\n            id = encodeURIComponent(id);\n        }\n\n        var index = getIndices(slide);\n        if (!config.fragmentInURL) {\n            index.f = undefined;\n        }\n\n        // If the current slide has an ID, use that as a named link,\n        // but we don't support named links with a fragment index\n        if (typeof id === 'string' && id.length && index.f === undefined) {\n            url = '/' + id;\n        }\n        // Otherwise use the /h/v index\n        else {\n            var hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n            if (index.h > 0 || index.v > 0 || index.f !== undefined) url += index.h + hashIndexBase;\n            if (index.v > 0 || index.f !== undefined) url += '/' + (index.v + hashIndexBase);\n            if (index.f !== undefined) url += '/' + index.f;\n        }\n\n        return url;\n\n    }\n\n    /**\n     * Checks if the current or specified slide is vertical\n     * (nested within another slide).\n     *\n     * @param {HTMLElement} [slide=currentSlide] The slide to check\n     * orientation of\n     * @return {Boolean}\n     */\n    function isVerticalSlide(slide) {\n\n        // Prefer slide argument, otherwise use current slide\n        slide = slide ? slide : currentSlide;\n\n        return slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i);\n\n    }\n\n    /**\n     * Handling the fullscreen functionality via the fullscreen API\n     *\n     * @see http://fullscreen.spec.whatwg.org/\n     * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n     */\n    function enterFullscreen() {\n\n        var element = document.documentElement;\n\n        // Check which implementation is available\n        var requestMethod = element.requestFullscreen ||\n            element.webkitRequestFullscreen ||\n            element.webkitRequestFullScreen ||\n            element.mozRequestFullScreen ||\n            element.msRequestFullscreen;\n\n        if (requestMethod) {\n            requestMethod.apply(element);\n        }\n\n    }\n\n    /**\n     * Shows the mouse pointer after it has been hidden with\n     * #hideCursor.\n     */\n    function showCursor() {\n\n        if (cursorHidden) {\n            cursorHidden = false;\n            dom.wrapper.style.cursor = '';\n        }\n\n    }\n\n    /**\n     * Hides the mouse pointer when it's on top of the .reveal\n     * container.\n     */\n    function hideCursor() {\n\n        if (cursorHidden === false) {\n            cursorHidden = true;\n            dom.wrapper.style.cursor = 'none';\n        }\n\n    }\n\n    /**\n     * Enters the paused mode which fades everything on screen to\n     * black.\n     */\n    function pause() {\n\n        if (config.pause) {\n            var wasPaused = dom.wrapper.classList.contains('paused');\n\n            cancelAutoSlide();\n            dom.wrapper.classList.add('paused');\n\n            if (wasPaused === false) {\n                dispatchEvent('paused');\n            }\n        }\n\n    }\n\n    /**\n     * Exits from the paused mode.\n     */\n    function resume() {\n\n        var wasPaused = dom.wrapper.classList.contains('paused');\n        dom.wrapper.classList.remove('paused');\n\n        cueAutoSlide();\n\n        if (wasPaused) {\n            dispatchEvent('resumed');\n        }\n\n    }\n\n    /**\n     * Toggles the paused mode on and off.\n     */\n    function togglePause(override) {\n\n        if (typeof override === 'boolean') {\n            override ? pause() : resume();\n        } else {\n            isPaused() ? resume() : pause();\n        }\n\n    }\n\n    /**\n     * Checks if we are currently in the paused mode.\n     *\n     * @return {Boolean}\n     */\n    function isPaused() {\n\n        return dom.wrapper.classList.contains('paused');\n\n    }\n\n    /**\n     * Toggles the auto slide mode on and off.\n     *\n     * @param {Boolean} [override] Flag which sets the desired state.\n     * True means autoplay starts, false means it stops.\n     */\n\n    function toggleAutoSlide(override) {\n\n        if (typeof override === 'boolean') {\n            override ? resumeAutoSlide() : pauseAutoSlide();\n        } else {\n            autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n        }\n\n    }\n\n    /**\n     * Checks if the auto slide mode is currently on.\n     *\n     * @return {Boolean}\n     */\n    function isAutoSliding() {\n\n        return !!(autoSlide && !autoSlidePaused);\n\n    }\n\n    /**\n     * Steps from the current point in the presentation to the\n     * slide which matches the specified horizontal and vertical\n     * indices.\n     *\n     * @param {number} [h=indexh] Horizontal index of the target slide\n     * @param {number} [v=indexv] Vertical index of the target slide\n     * @param {number} [f] Index of a fragment within the\n     * target slide to activate\n     * @param {number} [o] Origin for use in multimaster environments\n     */\n    function slide(h, v, f, o) {\n\n        // Remember where we were at before\n        previousSlide = currentSlide;\n\n        // Query all horizontal slides in the deck\n        var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR);\n\n        // Abort if there are no slides\n        if (horizontalSlides.length === 0) return;\n\n        // If no vertical index is specified and the upcoming slide is a\n        // stack, resume at its previous vertical index\n        if (v === undefined && !isOverview()) {\n            v = getPreviousVerticalIndex(horizontalSlides[h]);\n        }\n\n        // If we were on a vertical stack, remember what vertical index\n        // it was on so we can resume at the same position when returning\n        if (previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains('stack')) {\n            setPreviousVerticalIndex(previousSlide.parentNode, indexv);\n        }\n\n        // Remember the state before this slide\n        var stateBefore = state.concat();\n\n        // Reset the state array\n        state.length = 0;\n\n        var indexhBefore = indexh || 0,\n            indexvBefore = indexv || 0;\n\n        // Activate and transition to the new slide\n        indexh = updateSlides(HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h);\n        indexv = updateSlides(VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v);\n\n        // Update the visibility of slides now that the indices have changed\n        updateSlidesVisibility();\n\n        layout();\n\n        // Update the overview if it's currently active\n        if (isOverview()) {\n            updateOverview();\n        }\n\n        // Find the current horizontal slide and any possible vertical slides\n        // within it\n        var currentHorizontalSlide = horizontalSlides[indexh],\n            currentVerticalSlides = currentHorizontalSlide.querySelectorAll('section');\n\n        // Store references to the previous and current slides\n        currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide;\n\n        // Show fragment, if specified\n        if (typeof f !== 'undefined') {\n            navigateFragment(f);\n        }\n\n        // Dispatch an event if the slide changed\n        var slideChanged = (indexh !== indexhBefore || indexv !== indexvBefore);\n        if (!slideChanged) {\n            // Ensure that the previous slide is never the same as the current\n            previousSlide = null;\n        }\n\n        // Solves an edge case where the previous slide maintains the\n        // 'present' class when navigating between adjacent vertical\n        // stacks\n        if (previousSlide && previousSlide !== currentSlide) {\n            previousSlide.classList.remove('present');\n            previousSlide.setAttribute('aria-hidden', 'true');\n\n            // Reset all slides upon navigate to home\n            // Issue: #285\n            if (dom.wrapper.querySelector(HOME_SLIDE_SELECTOR).classList.contains('present')) {\n                // Launch async task\n                setTimeout(function() {\n                    var slides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.stack')),\n                        i;\n                    for (i in slides) {\n                        if (slides[i]) {\n                            // Reset stack\n                            setPreviousVerticalIndex(slides[i], 0);\n                        }\n                    }\n                }, 0);\n            }\n        }\n\n        // Apply the new state\n        stateLoop: for (var i = 0, len = state.length; i < len; i++) {\n            // Check if this state existed on the previous slide. If it\n            // did, we will avoid adding it repeatedly\n            for (var j = 0; j < stateBefore.length; j++) {\n                if (stateBefore[j] === state[i]) {\n                    stateBefore.splice(j, 1);\n                    continue stateLoop;\n                }\n            }\n\n            document.documentElement.classList.add(state[i]);\n\n            // Dispatch custom event matching the state's name\n            dispatchEvent(state[i]);\n        }\n\n        // Clean up the remains of the previous state\n        while (stateBefore.length) {\n            document.documentElement.classList.remove(stateBefore.pop());\n        }\n\n        if (slideChanged) {\n            dispatchEvent('slidechanged', {\n                'indexh': indexh,\n                'indexv': indexv,\n                'previousSlide': previousSlide,\n                'currentSlide': currentSlide,\n                'origin': o\n            });\n        }\n\n        // Handle embedded content\n        if (slideChanged || !previousSlide) {\n            stopEmbeddedContent(previousSlide);\n            startEmbeddedContent(currentSlide);\n        }\n\n        // Announce the current slide contents, for screen readers\n        dom.statusDiv.textContent = getStatusText(currentSlide);\n\n        updateControls();\n        updateProgress();\n        updateBackground();\n        updateParallax();\n        updateSlideNumber();\n        updateNotes();\n        updateFragments();\n\n        // Update the URL hash\n        writeURL();\n\n        cueAutoSlide();\n\n    }\n\n    /**\n     * Syncs the presentation with the current DOM. Useful\n     * when new slides or control elements are added or when\n     * the configuration has changed.\n     */\n    function sync() {\n\n        // Subscribe to input\n        removeEventListeners();\n        addEventListeners();\n\n        // Force a layout to make sure the current config is accounted for\n        layout();\n\n        // Reflect the current autoSlide value\n        autoSlide = config.autoSlide;\n\n        // Start auto-sliding if it's enabled\n        cueAutoSlide();\n\n        // Re-create the slide backgrounds\n        createBackgrounds();\n\n        // Write the current hash to the URL\n        writeURL();\n\n        sortAllFragments();\n\n        updateControls();\n        updateProgress();\n        updateSlideNumber();\n        updateSlidesVisibility();\n        updateBackground(true);\n        updateNotesVisibility();\n        updateNotes();\n\n        formatEmbeddedContent();\n\n        // Start or stop embedded content depending on global config\n        if (config.autoPlayMedia === false) {\n            stopEmbeddedContent(currentSlide, {\n                unloadIframes: false\n            });\n        } else {\n            startEmbeddedContent(currentSlide);\n        }\n\n        if (isOverview()) {\n            layoutOverview();\n        }\n\n    }\n\n    /**\n     * Updates reveal.js to keep in sync with new slide attributes. For\n     * example, if you add a new `data-background-image` you can call\n     * this to have reveal.js render the new background image.\n     *\n     * Similar to #sync() but more efficient when you only need to\n     * refresh a specific slide.\n     *\n     * @param {HTMLElement} slide\n     */\n    function syncSlide(slide) {\n\n        // Default to the current slide\n        slide = slide || currentSlide;\n\n        syncBackground(slide);\n        syncFragments(slide);\n\n        loadSlide(slide);\n\n        updateBackground();\n        updateNotes();\n\n    }\n\n    /**\n     * Formats the fragments on the given slide so that they have\n     * valid indices. Call this if fragments are changed in the DOM\n     * after reveal.js has already initialized.\n     *\n     * @param {HTMLElement} slide\n     * @return {Array} a list of the HTML fragments that were synced\n     */\n    function syncFragments(slide) {\n\n        // Default to the current slide\n        slide = slide || currentSlide;\n\n        return sortFragments(slide.querySelectorAll('.fragment'));\n\n    }\n\n    /**\n     * Resets all vertical slides so that only the first\n     * is visible.\n     */\n    function resetVerticalSlides() {\n\n        var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n        horizontalSlides.forEach(function(horizontalSlide) {\n\n            var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n            verticalSlides.forEach(function(verticalSlide, y) {\n\n                if (y > 0) {\n                    verticalSlide.classList.remove('present');\n                    verticalSlide.classList.remove('past');\n                    verticalSlide.classList.add('future');\n                    verticalSlide.setAttribute('aria-hidden', 'true');\n                }\n\n            });\n\n        });\n\n    }\n\n    /**\n     * Sorts and formats all of fragments in the\n     * presentation.\n     */\n    function sortAllFragments() {\n\n        var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n        horizontalSlides.forEach(function(horizontalSlide) {\n\n            var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n            verticalSlides.forEach(function(verticalSlide, y) {\n\n                sortFragments(verticalSlide.querySelectorAll('.fragment'));\n\n            });\n\n            if (verticalSlides.length === 0) sortFragments(horizontalSlide.querySelectorAll('.fragment'));\n\n        });\n\n    }\n\n    /**\n     * Randomly shuffles all slides in the deck.\n     */\n    function shuffle() {\n\n        var slides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n\n        slides.forEach(function(slide) {\n\n            // Insert this slide next to another random slide. This may\n            // cause the slide to insert before itself but that's fine.\n            dom.slides.insertBefore(slide, slides[Math.floor(Math.random() * slides.length)]);\n\n        });\n\n    }\n\n    /**\n     * Updates one dimension of slides by showing the slide\n     * with the specified index.\n     *\n     * @param {string} selector A CSS selector that will fetch\n     * the group of slides we are working with\n     * @param {number} index The index of the slide that should be\n     * shown\n     *\n     * @return {number} The index of the slide that is now shown,\n     * might differ from the passed in index if it was out of\n     * bounds.\n     */\n    function updateSlides(selector, index) {\n\n        // Select all slides and convert the NodeList result to\n        // an array\n        var slides = toArray(dom.wrapper.querySelectorAll(selector)),\n            slidesLength = slides.length;\n\n        var printMode = isPrintingPDF();\n\n        if (slidesLength) {\n\n            // Should the index loop?\n            if (config.loop) {\n                index %= slidesLength;\n\n                if (index < 0) {\n                    index = slidesLength + index;\n                }\n            }\n\n            // Enforce max and minimum index bounds\n            index = Math.max(Math.min(index, slidesLength - 1), 0);\n\n            for (var i = 0; i < slidesLength; i++) {\n                var element = slides[i];\n\n                var reverse = config.rtl && !isVerticalSlide(element);\n\n                element.classList.remove('past');\n                element.classList.remove('present');\n                element.classList.remove('future');\n\n                // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n                element.setAttribute('hidden', '');\n                element.setAttribute('aria-hidden', 'true');\n\n                // If this element contains vertical slides\n                if (element.querySelector('section')) {\n                    element.classList.add('stack');\n                }\n\n                // If we're printing static slides, all slides are \"present\"\n                if (printMode) {\n                    element.classList.add('present');\n                    continue;\n                }\n\n                if (i < index) {\n                    // Any element previous to index is given the 'past' class\n                    element.classList.add(reverse ? 'future' : 'past');\n\n                    if (config.fragments) {\n                        // Show all fragments in prior slides\n                        toArray(element.querySelectorAll('.fragment')).forEach(function(fragment) {\n                            fragment.classList.add('visible');\n                            fragment.classList.remove('current-fragment');\n                        });\n                    }\n                } else if (i > index) {\n                    // Any element subsequent to index is given the 'future' class\n                    element.classList.add(reverse ? 'past' : 'future');\n\n                    if (config.fragments) {\n                        // Hide all fragments in future slides\n                        toArray(element.querySelectorAll('.fragment.visible')).forEach(function(fragment) {\n                            fragment.classList.remove('visible');\n                            fragment.classList.remove('current-fragment');\n                        });\n                    }\n                }\n            }\n\n            // Mark the current slide as present\n            slides[index].classList.add('present');\n            slides[index].removeAttribute('hidden');\n            slides[index].removeAttribute('aria-hidden');\n\n            // If this slide has a state associated with it, add it\n            // onto the current state of the deck\n            var slideState = slides[index].getAttribute('data-state');\n            if (slideState) {\n                state = state.concat(slideState.split(' '));\n            }\n\n        } else {\n            // Since there are no slides we can't be anywhere beyond the\n            // zeroth index\n            index = 0;\n        }\n\n        return index;\n\n    }\n\n    /**\n     * Optimization method; hide all slides that are far away\n     * from the present slide.\n     */\n    function updateSlidesVisibility() {\n\n        // Select all slides and convert the NodeList result to\n        // an array\n        var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)),\n            horizontalSlidesLength = horizontalSlides.length,\n            distanceX,\n            distanceY;\n\n        if (horizontalSlidesLength && typeof indexh !== 'undefined') {\n\n            // The number of steps away from the present slide that will\n            // be visible\n            var viewDistance = isOverview() ? 10 : config.viewDistance;\n\n            // Shorten the view distance on devices that typically have\n            // less resources\n            if (isMobileDevice) {\n                viewDistance = isOverview() ? 6 : config.mobileViewDistance;\n            }\n\n            // All slides need to be visible when exporting to PDF\n            if (isPrintingPDF()) {\n                viewDistance = Number.MAX_VALUE;\n            }\n\n            for (var x = 0; x < horizontalSlidesLength; x++) {\n                var horizontalSlide = horizontalSlides[x];\n\n                var verticalSlides = toArray(horizontalSlide.querySelectorAll('section')),\n                    verticalSlidesLength = verticalSlides.length;\n\n                // Determine how far away this slide is from the present\n                distanceX = Math.abs((indexh || 0) - x) || 0;\n\n                // If the presentation is looped, distance should measure\n                // 1 between the first and last slides\n                if (config.loop) {\n                    distanceX = Math.abs(((indexh || 0) - x) % (horizontalSlidesLength - viewDistance)) || 0;\n                }\n\n                // Show the horizontal slide if it's within the view distance\n                if (distanceX < viewDistance) {\n                    loadSlide(horizontalSlide);\n                } else {\n                    unloadSlide(horizontalSlide);\n                }\n\n                if (verticalSlidesLength) {\n\n                    var oy = getPreviousVerticalIndex(horizontalSlide);\n\n                    for (var y = 0; y < verticalSlidesLength; y++) {\n                        var verticalSlide = verticalSlides[y];\n\n                        distanceY = x === (indexh || 0) ? Math.abs((indexv || 0) - y) : Math.abs(y - oy);\n\n                        if (distanceX + distanceY < viewDistance) {\n                            loadSlide(verticalSlide);\n                        } else {\n                            unloadSlide(verticalSlide);\n                        }\n                    }\n\n                }\n            }\n\n            // Flag if there are ANY vertical slides, anywhere in the deck\n            if (hasVerticalSlides()) {\n                dom.wrapper.classList.add('has-vertical-slides');\n            } else {\n                dom.wrapper.classList.remove('has-vertical-slides');\n            }\n\n            // Flag if there are ANY horizontal slides, anywhere in the deck\n            if (hasHorizontalSlides()) {\n                dom.wrapper.classList.add('has-horizontal-slides');\n            } else {\n                dom.wrapper.classList.remove('has-horizontal-slides');\n            }\n\n        }\n\n    }\n\n    /**\n     * Pick up notes from the current slide and display them\n     * to the viewer.\n     *\n     * @see {@link config.showNotes}\n     */\n    function updateNotes() {\n\n        if (config.showNotes && dom.speakerNotes && currentSlide && !isPrintingPDF()) {\n\n            dom.speakerNotes.innerHTML = getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n        }\n\n    }\n\n    /**\n     * Updates the visibility of the speaker notes sidebar that\n     * is used to share annotated slides. The notes sidebar is\n     * only visible if showNotes is true and there are notes on\n     * one or more slides in the deck.\n     */\n    function updateNotesVisibility() {\n\n        if (config.showNotes && hasNotes()) {\n            dom.wrapper.classList.add('show-notes');\n        } else {\n            dom.wrapper.classList.remove('show-notes');\n        }\n\n    }\n\n    /**\n     * Checks if there are speaker notes for ANY slide in the\n     * presentation.\n     */\n    function hasNotes() {\n\n        return dom.slides.querySelectorAll('[data-notes], aside.notes').length > 0;\n\n    }\n\n    /**\n     * Updates the progress bar to reflect the current slide.\n     */\n    function updateProgress() {\n\n        // Update progress if enabled\n        if (config.progress && dom.progressbar) {\n\n            dom.progressbar.style.width = getProgress() * dom.wrapper.offsetWidth + 'px';\n\n        }\n\n    }\n\n\n    /**\n     * Updates the slide number to match the current slide.\n     */\n    function updateSlideNumber() {\n\n        // Update slide number if enabled\n        if (config.slideNumber && dom.slideNumber) {\n            dom.slideNumber.innerHTML = getSlideNumber();\n        }\n\n    }\n\n    /**\n     * Returns the HTML string corresponding to the current slide number,\n     * including formatting.\n     */\n    function getSlideNumber(slide) {\n\n        var value;\n        var format = 'h.v';\n        if (slide === undefined) {\n            slide = currentSlide;\n        }\n\n        if (typeof config.slideNumber === 'function') {\n            value = config.slideNumber(slide);\n        } else {\n            // Check if a custom number format is available\n            if (typeof config.slideNumber === 'string') {\n                format = config.slideNumber;\n            }\n\n            // If there are ONLY vertical slides in this deck, always use\n            // a flattened slide number\n            if (!/c/.test(format) && dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR).length === 1) {\n                format = 'c';\n            }\n\n            value = [];\n            switch (format) {\n                case 'c':\n                    value.push(getSlidePastCount(slide) + 1);\n                    break;\n                case 'c/t':\n                    value.push(getSlidePastCount(slide) + 1, '/', getTotalSlides());\n                    break;\n                default:\n                    var indices = getIndices(slide);\n                    value.push(indices.h + 1);\n                    var sep = format === 'h/v' ? '/' : '.';\n                    if (isVerticalSlide(slide)) value.push(sep, indices.v + 1);\n            }\n        }\n\n        var url = '#' + locationHash(slide);\n        return formatSlideNumber(value[0], value[1], value[2], url);\n\n    }\n\n    /**\n     * Applies HTML formatting to a slide number before it's\n     * written to the DOM.\n     *\n     * @param {number} a Current slide\n     * @param {string} delimiter Character to separate slide numbers\n     * @param {(number|*)} b Total slides\n     * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n     * @return {string} HTML string fragment\n     */\n    function formatSlideNumber(a, delimiter, b, url) {\n\n        if (url === undefined) {\n            url = '#' + locationHash();\n        }\n        if (typeof b === 'number' && !isNaN(b)) {\n            return '<a href=\"' + url + '\">' +\n                '<span class=\"slide-number-a\">' + a + '</span>' +\n                '<span class=\"slide-number-delimiter\">' + delimiter + '</span>' +\n                '<span class=\"slide-number-b\">' + b + '</span>' +\n                '</a>';\n        } else {\n            return '<a href=\"' + url + '\">' +\n                '<span class=\"slide-number-a\">' + a + '</span>' +\n                '</a>';\n        }\n\n    }\n\n    /**\n     * Updates the state of all control/navigation arrows.\n     */\n    function updateControls() {\n\n        var routes = availableRoutes();\n        var fragments = availableFragments();\n\n        // Remove the 'enabled' class from all directions\n        dom.controlsLeft.concat(dom.controlsRight)\n            .concat(dom.controlsUp)\n            .concat(dom.controlsDown)\n            .concat(dom.controlsPrev)\n            .concat(dom.controlsNext).forEach(function(node) {\n                node.classList.remove('enabled');\n                node.classList.remove('fragmented');\n\n                // Set 'disabled' attribute on all directions\n                node.setAttribute('disabled', 'disabled');\n            });\n\n        // Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n        if (routes.left) dom.controlsLeft.forEach(function(el) {\n            el.classList.add('enabled');\n            el.removeAttribute('disabled');\n        });\n        if (routes.right) dom.controlsRight.forEach(function(el) {\n            el.classList.add('enabled');\n            el.removeAttribute('disabled');\n        });\n        if (routes.up) dom.controlsUp.forEach(function(el) {\n            el.classList.add('enabled');\n            el.removeAttribute('disabled');\n        });\n        if (routes.down) dom.controlsDown.forEach(function(el) {\n            el.classList.add('enabled');\n            el.removeAttribute('disabled');\n        });\n\n        // Prev/next buttons\n        if (routes.left || routes.up) dom.controlsPrev.forEach(function(el) {\n            el.classList.add('enabled');\n            el.removeAttribute('disabled');\n        });\n        if (routes.right || routes.down) dom.controlsNext.forEach(function(el) {\n            el.classList.add('enabled');\n            el.removeAttribute('disabled');\n        });\n\n        // Highlight fragment directions\n        if (currentSlide) {\n\n            // Always apply fragment decorator to prev/next buttons\n            if (fragments.prev) dom.controlsPrev.forEach(function(el) {\n                el.classList.add('fragmented', 'enabled');\n                el.removeAttribute('disabled');\n            });\n            if (fragments.next) dom.controlsNext.forEach(function(el) {\n                el.classList.add('fragmented', 'enabled');\n                el.removeAttribute('disabled');\n            });\n\n            // Apply fragment decorators to directional buttons based on\n            // what slide axis they are in\n            if (isVerticalSlide(currentSlide)) {\n                if (fragments.prev) dom.controlsUp.forEach(function(el) {\n                    el.classList.add('fragmented', 'enabled');\n                    el.removeAttribute('disabled');\n                });\n                if (fragments.next) dom.controlsDown.forEach(function(el) {\n                    el.classList.add('fragmented', 'enabled');\n                    el.removeAttribute('disabled');\n                });\n            } else {\n                if (fragments.prev) dom.controlsLeft.forEach(function(el) {\n                    el.classList.add('fragmented', 'enabled');\n                    el.removeAttribute('disabled');\n                });\n                if (fragments.next) dom.controlsRight.forEach(function(el) {\n                    el.classList.add('fragmented', 'enabled');\n                    el.removeAttribute('disabled');\n                });\n            }\n\n        }\n\n        if (config.controlsTutorial) {\n\n            // Highlight control arrows with an animation to ensure\n            // that the viewer knows how to navigate\n            if (!hasNavigatedDown && routes.down) {\n                dom.controlsDownArrow.classList.add('highlight');\n            } else {\n                dom.controlsDownArrow.classList.remove('highlight');\n\n                if (!hasNavigatedRight && routes.right && indexv === 0) {\n                    dom.controlsRightArrow.classList.add('highlight');\n                } else {\n                    dom.controlsRightArrow.classList.remove('highlight');\n                }\n            }\n\n        }\n\n    }\n\n    /**\n     * Updates the background elements to reflect the current\n     * slide.\n     *\n     * @param {boolean} includeAll If true, the backgrounds of\n     * all vertical slides (not just the present) will be updated.\n     */\n    function updateBackground(includeAll) {\n\n        var currentBackground = null;\n\n        // Reverse past/future classes when in RTL mode\n        var horizontalPast = config.rtl ? 'future' : 'past',\n            horizontalFuture = config.rtl ? 'past' : 'future';\n\n        // Update the classes of all backgrounds to match the\n        // states of their slides (past/present/future)\n        toArray(dom.background.childNodes).forEach(function(backgroundh, h) {\n\n            backgroundh.classList.remove('past');\n            backgroundh.classList.remove('present');\n            backgroundh.classList.remove('future');\n\n            if (h < indexh) {\n                backgroundh.classList.add(horizontalPast);\n            } else if (h > indexh) {\n                backgroundh.classList.add(horizontalFuture);\n            } else {\n                backgroundh.classList.add('present');\n\n                // Store a reference to the current background element\n                currentBackground = backgroundh;\n            }\n\n            if (includeAll || h === indexh) {\n                toArray(backgroundh.querySelectorAll('.slide-background')).forEach(function(backgroundv, v) {\n\n                    backgroundv.classList.remove('past');\n                    backgroundv.classList.remove('present');\n                    backgroundv.classList.remove('future');\n\n                    if (v < indexv) {\n                        backgroundv.classList.add('past');\n                    } else if (v > indexv) {\n                        backgroundv.classList.add('future');\n                    } else {\n                        backgroundv.classList.add('present');\n\n                        // Only if this is the present horizontal and vertical slide\n                        if (h === indexh) currentBackground = backgroundv;\n                    }\n\n                });\n            }\n\n        });\n\n        // Stop content inside of previous backgrounds\n        if (previousBackground) {\n\n            stopEmbeddedContent(previousBackground, {\n                unloadIframes: !shouldPreload(previousBackground)\n            });\n\n        }\n\n        // Start content in the current background\n        if (currentBackground) {\n\n            startEmbeddedContent(currentBackground);\n\n            var currentBackgroundContent = currentBackground.querySelector('.slide-background-content');\n            if (currentBackgroundContent) {\n\n                var backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n                // Restart GIFs (doesn't work in Firefox)\n                if (/\\.gif/i.test(backgroundImageURL)) {\n                    currentBackgroundContent.style.backgroundImage = '';\n                    window.getComputedStyle(currentBackgroundContent).opacity;\n                    currentBackgroundContent.style.backgroundImage = backgroundImageURL;\n                }\n\n            }\n\n            // Don't transition between identical backgrounds. This\n            // prevents unwanted flicker.\n            var previousBackgroundHash = previousBackground ? previousBackground.getAttribute('data-background-hash') : null;\n            var currentBackgroundHash = currentBackground.getAttribute('data-background-hash');\n            if (currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== previousBackground) {\n                dom.background.classList.add('no-transition');\n            }\n\n            previousBackground = currentBackground;\n\n        }\n\n        // If there's a background brightness flag for this slide,\n        // bubble it to the .reveal container\n        if (currentSlide) {\n            ['has-light-background', 'has-dark-background'].forEach(function(classToBubble) {\n                if (currentSlide.classList.contains(classToBubble)) {\n                    dom.wrapper.classList.add(classToBubble);\n                } else {\n                    dom.wrapper.classList.remove(classToBubble);\n                }\n            });\n        }\n\n        // Allow the first background to apply without transition\n        setTimeout(function() {\n            dom.background.classList.remove('no-transition');\n        }, 1);\n\n    }\n\n    /**\n     * Updates the position of the parallax background based\n     * on the current slide index.\n     */\n    function updateParallax() {\n\n        if (config.parallaxBackgroundImage) {\n\n            var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR),\n                verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n\n            var backgroundSize = dom.background.style.backgroundSize.split(' '),\n                backgroundWidth, backgroundHeight;\n\n            if (backgroundSize.length === 1) {\n                backgroundWidth = backgroundHeight = parseInt(backgroundSize[0], 10);\n            } else {\n                backgroundWidth = parseInt(backgroundSize[0], 10);\n                backgroundHeight = parseInt(backgroundSize[1], 10);\n            }\n\n            var slideWidth = dom.background.offsetWidth,\n                horizontalSlideCount = horizontalSlides.length,\n                horizontalOffsetMultiplier,\n                horizontalOffset;\n\n            if (typeof config.parallaxBackgroundHorizontal === 'number') {\n                horizontalOffsetMultiplier = config.parallaxBackgroundHorizontal;\n            } else {\n                horizontalOffsetMultiplier = horizontalSlideCount > 1 ? (backgroundWidth - slideWidth) / (horizontalSlideCount - 1) : 0;\n            }\n\n            horizontalOffset = horizontalOffsetMultiplier * indexh * -1;\n\n            var slideHeight = dom.background.offsetHeight,\n                verticalSlideCount = verticalSlides.length,\n                verticalOffsetMultiplier,\n                verticalOffset;\n\n            if (typeof config.parallaxBackgroundVertical === 'number') {\n                verticalOffsetMultiplier = config.parallaxBackgroundVertical;\n            } else {\n                verticalOffsetMultiplier = (backgroundHeight - slideHeight) / (verticalSlideCount - 1);\n            }\n\n            verticalOffset = verticalSlideCount > 0 ? verticalOffsetMultiplier * indexv : 0;\n\n            dom.background.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n        }\n\n    }\n\n    /**\n     * Should the given element be preloaded?\n     * Decides based on local element attributes and global config.\n     *\n     * @param {HTMLElement} element\n     */\n    function shouldPreload(element) {\n\n        // Prefer an explicit global preload setting\n        var preload = config.preloadIframes;\n\n        // If no global setting is available, fall back on the element's\n        // own preload setting\n        if (typeof preload !== 'boolean') {\n            preload = element.hasAttribute('data-preload');\n        }\n\n        return preload;\n    }\n\n    /**\n     * Called when the given slide is within the configured view\n     * distance. Shows the slide element and loads any content\n     * that is set to load lazily (data-src).\n     *\n     * @param {HTMLElement} slide Slide to show\n     */\n    function loadSlide(slide, options) {\n\n        options = options || {};\n\n        // Show the slide element\n        slide.style.display = config.display;\n\n        // Media elements with data-src attributes\n        toArray(slide.querySelectorAll('img[data-src], video[data-src], audio[data-src], iframe[data-src]')).forEach(function(element) {\n            if (element.tagName !== 'IFRAME' || shouldPreload(element)) {\n                element.setAttribute('src', element.getAttribute('data-src'));\n                element.setAttribute('data-lazy-loaded', '');\n                element.removeAttribute('data-src');\n            }\n        });\n\n        // Media elements with <source> children\n        toArray(slide.querySelectorAll('video, audio')).forEach(function(media) {\n            var sources = 0;\n\n            toArray(media.querySelectorAll('source[data-src]')).forEach(function(source) {\n                source.setAttribute('src', source.getAttribute('data-src'));\n                source.removeAttribute('data-src');\n                source.setAttribute('data-lazy-loaded', '');\n                sources += 1;\n            });\n\n            // If we rewrote sources for this video/audio element, we need\n            // to manually tell it to load from its new origin\n            if (sources > 0) {\n                media.load();\n            }\n        });\n\n\n        // Show the corresponding background element\n        var background = slide.slideBackgroundElement;\n        if (background) {\n            background.style.display = 'block';\n\n            var backgroundContent = slide.slideBackgroundContentElement;\n            var backgroundIframe = slide.getAttribute('data-background-iframe');\n\n            // If the background contains media, load it\n            if (background.hasAttribute('data-loaded') === false) {\n                background.setAttribute('data-loaded', 'true');\n\n                var backgroundImage = slide.getAttribute('data-background-image'),\n                    backgroundVideo = slide.getAttribute('data-background-video'),\n                    backgroundVideoLoop = slide.hasAttribute('data-background-video-loop'),\n                    backgroundVideoMuted = slide.hasAttribute('data-background-video-muted');\n\n                // Images\n                if (backgroundImage) {\n                    backgroundContent.style.backgroundImage = 'url(' + encodeURI(backgroundImage) + ')';\n                }\n                // Videos\n                else if (backgroundVideo && !isSpeakerNotes()) {\n                    var video = document.createElement('video');\n\n                    if (backgroundVideoLoop) {\n                        video.setAttribute('loop', '');\n                    }\n\n                    if (backgroundVideoMuted) {\n                        video.muted = true;\n                    }\n\n                    // Inline video playback works (at least in Mobile Safari) as\n                    // long as the video is muted and the `playsinline` attribute is\n                    // present\n                    if (isMobileDevice) {\n                        video.muted = true;\n                        video.autoplay = true;\n                        video.setAttribute('playsinline', '');\n                    }\n\n                    // Support comma separated lists of video sources\n                    backgroundVideo.split(',').forEach(function(source) {\n                        video.innerHTML += '<source src=\"' + source + '\">';\n                    });\n\n                    backgroundContent.appendChild(video);\n                }\n                // Iframes\n                else if (backgroundIframe && options.excludeIframes !== true) {\n                    var iframe = document.createElement('iframe');\n                    iframe.setAttribute('allowfullscreen', '');\n                    iframe.setAttribute('mozallowfullscreen', '');\n                    iframe.setAttribute('webkitallowfullscreen', '');\n                    iframe.setAttribute('allow', 'autoplay');\n\n                    iframe.setAttribute('data-src', backgroundIframe);\n\n                    iframe.style.width = '100%';\n                    iframe.style.height = '100%';\n                    iframe.style.maxHeight = '100%';\n                    iframe.style.maxWidth = '100%';\n\n                    backgroundContent.appendChild(iframe);\n                }\n            }\n\n            // Start loading preloadable iframes\n            var backgroundIframeElement = backgroundContent.querySelector('iframe[data-src]');\n            if (backgroundIframeElement) {\n\n                // Check if this iframe is eligible to be preloaded\n                if (shouldPreload(background) && !/autoplay=(1|true|yes)/gi.test(backgroundIframe)) {\n                    if (backgroundIframeElement.getAttribute('src') !== backgroundIframe) {\n                        backgroundIframeElement.setAttribute('src', backgroundIframe);\n                    }\n                }\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Unloads and hides the given slide. This is called when the\n     * slide is moved outside of the configured view distance.\n     *\n     * @param {HTMLElement} slide\n     */\n    function unloadSlide(slide) {\n\n        // Hide the slide element\n        slide.style.display = 'none';\n\n        // Hide the corresponding background element\n        var background = getSlideBackground(slide);\n        if (background) {\n            background.style.display = 'none';\n\n            // Unload any background iframes\n            toArray(background.querySelectorAll('iframe[src]')).forEach(function(element) {\n                element.removeAttribute('src');\n            });\n        }\n\n        // Reset lazy-loaded media elements with src attributes\n        toArray(slide.querySelectorAll('video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]')).forEach(function(element) {\n            element.setAttribute('data-src', element.getAttribute('src'));\n            element.removeAttribute('src');\n        });\n\n        // Reset lazy-loaded media elements with <source> children\n        toArray(slide.querySelectorAll('video[data-lazy-loaded] source[src], audio source[src]')).forEach(function(source) {\n            source.setAttribute('data-src', source.getAttribute('src'));\n            source.removeAttribute('src');\n        });\n\n    }\n\n    /**\n     * Determine what available routes there are for navigation.\n     *\n     * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n     */\n    function availableRoutes() {\n\n        var horizontalSlides = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR),\n            verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR);\n\n        var routes = {\n            left: indexh > 0,\n            right: indexh < horizontalSlides.length - 1,\n            up: indexv > 0,\n            down: indexv < verticalSlides.length - 1\n        };\n\n        // Looped presentations can always be navigated as long as\n        // there are slides available\n        if (config.loop) {\n            if (horizontalSlides.length > 1) {\n                routes.left = true;\n                routes.right = true;\n            }\n\n            if (verticalSlides.length > 1) {\n                routes.up = true;\n                routes.down = true;\n            }\n        }\n\n        // Reverse horizontal controls for rtl\n        if (config.rtl) {\n            var left = routes.left;\n            routes.left = routes.right;\n            routes.right = left;\n        }\n\n        return routes;\n\n    }\n\n    /**\n     * Returns an object describing the available fragment\n     * directions.\n     *\n     * @return {{prev: boolean, next: boolean}}\n     */\n    function availableFragments() {\n\n        if (currentSlide && config.fragments) {\n            var fragments = currentSlide.querySelectorAll('.fragment');\n            var hiddenFragments = currentSlide.querySelectorAll('.fragment:not(.visible)');\n\n            return {\n                prev: fragments.length - hiddenFragments.length > 0,\n                next: !!hiddenFragments.length\n            };\n        } else {\n            return {\n                prev: false,\n                next: false\n            };\n        }\n\n    }\n\n    /**\n     * Enforces origin-specific format rules for embedded media.\n     */\n    function formatEmbeddedContent() {\n\n        var _appendParamToIframeSource = function(sourceAttribute, sourceURL, param) {\n            toArray(dom.slides.querySelectorAll('iframe[' + sourceAttribute + '*=\"' + sourceURL + '\"]')).forEach(function(el) {\n                var src = el.getAttribute(sourceAttribute);\n                if (src && src.indexOf(param) === -1) {\n                    el.setAttribute(sourceAttribute, src + (!/\\?/.test(src) ? '?' : '&') + param);\n                }\n            });\n        };\n\n        // YouTube frames must include \"?enablejsapi=1\"\n        _appendParamToIframeSource('src', 'youtube.com/embed/', 'enablejsapi=1');\n        _appendParamToIframeSource('data-src', 'youtube.com/embed/', 'enablejsapi=1');\n\n        // Vimeo frames must include \"?api=1\"\n        _appendParamToIframeSource('src', 'player.vimeo.com/', 'api=1');\n        _appendParamToIframeSource('data-src', 'player.vimeo.com/', 'api=1');\n\n    }\n\n    /**\n     * Start playback of any embedded content inside of\n     * the given element.\n     *\n     * @param {HTMLElement} element\n     */\n    function startEmbeddedContent(element) {\n\n        if (element && !isSpeakerNotes()) {\n\n            // Restart GIFs\n            toArray(element.querySelectorAll('img[src$=\".gif\"]')).forEach(function(el) {\n                // Setting the same unchanged source like this was confirmed\n                // to work in Chrome, FF & Safari\n                el.setAttribute('src', el.getAttribute('src'));\n            });\n\n            // HTML5 media elements\n            toArray(element.querySelectorAll('video, audio')).forEach(function(el) {\n                if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n                    return;\n                }\n\n                // Prefer an explicit global autoplay setting\n                var autoplay = config.autoPlayMedia;\n\n                // If no global setting is available, fall back on the element's\n                // own autoplay setting\n                if (typeof autoplay !== 'boolean') {\n                    autoplay = el.hasAttribute('data-autoplay') || !!closestParent(el, '.slide-background');\n                }\n\n                if (autoplay && typeof el.play === 'function') {\n\n                    // If the media is ready, start playback\n                    if (el.readyState > 1) {\n                        startEmbeddedMedia({\n                            target: el\n                        });\n                    }\n                    // Mobile devices never fire a loaded event so instead\n                    // of waiting, we initiate playback\n                    else if (isMobileDevice) {\n                        var promise = el.play();\n\n                        // If autoplay does not work, ensure that the controls are visible so\n                        // that the viewer can start the media on their own\n                        if (promise && typeof promise.catch === 'function' && el.controls === false) {\n                            promise.catch(function() {\n                                el.controls = true;\n\n                                // Once the video does start playing, hide the controls again\n                                el.addEventListener('play', function() {\n                                    el.controls = false;\n                                });\n                            });\n                        }\n                    }\n                    // If the media isn't loaded, wait before playing\n                    else {\n                        el.removeEventListener('loadeddata', startEmbeddedMedia); // remove first to avoid dupes\n                        el.addEventListener('loadeddata', startEmbeddedMedia);\n                    }\n\n                }\n            });\n\n            // Normal iframes\n            toArray(element.querySelectorAll('iframe[src]')).forEach(function(el) {\n                if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n                    return;\n                }\n\n                startEmbeddedIframe({\n                    target: el\n                });\n            });\n\n            // Lazy loading iframes\n            toArray(element.querySelectorAll('iframe[data-src]')).forEach(function(el) {\n                if (closestParent(el, '.fragment') && !closestParent(el, '.fragment.visible')) {\n                    return;\n                }\n\n                if (el.getAttribute('src') !== el.getAttribute('data-src')) {\n                    el.removeEventListener('load', startEmbeddedIframe); // remove first to avoid dupes\n                    el.addEventListener('load', startEmbeddedIframe);\n                    el.setAttribute('src', el.getAttribute('data-src'));\n                }\n            });\n\n        }\n\n    }\n\n    /**\n     * Starts playing an embedded video/audio element after\n     * it has finished loading.\n     *\n     * @param {object} event\n     */\n    function startEmbeddedMedia(event) {\n\n        var isAttachedToDOM = !!closestParent(event.target, 'html'),\n            isVisible = !!closestParent(event.target, '.present');\n\n        if (isAttachedToDOM && isVisible) {\n            event.target.currentTime = 0;\n            event.target.play();\n        }\n\n        event.target.removeEventListener('loadeddata', startEmbeddedMedia);\n\n    }\n\n    /**\n     * \"Starts\" the content of an embedded iframe using the\n     * postMessage API.\n     *\n     * @param {object} event\n     */\n    function startEmbeddedIframe(event) {\n\n        var iframe = event.target;\n\n        if (iframe && iframe.contentWindow) {\n\n            var isAttachedToDOM = !!closestParent(event.target, 'html'),\n                isVisible = !!closestParent(event.target, '.present');\n\n            if (isAttachedToDOM && isVisible) {\n\n                // Prefer an explicit global autoplay setting\n                var autoplay = config.autoPlayMedia;\n\n                // If no global setting is available, fall back on the element's\n                // own autoplay setting\n                if (typeof autoplay !== 'boolean') {\n                    autoplay = iframe.hasAttribute('data-autoplay') || !!closestParent(iframe, '.slide-background');\n                }\n\n                // YouTube postMessage API\n                if (/youtube\\.com\\/embed\\//.test(iframe.getAttribute('src')) && autoplay) {\n                    iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*');\n                }\n                // Vimeo postMessage API\n                else if (/player\\.vimeo\\.com\\//.test(iframe.getAttribute('src')) && autoplay) {\n                    iframe.contentWindow.postMessage('{\"method\":\"play\"}', '*');\n                }\n                // Generic postMessage API\n                else {\n                    iframe.contentWindow.postMessage('slide:start', '*');\n                }\n\n            }\n\n        }\n\n    }\n\n    /**\n     * Stop playback of any embedded content inside of\n     * the targeted slide.\n     *\n     * @param {HTMLElement} element\n     */\n    function stopEmbeddedContent(element, options) {\n\n        options = extend({\n            // Defaults\n            unloadIframes: true\n        }, options || {});\n\n        if (element && element.parentNode) {\n            // HTML5 media elements\n            toArray(element.querySelectorAll('video, audio')).forEach(function(el) {\n                if (!el.hasAttribute('data-ignore') && typeof el.pause === 'function') {\n                    el.setAttribute('data-paused-by-reveal', '');\n                    el.pause();\n                }\n            });\n\n            // Generic postMessage API for non-lazy loaded iframes\n            toArray(element.querySelectorAll('iframe')).forEach(function(el) {\n                if (el.contentWindow) el.contentWindow.postMessage('slide:stop', '*');\n                el.removeEventListener('load', startEmbeddedIframe);\n            });\n\n            // YouTube postMessage API\n            toArray(element.querySelectorAll('iframe[src*=\"youtube.com/embed/\"]')).forEach(function(el) {\n                if (!el.hasAttribute('data-ignore') && el.contentWindow && typeof el.contentWindow.postMessage === 'function') {\n                    el.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n                }\n            });\n\n            // Vimeo postMessage API\n            toArray(element.querySelectorAll('iframe[src*=\"player.vimeo.com/\"]')).forEach(function(el) {\n                if (!el.hasAttribute('data-ignore') && el.contentWindow && typeof el.contentWindow.postMessage === 'function') {\n                    el.contentWindow.postMessage('{\"method\":\"pause\"}', '*');\n                }\n            });\n\n            if (options.unloadIframes === true) {\n                // Unload lazy-loaded iframes\n                toArray(element.querySelectorAll('iframe[data-src]')).forEach(function(el) {\n                    // Only removing the src doesn't actually unload the frame\n                    // in all browsers (Firefox) so we set it to blank first\n                    el.setAttribute('src', 'about:blank');\n                    el.removeAttribute('src');\n                });\n            }\n        }\n\n    }\n\n    /**\n     * Returns the number of past slides. This can be used as a global\n     * flattened index for slides.\n     *\n     * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n     *\n     * @return {number} Past slide count\n     */\n    function getSlidePastCount(slide) {\n\n        if (slide === undefined) {\n            slide = currentSlide;\n        }\n\n        var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n\n        // The number of past slides\n        var pastCount = 0;\n\n        // Step through all slides and count the past ones\n        mainLoop: for (var i = 0; i < horizontalSlides.length; i++) {\n\n            var horizontalSlide = horizontalSlides[i];\n            var verticalSlides = toArray(horizontalSlide.querySelectorAll('section'));\n\n            for (var j = 0; j < verticalSlides.length; j++) {\n\n                // Stop as soon as we arrive at the present\n                if (verticalSlides[j] === slide) {\n                    break mainLoop;\n                }\n\n                pastCount++;\n\n            }\n\n            // Stop as soon as we arrive at the present\n            if (horizontalSlide === slide) {\n                break;\n            }\n\n            // Don't count the wrapping section for vertical slides\n            if (horizontalSlide.classList.contains('stack') === false) {\n                pastCount++;\n            }\n\n        }\n\n        return pastCount;\n\n    }\n\n    /**\n     * Returns a value ranging from 0-1 that represents\n     * how far into the presentation we have navigated.\n     *\n     * @return {number}\n     */\n    function getProgress() {\n\n        // The number of past and total slides\n        var totalCount = getTotalSlides();\n        var pastCount = getSlidePastCount();\n\n        if (currentSlide) {\n\n            var allFragments = currentSlide.querySelectorAll('.fragment');\n\n            // If there are fragments in the current slide those should be\n            // accounted for in the progress.\n            if (allFragments.length > 0) {\n                var visibleFragments = currentSlide.querySelectorAll('.fragment.visible');\n\n                // This value represents how big a portion of the slide progress\n                // that is made up by its fragments (0-1)\n                var fragmentWeight = 0.9;\n\n                // Add fragment progress to the past slide count\n                pastCount += (visibleFragments.length / allFragments.length) * fragmentWeight;\n            }\n\n        }\n\n        return Math.min(pastCount / (totalCount - 1), 1);\n\n    }\n\n    /**\n     * Checks if this presentation is running inside of the\n     * speaker notes window.\n     *\n     * @return {boolean}\n     */\n    function isSpeakerNotes() {\n\n        return !!window.location.search.match(/receiver/gi);\n\n    }\n\n    /**\n     * Reads the current URL (hash) and navigates accordingly.\n     */\n    function readURL() {\n\n        var hash = window.location.hash;\n\n        // Attempt to parse the hash as either an index or name\n        var bits = hash.slice(2).split('/'),\n            name = hash.replace(/#|\\//gi, '');\n\n        // If the first bit is not fully numeric and there is a name we\n        // can assume that this is a named link\n        if (!/^[0-9]*$/.test(bits[0]) && name.length) {\n            var element;\n\n            // Ensure the named link is a valid HTML ID attribute\n            try {\n                element = document.getElementById(decodeURIComponent(name));\n            } catch (error) {}\n\n            // Ensure that we're not already on a slide with the same name\n            var isSameNameAsCurrentSlide = currentSlide ? currentSlide.getAttribute('id') === name : false;\n\n            if (element) {\n                // If the slide exists and is not the current slide...\n                if (!isSameNameAsCurrentSlide) {\n                    // ...find the position of the named slide and navigate to it\n                    var indices = Reveal.getIndices(element);\n                    slide(indices.h, indices.v);\n                }\n            }\n            // If the slide doesn't exist, navigate to the current slide\n            else {\n                slide(indexh || 0, indexv || 0);\n            }\n        } else {\n            var hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n            // Read the index components of the hash\n            var h = (parseInt(bits[0], 10) - hashIndexBase) || 0,\n                v = (parseInt(bits[1], 10) - hashIndexBase) || 0,\n                f;\n\n            if (config.fragmentInURL) {\n                f = parseInt(bits[2], 10);\n                if (isNaN(f)) {\n                    f = undefined;\n                }\n            }\n\n            if (h !== indexh || v !== indexv || f !== undefined) {\n                slide(h, v, f);\n            }\n        }\n\n    }\n\n    /**\n     * Updates the page URL (hash) to reflect the current\n     * state.\n     *\n     * @param {number} delay The time in ms to wait before\n     * writing the hash\n     */\n    function writeURL(delay) {\n\n        // Make sure there's never more than one timeout running\n        clearTimeout(writeURLTimeout);\n\n        // If a delay is specified, timeout this call\n        if (typeof delay === 'number') {\n            writeURLTimeout = setTimeout(writeURL, delay);\n        } else if (currentSlide) {\n            // If we're configured to push to history OR the history\n            // API is not avaialble.\n            if (config.history || !window.history) {\n                window.location.hash = locationHash();\n            }\n            // If we're configured to reflect the current slide in the\n            // URL without pushing to history.\n            else if (config.hash) {\n                window.history.replaceState(null, null, '#' + locationHash());\n            }\n            // If history and hash are both disabled, a hash may still\n            // be added to the URL by clicking on a href with a hash\n            // target. Counter this by always removing the hash.\n            else {\n                window.history.replaceState(null, null, window.location.pathname + window.location.search);\n            }\n        }\n\n    }\n    /**\n     * Retrieves the h/v location and fragment of the current,\n     * or specified, slide.\n     *\n     * @param {HTMLElement} [slide] If specified, the returned\n     * index will be for this slide rather than the currently\n     * active one\n     *\n     * @return {{h: number, v: number, f: number}}\n     */\n    function getIndices(slide) {\n\n        // By default, return the current indices\n        var h = indexh,\n            v = indexv,\n            f;\n\n        // If a slide is specified, return the indices of that slide\n        if (slide) {\n            var isVertical = isVerticalSlide(slide);\n            var slideh = isVertical ? slide.parentNode : slide;\n\n            // Select all horizontal slides\n            var horizontalSlides = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n\n            // Now that we know which the horizontal slide is, get its index\n            h = Math.max(horizontalSlides.indexOf(slideh), 0);\n\n            // Assume we're not vertical\n            v = undefined;\n\n            // If this is a vertical slide, grab the vertical index\n            if (isVertical) {\n                v = Math.max(toArray(slide.parentNode.querySelectorAll('section')).indexOf(slide), 0);\n            }\n        }\n\n        if (!slide && currentSlide) {\n            var hasFragments = currentSlide.querySelectorAll('.fragment').length > 0;\n            if (hasFragments) {\n                var currentFragment = currentSlide.querySelector('.current-fragment');\n                if (currentFragment && currentFragment.hasAttribute('data-fragment-index')) {\n                    f = parseInt(currentFragment.getAttribute('data-fragment-index'), 10);\n                } else {\n                    f = currentSlide.querySelectorAll('.fragment.visible').length - 1;\n                }\n            }\n        }\n\n        return {\n            h: h,\n            v: v,\n            f: f\n        };\n\n    }\n\n    /**\n     * Retrieves all slides in this presentation.\n     */\n    function getSlides() {\n\n        return toArray(dom.wrapper.querySelectorAll(SLIDES_SELECTOR + ':not(.stack)'));\n\n    }\n\n    /**\n     * Returns a list of all horizontal slides in the deck. Each\n     * vertical stack is included as one horizontal slide in the\n     * resulting array.\n     */\n    function getHorizontalSlides() {\n\n        return toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR));\n\n    }\n\n    /**\n     * Returns all vertical slides that exist within this deck.\n     */\n    function getVerticalSlides() {\n\n        return toArray(dom.wrapper.querySelectorAll('.slides>section>section'));\n\n    }\n\n    /**\n     * Returns true if there are at least two horizontal slides.\n     */\n    function hasHorizontalSlides() {\n\n        return getHorizontalSlides().length > 1;\n    }\n\n    /**\n     * Returns true if there are at least two vertical slides.\n     */\n    function hasVerticalSlides() {\n\n        return getVerticalSlides().length > 1;\n\n    }\n\n    /**\n     * Returns an array of objects where each object represents the\n     * attributes on its respective slide.\n     */\n    function getSlidesAttributes() {\n\n        return getSlides().map(function(slide) {\n\n            var attributes = {};\n            for (var i = 0; i < slide.attributes.length; i++) {\n                var attribute = slide.attributes[i];\n                attributes[attribute.name] = attribute.value;\n            }\n            return attributes;\n\n        });\n\n    }\n\n    /**\n     * Retrieves the total number of slides in this presentation.\n     *\n     * @return {number}\n     */\n    function getTotalSlides() {\n\n        return getSlides().length;\n\n    }\n\n    /**\n     * Returns the slide element matching the specified index.\n     *\n     * @return {HTMLElement}\n     */\n    function getSlide(x, y) {\n\n        var horizontalSlide = dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)[x];\n        var verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll('section');\n\n        if (verticalSlides && verticalSlides.length && typeof y === 'number') {\n            return verticalSlides ? verticalSlides[y] : undefined;\n        }\n\n        return horizontalSlide;\n\n    }\n\n    /**\n     * Returns the background element for the given slide.\n     * All slides, even the ones with no background properties\n     * defined, have a background element so as long as the\n     * index is valid an element will be returned.\n     *\n     * @param {mixed} x Horizontal background index OR a slide\n     * HTML element\n     * @param {number} y Vertical background index\n     * @return {(HTMLElement[]|*)}\n     */\n    function getSlideBackground(x, y) {\n\n        var slide = typeof x === 'number' ? getSlide(x, y) : x;\n        if (slide) {\n            return slide.slideBackgroundElement;\n        }\n\n        return undefined;\n\n    }\n\n    /**\n     * Retrieves the speaker notes from a slide. Notes can be\n     * defined in two ways:\n     * 1. As a data-notes attribute on the slide <section>\n     * 2. As an <aside class=\"notes\"> inside of the slide\n     *\n     * @param {HTMLElement} [slide=currentSlide]\n     * @return {(string|null)}\n     */\n    function getSlideNotes(slide) {\n\n        // Default to the current slide\n        slide = slide || currentSlide;\n\n        // Notes can be specified via the data-notes attribute...\n        if (slide.hasAttribute('data-notes')) {\n            return slide.getAttribute('data-notes');\n        }\n\n        // ... or using an <aside class=\"notes\"> element\n        var notesElement = slide.querySelector('aside.notes');\n        if (notesElement) {\n            return notesElement.innerHTML;\n        }\n\n        return null;\n\n    }\n\n    /**\n     * Retrieves the current state of the presentation as\n     * an object. This state can then be restored at any\n     * time.\n     *\n     * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n     */\n    function getState() {\n\n        var indices = getIndices();\n\n        return {\n            indexh: indices.h,\n            indexv: indices.v,\n            indexf: indices.f,\n            paused: isPaused(),\n            overview: isOverview()\n        };\n\n    }\n\n    /**\n     * Restores the presentation to the given state.\n     *\n     * @param {object} state As generated by getState()\n     * @see {@link getState} generates the parameter `state`\n     */\n    function setState(state) {\n\n        if (typeof state === 'object') {\n            slide(deserialize(state.indexh), deserialize(state.indexv), deserialize(state.indexf));\n\n            var pausedFlag = deserialize(state.paused),\n                overviewFlag = deserialize(state.overview);\n\n            if (typeof pausedFlag === 'boolean' && pausedFlag !== isPaused()) {\n                togglePause(pausedFlag);\n            }\n\n            if (typeof overviewFlag === 'boolean' && overviewFlag !== isOverview()) {\n                toggleOverview(overviewFlag);\n            }\n        }\n\n    }\n\n    /**\n     * Return a sorted fragments list, ordered by an increasing\n     * \"data-fragment-index\" attribute.\n     *\n     * Fragments will be revealed in the order that they are returned by\n     * this function, so you can use the index attributes to control the\n     * order of fragment appearance.\n     *\n     * To maintain a sensible default fragment order, fragments are presumed\n     * to be passed in document order. This function adds a \"fragment-index\"\n     * attribute to each node if such an attribute is not already present,\n     * and sets that attribute to an integer value which is the position of\n     * the fragment within the fragments list.\n     *\n     * @param {object[]|*} fragments\n     * @param {boolean} grouped If true the returned array will contain\n     * nested arrays for all fragments with the same index\n     * @return {object[]} sorted Sorted array of fragments\n     */\n    function sortFragments(fragments, grouped) {\n\n        fragments = toArray(fragments);\n\n        var ordered = [],\n            unordered = [],\n            sorted = [];\n\n        // Group ordered and unordered elements\n        fragments.forEach(function(fragment, i) {\n            if (fragment.hasAttribute('data-fragment-index')) {\n                var index = parseInt(fragment.getAttribute('data-fragment-index'), 10);\n\n                if (!ordered[index]) {\n                    ordered[index] = [];\n                }\n\n                ordered[index].push(fragment);\n            } else {\n                unordered.push([fragment]);\n            }\n        });\n\n        // Append fragments without explicit indices in their\n        // DOM order\n        ordered = ordered.concat(unordered);\n\n        // Manually count the index up per group to ensure there\n        // are no gaps\n        var index = 0;\n\n        // Push all fragments in their sorted order to an array,\n        // this flattens the groups\n        ordered.forEach(function(group) {\n            group.forEach(function(fragment) {\n                sorted.push(fragment);\n                fragment.setAttribute('data-fragment-index', index);\n            });\n\n            index++;\n        });\n\n        return grouped === true ? ordered : sorted;\n\n    }\n\n    /**\n     * Refreshes the fragments on the current slide so that they\n     * have the appropriate classes (.visible + .current-fragment).\n     *\n     * @param {number} [index] The index of the current fragment\n     * @param {array} [fragments] Array containing all fragments\n     * in the current slide\n     *\n     * @return {{shown: array, hidden: array}}\n     */\n    function updateFragments(index, fragments) {\n\n        var changedFragments = {\n            shown: [],\n            hidden: []\n        };\n\n        if (currentSlide && config.fragments) {\n\n            fragments = fragments || sortFragments(currentSlide.querySelectorAll('.fragment'));\n\n            if (fragments.length) {\n\n                var maxIndex = 0;\n\n                if (typeof index !== 'number') {\n                    var currentFragment = sortFragments(currentSlide.querySelectorAll('.fragment.visible')).pop();\n                    if (currentFragment) {\n                        index = parseInt(currentFragment.getAttribute('data-fragment-index') || 0, 10);\n                    }\n                }\n\n                toArray(fragments).forEach(function(el, i) {\n\n                    if (el.hasAttribute('data-fragment-index')) {\n                        i = parseInt(el.getAttribute('data-fragment-index'), 10);\n                    }\n\n                    maxIndex = Math.max(maxIndex, i);\n\n                    // Visible fragments\n                    if (i <= index) {\n                        if (!el.classList.contains('visible')) changedFragments.shown.push(el);\n                        el.classList.add('visible');\n                        el.classList.remove('current-fragment');\n\n                        // Announce the fragments one by one to the Screen Reader\n                        dom.statusDiv.textContent = getStatusText(el);\n\n                        if (i === index) {\n                            el.classList.add('current-fragment');\n                            startEmbeddedContent(el);\n                        }\n                    }\n                    // Hidden fragments\n                    else {\n                        if (el.classList.contains('visible')) changedFragments.hidden.push(el);\n                        el.classList.remove('visible');\n                        el.classList.remove('current-fragment');\n                    }\n\n                });\n\n                // Write the current fragment index to the slide <section>.\n                // This can be used by end users to apply styles based on\n                // the current fragment index.\n                index = typeof index === 'number' ? index : -1;\n                index = Math.max(Math.min(index, maxIndex), -1);\n                currentSlide.setAttribute('data-fragment', index);\n\n            }\n\n        }\n\n        return changedFragments;\n\n    }\n\n    /**\n     * Navigate to the specified slide fragment.\n     *\n     * @param {?number} index The index of the fragment that\n     * should be shown, -1 means all are invisible\n     * @param {number} offset Integer offset to apply to the\n     * fragment index\n     *\n     * @return {boolean} true if a change was made in any\n     * fragments visibility as part of this call\n     */\n    function navigateFragment(index, offset) {\n\n        if (currentSlide && config.fragments) {\n\n            var fragments = sortFragments(currentSlide.querySelectorAll('.fragment'));\n            if (fragments.length) {\n\n                // If no index is specified, find the current\n                if (typeof index !== 'number') {\n                    var lastVisibleFragment = sortFragments(currentSlide.querySelectorAll('.fragment.visible')).pop();\n\n                    if (lastVisibleFragment) {\n                        index = parseInt(lastVisibleFragment.getAttribute('data-fragment-index') || 0, 10);\n                    } else {\n                        index = -1;\n                    }\n                }\n\n                // If an offset is specified, apply it to the index\n                if (typeof offset === 'number') {\n                    index += offset;\n                }\n\n                var changedFragments = updateFragments(index, fragments);\n\n                if (changedFragments.hidden.length) {\n                    dispatchEvent('fragmenthidden', {\n                        fragment: changedFragments.hidden[0],\n                        fragments: changedFragments.hidden\n                    });\n                }\n\n                if (changedFragments.shown.length) {\n                    dispatchEvent('fragmentshown', {\n                        fragment: changedFragments.shown[0],\n                        fragments: changedFragments.shown\n                    });\n                }\n\n                updateControls();\n                updateProgress();\n\n                if (config.fragmentInURL) {\n                    writeURL();\n                }\n\n                return !!(changedFragments.shown.length || changedFragments.hidden.length);\n\n            }\n\n        }\n\n        return false;\n\n    }\n\n    /**\n     * Navigate to the next slide fragment.\n     *\n     * @return {boolean} true if there was a next fragment,\n     * false otherwise\n     */\n    function nextFragment() {\n\n        return navigateFragment(null, 1);\n\n    }\n\n    /**\n     * Navigate to the previous slide fragment.\n     *\n     * @return {boolean} true if there was a previous fragment,\n     * false otherwise\n     */\n    function previousFragment() {\n\n        return navigateFragment(null, -1);\n\n    }\n\n    /**\n     * Cues a new automated slide if enabled in the config.\n     */\n    function cueAutoSlide() {\n\n        cancelAutoSlide();\n\n        if (currentSlide && config.autoSlide !== false) {\n\n            var fragment = currentSlide.querySelector('.current-fragment');\n\n            // When the slide first appears there is no \"current\" fragment so\n            // we look for a data-autoslide timing on the first fragment\n            if (!fragment) fragment = currentSlide.querySelector('.fragment');\n\n            var fragmentAutoSlide = fragment ? fragment.getAttribute('data-autoslide') : null;\n            var parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute('data-autoslide') : null;\n            var slideAutoSlide = currentSlide.getAttribute('data-autoslide');\n\n            // Pick value in the following priority order:\n            // 1. Current fragment's data-autoslide\n            // 2. Current slide's data-autoslide\n            // 3. Parent slide's data-autoslide\n            // 4. Global autoSlide setting\n            if (fragmentAutoSlide) {\n                autoSlide = parseInt(fragmentAutoSlide, 10);\n            } else if (slideAutoSlide) {\n                autoSlide = parseInt(slideAutoSlide, 10);\n            } else if (parentAutoSlide) {\n                autoSlide = parseInt(parentAutoSlide, 10);\n            } else {\n                autoSlide = config.autoSlide;\n            }\n\n            // If there are media elements with data-autoplay,\n            // automatically set the autoSlide duration to the\n            // length of that media. Not applicable if the slide\n            // is divided up into fragments.\n            // playbackRate is accounted for in the duration.\n            if (currentSlide.querySelectorAll('.fragment').length === 0) {\n                toArray(currentSlide.querySelectorAll('video, audio')).forEach(function(el) {\n                    if (el.hasAttribute('data-autoplay')) {\n                        if (autoSlide && (el.duration * 1000 / el.playbackRate) > autoSlide) {\n                            autoSlide = (el.duration * 1000 / el.playbackRate) + 1000;\n                        }\n                    }\n                });\n            }\n\n            // Cue the next auto-slide if:\n            // - There is an autoSlide value\n            // - Auto-sliding isn't paused by the user\n            // - The presentation isn't paused\n            // - The overview isn't active\n            // - The presentation isn't over\n            if (autoSlide && !autoSlidePaused && !isPaused() && !isOverview() && (!Reveal.isLastSlide() || availableFragments().next || config.loop === true)) {\n                autoSlideTimeout = setTimeout(function() {\n                    typeof config.autoSlideMethod === 'function' ? config.autoSlideMethod() : navigateNext();\n                    cueAutoSlide();\n                }, autoSlide);\n                autoSlideStartTime = Date.now();\n            }\n\n            if (autoSlidePlayer) {\n                autoSlidePlayer.setPlaying(autoSlideTimeout !== -1);\n            }\n\n        }\n\n    }\n\n    /**\n     * Cancels any ongoing request to auto-slide.\n     */\n    function cancelAutoSlide() {\n\n        clearTimeout(autoSlideTimeout);\n        autoSlideTimeout = -1;\n\n    }\n\n    function pauseAutoSlide() {\n\n        if (autoSlide && !autoSlidePaused) {\n            autoSlidePaused = true;\n            dispatchEvent('autoslidepaused');\n            clearTimeout(autoSlideTimeout);\n\n            if (autoSlidePlayer) {\n                autoSlidePlayer.setPlaying(false);\n            }\n        }\n\n    }\n\n    function resumeAutoSlide() {\n\n        if (autoSlide && autoSlidePaused) {\n            autoSlidePaused = false;\n            dispatchEvent('autoslideresumed');\n            cueAutoSlide();\n        }\n\n    }\n\n    function navigateLeft() {\n\n        // Reverse for RTL\n        if (config.rtl) {\n            if ((isOverview() || nextFragment() === false) && availableRoutes().left) {\n                slide(indexh + 1, config.navigationMode === 'grid' ? indexv : undefined);\n            }\n        }\n        // Normal navigation\n        else if ((isOverview() || previousFragment() === false) && availableRoutes().left) {\n            slide(indexh - 1, config.navigationMode === 'grid' ? indexv : undefined);\n        }\n\n    }\n\n    function navigateRight() {\n\n        hasNavigatedRight = true;\n\n        // Reverse for RTL\n        if (config.rtl) {\n            if ((isOverview() || previousFragment() === false) && availableRoutes().right) {\n                slide(indexh - 1, config.navigationMode === 'grid' ? indexv : undefined);\n            }\n        }\n        // Normal navigation\n        else if ((isOverview() || nextFragment() === false) && availableRoutes().right) {\n            slide(indexh + 1, config.navigationMode === 'grid' ? indexv : undefined);\n        }\n\n    }\n\n    function navigateUp() {\n\n        // Prioritize hiding fragments\n        if ((isOverview() || previousFragment() === false) && availableRoutes().up) {\n            slide(indexh, indexv - 1);\n        }\n\n    }\n\n    function navigateDown() {\n\n        hasNavigatedDown = true;\n\n        // Prioritize revealing fragments\n        if ((isOverview() || nextFragment() === false) && availableRoutes().down) {\n            slide(indexh, indexv + 1);\n        }\n\n    }\n\n    /**\n     * Navigates backwards, prioritized in the following order:\n     * 1) Previous fragment\n     * 2) Previous vertical slide\n     * 3) Previous horizontal slide\n     */\n    function navigatePrev() {\n\n        // Prioritize revealing fragments\n        if (previousFragment() === false) {\n            if (availableRoutes().up) {\n                navigateUp();\n            } else {\n                // Fetch the previous horizontal slide, if there is one\n                var previousSlide;\n\n                if (config.rtl) {\n                    previousSlide = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.future')).pop();\n                } else {\n                    previousSlide = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR + '.past')).pop();\n                }\n\n                if (previousSlide) {\n                    var v = (previousSlide.querySelectorAll('section').length - 1) || undefined;\n                    var h = indexh - 1;\n                    slide(h, v);\n                }\n            }\n        }\n\n    }\n\n    /**\n     * The reverse of #navigatePrev().\n     */\n    function navigateNext() {\n\n        hasNavigatedRight = true;\n        hasNavigatedDown = true;\n\n        // Prioritize revealing fragments\n        if (nextFragment() === false) {\n\n            var routes = availableRoutes();\n\n            // When looping is enabled `routes.down` is always available\n            // so we need a separate check for when we've reached the\n            // end of a stack and should move horizontally\n            if (routes.down && routes.right && config.loop && Reveal.isLastVerticalSlide(currentSlide)) {\n                routes.down = false;\n            }\n\n            if (routes.down) {\n                navigateDown();\n            } else if (config.rtl) {\n                navigateLeft();\n            } else {\n                navigateRight();\n            }\n        }\n\n    }\n\n    /**\n     * Checks if the target element prevents the triggering of\n     * swipe navigation.\n     */\n    function isSwipePrevented(target) {\n\n        while (target && typeof target.hasAttribute === 'function') {\n            if (target.hasAttribute('data-prevent-swipe')) return true;\n            target = target.parentNode;\n        }\n\n        return false;\n\n    }\n\n\n    // --------------------------------------------------------------------//\n    // ----------------------------- EVENTS -------------------------------//\n    // --------------------------------------------------------------------//\n\n    /**\n     * Called by all event handlers that are based on user\n     * input.\n     *\n     * @param {object} [event]\n     */\n    function onUserInput(event) {\n\n        if (config.autoSlideStoppable) {\n            pauseAutoSlide();\n        }\n\n    }\n\n    /**\n     * Called whenever there is mouse input at the document level\n     * to determine if the cursor is active or not.\n     *\n     * @param {object} event\n     */\n    function onDocumentCursorActive(event) {\n\n        showCursor();\n\n        clearTimeout(cursorInactiveTimeout);\n\n        cursorInactiveTimeout = setTimeout(hideCursor, config.hideCursorTime);\n\n    }\n\n    /**\n     * Handler for the document level 'keypress' event.\n     *\n     * @param {object} event\n     */\n    function onDocumentKeyPress(event) {\n\n        // Check if the pressed key is question mark\n        if (event.shiftKey && event.charCode === 63) {\n            toggleHelp();\n        }\n\n    }\n\n    /**\n     * Handler for the document level 'keydown' event.\n     *\n     * @param {object} event\n     */\n    function onDocumentKeyDown(event) {\n\n        // If there's a condition specified and it returns false,\n        // ignore this event\n        if (typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false) {\n            return true;\n        }\n\n        // Shorthand\n        var keyCode = event.keyCode;\n\n        // Remember if auto-sliding was paused so we can toggle it\n        var autoSlideWasPaused = autoSlidePaused;\n\n        onUserInput(event);\n\n        // Is there a focused element that could be using the keyboard?\n        var activeElementIsCE = document.activeElement && document.activeElement.contentEditable !== 'inherit';\n        var activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test(document.activeElement.tagName);\n        var activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test(document.activeElement.className);\n\n        // Whitelist specific modified + keycode combinations\n        var prevSlideShortcut = event.shiftKey && event.keyCode === 32;\n        var firstSlideShortcut = event.shiftKey && keyCode === 37;\n        var lastSlideShortcut = event.shiftKey && keyCode === 39;\n\n        // Prevent all other events when a modifier is pressed\n        var unusedModifier = !prevSlideShortcut && !firstSlideShortcut && !lastSlideShortcut &&\n            (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey);\n\n        // Disregard the event if there's a focused element or a\n        // keyboard modifier key is present\n        if (activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier) return;\n\n        // While paused only allow resume keyboard events; 'b', 'v', '.'\n        var resumeKeyCodes = [66, 86, 190, 191];\n        var key;\n\n        // Custom key bindings for togglePause should be able to resume\n        if (typeof config.keyboard === 'object') {\n            for (key in config.keyboard) {\n                if (config.keyboard[key] === 'togglePause') {\n                    resumeKeyCodes.push(parseInt(key, 10));\n                }\n            }\n        }\n\n        if (isPaused() && resumeKeyCodes.indexOf(keyCode) === -1) {\n            return false;\n        }\n\n        // Use linear navigation if we're configured to OR if\n        // the presentation is one-dimensional\n        var useLinearMode = config.navigationMode === 'linear' || !hasHorizontalSlides() || !hasVerticalSlides();\n\n        var triggered = false;\n\n        // 1. User defined key bindings\n        if (typeof config.keyboard === 'object') {\n\n            for (key in config.keyboard) {\n\n                // Check if this binding matches the pressed key\n                if (parseInt(key, 10) === keyCode) {\n\n                    var value = config.keyboard[key];\n\n                    // Callback function\n                    if (typeof value === 'function') {\n                        value.apply(null, [event]);\n                    }\n                    // String shortcuts to reveal.js API\n                    else if (typeof value === 'string' && typeof Reveal[value] === 'function') {\n                        Reveal[value].call();\n                    }\n\n                    triggered = true;\n\n                }\n\n            }\n\n        }\n\n        // 2. Registered custom key bindings\n        if (triggered === false) {\n\n            for (key in registeredKeyBindings) {\n\n                // Check if this binding matches the pressed key\n                if (parseInt(key, 10) === keyCode) {\n\n                    var action = registeredKeyBindings[key].callback;\n\n                    // Callback function\n                    if (typeof action === 'function') {\n                        action.apply(null, [event]);\n                    }\n                    // String shortcuts to reveal.js API\n                    else if (typeof action === 'string' && typeof Reveal[action] === 'function') {\n                        Reveal[action].call();\n                    }\n\n                    triggered = true;\n                }\n            }\n        }\n\n        // 3. System defined key bindings\n        if (triggered === false) {\n\n            // Assume true and try to prove false\n            triggered = true;\n\n            // P, PAGE UP\n            if (keyCode === 80 || keyCode === 33) {\n                navigatePrev();\n            }\n            // N, PAGE DOWN\n            else if (keyCode === 78 || keyCode === 34) {\n                navigateNext();\n            }\n            // H, LEFT\n            else if (keyCode === 72 || keyCode === 37) {\n                if (firstSlideShortcut) {\n                    slide(0);\n                } else if (!isOverview() && useLinearMode) {\n                    navigatePrev();\n                } else {\n                    navigateLeft();\n                }\n            }\n            // L, RIGHT\n            else if (keyCode === 76 || keyCode === 39) {\n                if (lastSlideShortcut) {\n                    slide(Number.MAX_VALUE);\n                } else if (!isOverview() && useLinearMode) {\n                    navigateNext();\n                } else {\n                    navigateRight();\n                }\n            }\n            // K, UP\n            else if (keyCode === 75 || keyCode === 38) {\n                if (!isOverview() && useLinearMode) {\n                    navigatePrev();\n                } else {\n                    navigateUp();\n                }\n            }\n            // J, DOWN\n            else if (keyCode === 74 || keyCode === 40) {\n                if (!isOverview() && useLinearMode) {\n                    navigateNext();\n                } else {\n                    navigateDown();\n                }\n            }\n            // HOME\n            else if (keyCode === 36) {\n                slide(0);\n            }\n            // END\n            else if (keyCode === 35) {\n                slide(Number.MAX_VALUE);\n            }\n            // SPACE\n            else if (keyCode === 32) {\n                if (isOverview()) {\n                    deactivateOverview();\n                }\n                if (event.shiftKey) {\n                    navigatePrev();\n                } else {\n                    navigateNext();\n                }\n            }\n            // TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n            else if (keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191) {\n                togglePause();\n            }\n            // F\n            else if (keyCode === 70) {\n                enterFullscreen();\n            }\n            // A\n            else if (keyCode === 65) {\n                if (config.autoSlideStoppable) {\n                    toggleAutoSlide(autoSlideWasPaused);\n                }\n            } else {\n                triggered = false;\n            }\n\n        }\n\n        // If the input resulted in a triggered action we should prevent\n        // the browsers default behavior\n        if (triggered) {\n            event.preventDefault && event.preventDefault();\n        }\n        // ESC or O key\n        else if ((keyCode === 27 || keyCode === 79) && features.transforms3d) {\n            if (dom.overlay) {\n                closeOverlay();\n            } else {\n                toggleOverview();\n            }\n\n            event.preventDefault && event.preventDefault();\n        }\n\n        // If auto-sliding is enabled we need to cue up\n        // another timeout\n        cueAutoSlide();\n\n    }\n\n    /**\n     * Handler for the 'touchstart' event, enables support for\n     * swipe and pinch gestures.\n     *\n     * @param {object} event\n     */\n    function onTouchStart(event) {\n\n        if (isSwipePrevented(event.target)) return true;\n\n        touch.startX = event.touches[0].clientX;\n        touch.startY = event.touches[0].clientY;\n        touch.startCount = event.touches.length;\n\n    }\n\n    /**\n     * Handler for the 'touchmove' event.\n     *\n     * @param {object} event\n     */\n    function onTouchMove(event) {\n\n        if (isSwipePrevented(event.target)) return true;\n\n        // Each touch should only trigger one action\n        if (!touch.captured) {\n            onUserInput(event);\n\n            var currentX = event.touches[0].clientX;\n            var currentY = event.touches[0].clientY;\n\n            // There was only one touch point, look for a swipe\n            if (event.touches.length === 1 && touch.startCount !== 2) {\n\n                var deltaX = currentX - touch.startX,\n                    deltaY = currentY - touch.startY;\n\n                if (deltaX > touch.threshold && Math.abs(deltaX) > Math.abs(deltaY)) {\n                    touch.captured = true;\n                    if (config.navigationMode === 'linear') {\n                        if (config.rtl) {\n                            navigateNext();\n                        } else {\n                            navigatePrev();\n                        }\n                    } else {\n                        navigateLeft();\n                    }\n                } else if (deltaX < -touch.threshold && Math.abs(deltaX) > Math.abs(deltaY)) {\n                    touch.captured = true;\n                    if (config.navigationMode === 'linear') {\n                        if (config.rtl) {\n                            navigatePrev();\n                        } else {\n                            navigateNext();\n                        }\n                    } else {\n                        navigateRight();\n                    }\n                } else if (deltaY > touch.threshold) {\n                    touch.captured = true;\n                    if (config.navigationMode === 'linear') {\n                        navigatePrev();\n                    } else {\n                        navigateUp();\n                    }\n                } else if (deltaY < -touch.threshold) {\n                    touch.captured = true;\n                    if (config.navigationMode === 'linear') {\n                        navigateNext();\n                    } else {\n                        navigateDown();\n                    }\n                }\n\n                // If we're embedded, only block touch events if they have\n                // triggered an action\n                if (config.embedded) {\n                    if (touch.captured || isVerticalSlide(currentSlide)) {\n                        event.preventDefault();\n                    }\n                }\n                // Not embedded? Block them all to avoid needless tossing\n                // around of the viewport in iOS\n                else {\n                    event.preventDefault();\n                }\n\n            }\n        }\n        // There's a bug with swiping on some Android devices unless\n        // the default action is always prevented\n        else if (UA.match(/android/gi)) {\n            event.preventDefault();\n        }\n\n    }\n\n    /**\n     * Handler for the 'touchend' event.\n     *\n     * @param {object} event\n     */\n    function onTouchEnd(event) {\n\n        touch.captured = false;\n\n    }\n\n    /**\n     * Convert pointer down to touch start.\n     *\n     * @param {object} event\n     */\n    function onPointerDown(event) {\n\n        if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n            event.touches = [{\n                clientX: event.clientX,\n                clientY: event.clientY\n            }];\n            onTouchStart(event);\n        }\n\n    }\n\n    /**\n     * Convert pointer move to touch move.\n     *\n     * @param {object} event\n     */\n    function onPointerMove(event) {\n\n        if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n            event.touches = [{\n                clientX: event.clientX,\n                clientY: event.clientY\n            }];\n            onTouchMove(event);\n        }\n\n    }\n\n    /**\n     * Convert pointer up to touch end.\n     *\n     * @param {object} event\n     */\n    function onPointerUp(event) {\n\n        if (event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\") {\n            event.touches = [{\n                clientX: event.clientX,\n                clientY: event.clientY\n            }];\n            onTouchEnd(event);\n        }\n\n    }\n\n    /**\n     * Handles mouse wheel scrolling, throttled to avoid skipping\n     * multiple slides.\n     *\n     * @param {object} event\n     */\n    function onDocumentMouseScroll(event) {\n\n        if (Date.now() - lastMouseWheelStep > 600) {\n\n            lastMouseWheelStep = Date.now();\n\n            var delta = event.detail || -event.wheelDelta;\n            if (delta > 0) {\n                navigateNext();\n            } else if (delta < 0) {\n                navigatePrev();\n            }\n\n        }\n\n    }\n\n    /**\n     * Clicking on the progress bar results in a navigation to the\n     * closest approximate horizontal slide using this equation:\n     *\n     * ( clickX / presentationWidth ) * numberOfSlides\n     *\n     * @param {object} event\n     */\n    function onProgressClicked(event) {\n\n        onUserInput(event);\n\n        event.preventDefault();\n\n        var slidesTotal = toArray(dom.wrapper.querySelectorAll(HORIZONTAL_SLIDES_SELECTOR)).length;\n        var slideIndex = Math.floor((event.clientX / dom.wrapper.offsetWidth) * slidesTotal);\n\n        if (config.rtl) {\n            slideIndex = slidesTotal - slideIndex;\n        }\n\n        slide(slideIndex);\n\n    }\n\n    /**\n     * Event handler for navigation control buttons.\n     */\n    function onNavigateLeftClicked(event) {\n        event.preventDefault();\n        onUserInput();\n        config.navigationMode === 'linear' ? navigatePrev() : navigateLeft();\n    }\n\n    function onNavigateRightClicked(event) {\n        event.preventDefault();\n        onUserInput();\n        config.navigationMode === 'linear' ? navigateNext() : navigateRight();\n    }\n\n    function onNavigateUpClicked(event) {\n        event.preventDefault();\n        onUserInput();\n        navigateUp();\n    }\n\n    function onNavigateDownClicked(event) {\n        event.preventDefault();\n        onUserInput();\n        navigateDown();\n    }\n\n    function onNavigatePrevClicked(event) {\n        event.preventDefault();\n        onUserInput();\n        navigatePrev();\n    }\n\n    function onNavigateNextClicked(event) {\n        event.preventDefault();\n        onUserInput();\n        navigateNext();\n    }\n\n    /**\n     * Handler for the window level 'hashchange' event.\n     *\n     * @param {object} [event]\n     */\n    function onWindowHashChange(event) {\n\n        readURL();\n\n    }\n\n    /**\n     * Handler for the window level 'resize' event.\n     *\n     * @param {object} [event]\n     */\n    function onWindowResize(event) {\n\n        layout();\n\n    }\n\n    /**\n     * Handle for the window level 'visibilitychange' event.\n     *\n     * @param {object} [event]\n     */\n    function onPageVisibilityChange(event) {\n\n        var isHidden = document.webkitHidden ||\n            document.msHidden ||\n            document.hidden;\n\n        // If, after clicking a link or similar and we're coming back,\n        // focus the document.body to ensure we can use keyboard shortcuts\n        if (isHidden === false && document.activeElement !== document.body) {\n            // Not all elements support .blur() - SVGs among them.\n            if (typeof document.activeElement.blur === 'function') {\n                document.activeElement.blur();\n            }\n            document.body.focus();\n        }\n\n    }\n\n    /**\n     * Invoked when a slide is and we're in the overview.\n     *\n     * @param {object} event\n     */\n    function onOverviewSlideClicked(event) {\n\n        // TODO There's a bug here where the event listeners are not\n        // removed after deactivating the overview.\n        if (eventsAreBound && isOverview()) {\n            event.preventDefault();\n\n            var element = event.target;\n\n            while (element && !element.nodeName.match(/section/gi)) {\n                element = element.parentNode;\n            }\n\n            if (element && !element.classList.contains('disabled')) {\n\n                deactivateOverview();\n\n                if (element.nodeName.match(/section/gi)) {\n                    var h = parseInt(element.getAttribute('data-index-h'), 10),\n                        v = parseInt(element.getAttribute('data-index-v'), 10);\n\n                    slide(h, v);\n                }\n\n            }\n        }\n\n    }\n\n    /**\n     * Handles clicks on links that are set to preview in the\n     * iframe overlay.\n     *\n     * @param {object} event\n     */\n    function onPreviewLinkClicked(event) {\n\n        if (event.currentTarget && event.currentTarget.hasAttribute('href')) {\n            var url = event.currentTarget.getAttribute('href');\n            if (url) {\n                showPreview(url);\n                event.preventDefault();\n            }\n        }\n\n    }\n\n    /**\n     * Handles click on the auto-sliding controls element.\n     *\n     * @param {object} [event]\n     */\n    function onAutoSlidePlayerClick(event) {\n\n        // Replay\n        if (Reveal.isLastSlide() && config.loop === false) {\n            slide(0, 0);\n            resumeAutoSlide();\n        }\n        // Resume\n        else if (autoSlidePaused) {\n            resumeAutoSlide();\n        }\n        // Pause\n        else {\n            pauseAutoSlide();\n        }\n\n    }\n\n\n    // --------------------------------------------------------------------//\n    // ------------------------ PLAYBACK COMPONENT ------------------------//\n    // --------------------------------------------------------------------//\n\n\n    /**\n     * Constructor for the playback component, which displays\n     * play/pause/progress controls.\n     *\n     * @param {HTMLElement} container The component will append\n     * itself to this\n     * @param {function} progressCheck A method which will be\n     * called frequently to get the current progress on a range\n     * of 0-1\n     */\n    function Playback(container, progressCheck) {\n\n        // Cosmetics\n        this.diameter = 100;\n        this.diameter2 = this.diameter / 2;\n        this.thickness = 6;\n\n        // Flags if we are currently playing\n        this.playing = false;\n\n        // Current progress on a 0-1 range\n        this.progress = 0;\n\n        // Used to loop the animation smoothly\n        this.progressOffset = 1;\n\n        this.container = container;\n        this.progressCheck = progressCheck;\n\n        this.canvas = document.createElement('canvas');\n        this.canvas.className = 'playback';\n        this.canvas.width = this.diameter;\n        this.canvas.height = this.diameter;\n        this.canvas.style.width = this.diameter2 + 'px';\n        this.canvas.style.height = this.diameter2 + 'px';\n        this.context = this.canvas.getContext('2d');\n\n        this.container.appendChild(this.canvas);\n\n        this.render();\n\n    }\n\n    /**\n     * @param value\n     */\n    Playback.prototype.setPlaying = function(value) {\n\n        var wasPlaying = this.playing;\n\n        this.playing = value;\n\n        // Start repainting if we weren't already\n        if (!wasPlaying && this.playing) {\n            this.animate();\n        } else {\n            this.render();\n        }\n\n    };\n\n    Playback.prototype.animate = function() {\n\n        var progressBefore = this.progress;\n\n        this.progress = this.progressCheck();\n\n        // When we loop, offset the progress so that it eases\n        // smoothly rather than immediately resetting\n        if (progressBefore > 0.8 && this.progress < 0.2) {\n            this.progressOffset = this.progress;\n        }\n\n        this.render();\n\n        if (this.playing) {\n            features.requestAnimationFrameMethod.call(window, this.animate.bind(this));\n        }\n\n    };\n\n    /**\n     * Renders the current progress and playback state.\n     */\n    Playback.prototype.render = function() {\n\n        var progress = this.playing ? this.progress : 0,\n            radius = (this.diameter2) - this.thickness,\n            x = this.diameter2,\n            y = this.diameter2,\n            iconSize = 28;\n\n        // Ease towards 1\n        this.progressOffset += (1 - this.progressOffset) * 0.1;\n\n        var endAngle = (-Math.PI / 2) + (progress * (Math.PI * 2));\n        var startAngle = (-Math.PI / 2) + (this.progressOffset * (Math.PI * 2));\n\n        this.context.save();\n        this.context.clearRect(0, 0, this.diameter, this.diameter);\n\n        // Solid background color\n        this.context.beginPath();\n        this.context.arc(x, y, radius + 4, 0, Math.PI * 2, false);\n        this.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n        this.context.fill();\n\n        // Draw progress track\n        this.context.beginPath();\n        this.context.arc(x, y, radius, 0, Math.PI * 2, false);\n        this.context.lineWidth = this.thickness;\n        this.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n        this.context.stroke();\n\n        if (this.playing) {\n            // Draw progress on top of track\n            this.context.beginPath();\n            this.context.arc(x, y, radius, startAngle, endAngle, false);\n            this.context.lineWidth = this.thickness;\n            this.context.strokeStyle = '#fff';\n            this.context.stroke();\n        }\n\n        this.context.translate(x - (iconSize / 2), y - (iconSize / 2));\n\n        // Draw play/pause icons\n        if (this.playing) {\n            this.context.fillStyle = '#fff';\n            this.context.fillRect(0, 0, iconSize / 2 - 4, iconSize);\n            this.context.fillRect(iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize);\n        } else {\n            this.context.beginPath();\n            this.context.translate(4, 0);\n            this.context.moveTo(0, 0);\n            this.context.lineTo(iconSize - 4, iconSize / 2);\n            this.context.lineTo(0, iconSize);\n            this.context.fillStyle = '#fff';\n            this.context.fill();\n        }\n\n        this.context.restore();\n\n    };\n\n    Playback.prototype.on = function(type, listener) {\n        this.canvas.addEventListener(type, listener, false);\n    };\n\n    Playback.prototype.off = function(type, listener) {\n        this.canvas.removeEventListener(type, listener, false);\n    };\n\n    Playback.prototype.destroy = function() {\n\n        this.playing = false;\n\n        if (this.canvas.parentNode) {\n            this.container.removeChild(this.canvas);\n        }\n\n    };\n\n\n    // --------------------------------------------------------------------//\n    // ------------------------------- API --------------------------------//\n    // --------------------------------------------------------------------//\n\n\n    Reveal = {\n        VERSION: VERSION,\n\n        initialize: initialize,\n        configure: configure,\n\n        sync: sync,\n        syncSlide: syncSlide,\n        syncFragments: syncFragments,\n\n        // Navigation methods\n        slide: slide,\n        left: navigateLeft,\n        right: navigateRight,\n        up: navigateUp,\n        down: navigateDown,\n        prev: navigatePrev,\n        next: navigateNext,\n\n        // Fragment methods\n        navigateFragment: navigateFragment,\n        prevFragment: previousFragment,\n        nextFragment: nextFragment,\n\n        // Deprecated aliases\n        navigateTo: slide,\n        navigateLeft: navigateLeft,\n        navigateRight: navigateRight,\n        navigateUp: navigateUp,\n        navigateDown: navigateDown,\n        navigatePrev: navigatePrev,\n        navigateNext: navigateNext,\n\n        // Forces an update in slide layout\n        layout: layout,\n\n        // Randomizes the order of slides\n        shuffle: shuffle,\n\n        // Returns an object with the available routes as booleans (left/right/top/bottom)\n        availableRoutes: availableRoutes,\n\n        // Returns an object with the available fragments as booleans (prev/next)\n        availableFragments: availableFragments,\n\n        // Toggles a help overlay with keyboard shortcuts\n        toggleHelp: toggleHelp,\n\n        // Toggles the overview mode on/off\n        toggleOverview: toggleOverview,\n\n        // Toggles the \"black screen\" mode on/off\n        togglePause: togglePause,\n\n        // Toggles the auto slide mode on/off\n        toggleAutoSlide: toggleAutoSlide,\n\n        // State checks\n        isOverview: isOverview,\n        isPaused: isPaused,\n        isAutoSliding: isAutoSliding,\n        isSpeakerNotes: isSpeakerNotes,\n\n        // Slide preloading\n        loadSlide: loadSlide,\n        unloadSlide: unloadSlide,\n\n        // Adds or removes all internal event listeners (such as keyboard)\n        addEventListeners: addEventListeners,\n        removeEventListeners: removeEventListeners,\n\n        // Facility for persisting and restoring the presentation state\n        getState: getState,\n        setState: setState,\n\n        // Presentation progress\n        getSlidePastCount: getSlidePastCount,\n\n        // Presentation progress on range of 0-1\n        getProgress: getProgress,\n\n        // Returns the indices of the current, or specified, slide\n        getIndices: getIndices,\n\n        // Returns an Array of all slides\n        getSlides: getSlides,\n\n        // Returns an Array of objects representing the attributes on\n        // the slides\n        getSlidesAttributes: getSlidesAttributes,\n\n        // Returns the total number of slides\n        getTotalSlides: getTotalSlides,\n\n        // Returns the slide element at the specified index\n        getSlide: getSlide,\n\n        // Returns the slide background element at the specified index\n        getSlideBackground: getSlideBackground,\n\n        // Returns the speaker notes string for a slide, or null\n        getSlideNotes: getSlideNotes,\n\n        // Returns an array with all horizontal/vertical slides in the deck\n        getHorizontalSlides: getHorizontalSlides,\n        getVerticalSlides: getVerticalSlides,\n\n        // Checks if the presentation contains two or more\n        // horizontal/vertical slides\n        hasHorizontalSlides: hasHorizontalSlides,\n        hasVerticalSlides: hasVerticalSlides,\n\n        // Returns the previous slide element, may be null\n        getPreviousSlide: function() {\n            return previousSlide;\n        },\n\n        // Returns the current slide element\n        getCurrentSlide: function() {\n            return currentSlide;\n        },\n\n        // Returns the current scale of the presentation content\n        getScale: function() {\n            return scale;\n        },\n\n        // Returns the current configuration object\n        getConfig: function() {\n            return config;\n        },\n\n        // Helper method, retrieves query string as a key/value hash\n        getQueryHash: function() {\n            var query = {};\n\n            location.search.replace(/[A-Z0-9]+?=([\\w\\.%-]*)/gi, function(a) {\n                query[a.split('=').shift()] = a.split('=').pop();\n            });\n\n            // Basic deserialization\n            for (var i in query) {\n                var value = query[i];\n\n                query[i] = deserialize(unescape(value));\n            }\n\n            return query;\n        },\n\n        // Returns the top-level DOM element\n        getRevealElement: function() {\n            return dom.wrapper || document.querySelector('.reveal');\n        },\n\n        // Returns a hash with all registered plugins\n        getPlugins: function() {\n            return plugins;\n        },\n\n        // Returns true if we're currently on the first slide\n        isFirstSlide: function() {\n            return (indexh === 0 && indexv === 0);\n        },\n\n        // Returns true if we're currently on the last slide\n        isLastSlide: function() {\n            if (currentSlide) {\n                // Does this slide have a next sibling?\n                if (currentSlide.nextElementSibling) return false;\n\n                // If it's vertical, does its parent have a next sibling?\n                if (isVerticalSlide(currentSlide) && currentSlide.parentNode.nextElementSibling) return false;\n\n                return true;\n            }\n\n            return false;\n        },\n\n        // Returns true if we're on the last slide in the current\n        // vertical stack\n        isLastVerticalSlide: function() {\n            if (currentSlide && isVerticalSlide(currentSlide)) {\n                // Does this slide have a next sibling?\n                if (currentSlide.nextElementSibling) return false;\n\n                return true;\n            }\n\n            return false;\n        },\n\n        // Checks if reveal.js has been loaded and is ready for use\n        isReady: function() {\n            return loaded;\n        },\n\n        // Forward event binding to the reveal DOM element\n        addEventListener: function(type, listener, useCapture) {\n            if ('addEventListener' in window) {\n                Reveal.getRevealElement().addEventListener(type, listener, useCapture);\n            }\n        },\n        removeEventListener: function(type, listener, useCapture) {\n            if ('addEventListener' in window) {\n                Reveal.getRevealElement().removeEventListener(type, listener, useCapture);\n            }\n        },\n\n        // Adds/removes a custom key binding\n        addKeyBinding: addKeyBinding,\n        removeKeyBinding: removeKeyBinding,\n\n        // API for registering and retrieving plugins\n        registerPlugin: registerPlugin,\n        hasPlugin: hasPlugin,\n        getPlugin: getPlugin,\n\n        // Programmatically triggers a keyboard event\n        triggerKey: function(keyCode) {\n            onDocumentKeyDown({\n                keyCode: keyCode\n            });\n        },\n\n        // Registers a new shortcut to include in the help overlay\n        registerKeyboardShortcut: function(key, value) {\n            keyboardShortcuts[key] = value;\n        }\n    };\n\n    return Reveal;\n\n}));"]},"metadata":{},"sourceType":"module"}