{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khanh\\\\workspace\\\\commeun\\\\frontend\\\\src\\\\views\\\\TopicView.js\";\nimport React, { Component } from \"react\";\nimport Post from \"../components/Post\";\nimport AddPost from \"../components/AddPost\";\nimport EditPost from \"../components/EditPost\";\nimport \"./TopicView.css\";\nimport Topic from \"../components/Topic\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nclass TopicView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      user: cookies.get(\"user\"),\n      editId: null,\n      dataOrigin: null\n    };\n\n    this.goToAnswer = id => {\n      let path = `/Layout/Message/` + id;\n      this.props.history.push(path);\n    };\n\n    this.getTopicFromDb = () => {\n      // let url = \"http://localhost:4000/topics/\" + this.id;\n      // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\n      let url = \"/api/topic/\" + this.id;\n      let req = new Request(url, {\n        method: \"GET\",\n        cache: \"default\",\n        credentials: \"include\"\n      });\n      fetch(req).then(res => {\n        if (res.status === 401) {\n          console.log(\"TopicView n'a pas recu les topics.\");\n        } else {\n          // console.log(\"TopicView  a bien recu les topics.\");\n          return res.json();\n        }\n      }).then(dataOrigin => {\n        if (dataOrigin.length > 0) {\n          this.setState({\n            dataOrigin: dataOrigin[0]\n          });\n        }\n      });\n    };\n\n    this.getDataFromDb = () => {\n      // let url = \"http://localhost:4000/topics/\" + this.id;\n      // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\n      let url = \"/api/origin_posts/\" + this.id;\n      let req = new Request(url, {\n        method: \"GET\",\n        cache: \"default\",\n        credentials: \"include\"\n      });\n      fetch(req).then(res => {\n        if (res.status === 401) {\n          console.log(\"TopicView n'a pas recu les topics.\");\n        } else {\n          // console.log(\"TopicView  a bien recu les topics.\");\n          return res.json();\n        }\n      }).then(data => {\n        this.setState({\n          data: data\n        });\n      });\n    };\n\n    this.goOnEdit = id => {\n      this.setState({\n        editId: id\n      });\n    };\n\n    this.goOncancelEdit = () => {\n      this.setState({\n        editId: null\n      });\n    };\n\n    this.compareValues = (key, order = \"asc\") => {\n      return function innerSort(a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n          // property doesn't exist on either object\n          return 0;\n        }\n\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n        let comparison = 0;\n\n        if (varA > varB) {\n          comparison = 1;\n        } else if (varA < varB) {\n          comparison = -1;\n        }\n\n        return order === \"desc\" ? comparison * -1 : comparison;\n      };\n    };\n\n    this.PostView = data => {\n      return data.map(({\n        user,\n        texte,\n        date,\n        id,\n        likes,\n        dislikes\n      }, index) => React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Post, {\n        user: user,\n        texte: texte,\n        date: date,\n        key: index,\n        id: id,\n        likes: likes,\n        dislikes: dislikes,\n        refresh: this.getDataFromDb,\n        editfunction: this.goOnEdit,\n        onMessageClick: this.goToAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    };\n\n    this.props = props;\n    this.id = props.location.pathname.split(\"/\")[3];\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n    this.getTopicFromDb();\n  }\n\n  render() {\n    let myid = this.id;\n    let _this$state = this.state,\n        dataOrigin = _this$state.dataOrigin,\n        data = _this$state.data;\n\n    if (data) {\n      data.sort(this.compareValues(\"likes\", \"desc\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"topicview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posts_box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, dataOrigin && React.createElement(Topic, {\n      titre: dataOrigin.titre,\n      user: dataOrigin.user,\n      key: dataOrigin.index,\n      id: dataOrigin.id,\n      onTopicClick: () => {\n        return null;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), data && this.PostView(data)), !this.state.editId && React.createElement(\"div\", {\n      className: \"border-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(AddPost, {\n      id: myid,\n      refresh: this.getDataFromDb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), this.state.editId && React.createElement(\"div\", {\n      className: \"border-top border-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(EditPost, {\n      editId: this.state.editId,\n      cancelEdit: this.goOncancelEdit,\n      refresh: this.getDataFromDb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TopicView;","map":{"version":3,"sources":["C:/Users/khanh/workspace/commeun/frontend/src/views/TopicView.js"],"names":["React","Component","Post","AddPost","EditPost","Topic","Cookies","cookies","TopicView","constructor","props","state","data","user","get","editId","dataOrigin","goToAnswer","id","path","history","push","getTopicFromDb","url","req","Request","method","cache","credentials","fetch","then","res","status","console","log","json","length","setState","getDataFromDb","goOnEdit","goOncancelEdit","compareValues","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","PostView","map","texte","date","likes","dislikes","index","location","pathname","split","componentDidMount","render","myid","sort","titre"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Post from \"../components/Post\";\r\nimport AddPost from \"../components/AddPost\";\r\nimport EditPost from \"../components/EditPost\";\r\nimport \"./TopicView.css\";\r\nimport Topic from \"../components/Topic\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass TopicView extends Component {\r\n  state = {\r\n    data: null,\r\n    user: cookies.get(\"user\"),\r\n    editId: null,\r\n    dataOrigin: null\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n    this.id = props.location.pathname.split(\"/\")[3];\r\n  }\r\n\r\n  goToAnswer = id => {\r\n    let path = `/Layout/Message/` + id;\r\n    this.props.history.push(path);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromDb();\r\n    this.getTopicFromDb();\r\n  }\r\n\r\n  getTopicFromDb = () => {\r\n    // let url = \"http://localhost:4000/topics/\" + this.id;\r\n    // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\r\n    let url = \"/api/topic/\" + this.id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      cache: \"default\",\r\n      credentials: \"include\"\r\n    });\r\n    fetch(req)\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          console.log(\"TopicView n'a pas recu les topics.\");\r\n        } else {\r\n          // console.log(\"TopicView  a bien recu les topics.\");\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(dataOrigin => {\r\n        if (dataOrigin.length > 0) {\r\n          this.setState({\r\n            dataOrigin: dataOrigin[0]\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  getDataFromDb = () => {\r\n    // let url = \"http://localhost:4000/topics/\" + this.id;\r\n    // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\r\n    let url = \"/api/origin_posts/\" + this.id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      cache: \"default\",\r\n      credentials: \"include\"\r\n    });\r\n    fetch(req)\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          console.log(\"TopicView n'a pas recu les topics.\");\r\n        } else {\r\n          // console.log(\"TopicView  a bien recu les topics.\");\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          data: data\r\n        });\r\n      });\r\n  };\r\n\r\n  goOnEdit = id => {\r\n    this.setState({\r\n      editId: id\r\n    });\r\n  };\r\n\r\n  goOncancelEdit = () => {\r\n    this.setState({\r\n      editId: null\r\n    });\r\n  };\r\n\r\n  compareValues = (key, order = \"asc\") => {\r\n    return function innerSort(a, b) {\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n        // property doesn't exist on either object\r\n        return 0;\r\n      }\r\n\r\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n\r\n      let comparison = 0;\r\n      if (varA > varB) {\r\n        comparison = 1;\r\n      } else if (varA < varB) {\r\n        comparison = -1;\r\n      }\r\n      return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n  };\r\n\r\n  PostView = data => {\r\n    return data.map(({ user, texte, date, id, likes, dislikes }, index) => (\r\n      <div key={index}>\r\n        <Post\r\n          user={user}\r\n          texte={texte}\r\n          date={date}\r\n          key={index}\r\n          id={id}\r\n          likes={likes}\r\n          dislikes={dislikes}\r\n          refresh={this.getDataFromDb}\r\n          editfunction={this.goOnEdit}\r\n          onMessageClick={this.goToAnswer}\r\n        />\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    let myid = this.id;\r\n    let { dataOrigin, data } = this.state;\r\n\r\n    if (data) {\r\n      data.sort(this.compareValues(\"likes\", \"desc\"));\r\n    }\r\n\r\n    return (\r\n      <div className=\"topicview\">\r\n        <div className=\"posts_box\">\r\n          {dataOrigin && (\r\n            <Topic\r\n              titre={dataOrigin.titre}\r\n              user={dataOrigin.user}\r\n              key={dataOrigin.index}\r\n              id={dataOrigin.id}\r\n              onTopicClick={() => {\r\n                return null;\r\n              }}\r\n            />\r\n          )}\r\n          {data && this.PostView(data)}\r\n        </div>\r\n        {!this.state.editId && (\r\n          <div className=\"border-top\">\r\n            <AddPost id={myid} refresh={this.getDataFromDb} />\r\n          </div>\r\n        )}\r\n        {this.state.editId && (\r\n          <div className=\"border-top border-light\">\r\n            <EditPost\r\n              editId={this.state.editId}\r\n              cancelEdit={this.goOncancelEdit}\r\n              refresh={this.getDataFromDb}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopicView;\r\n"]},"metadata":{},"sourceType":"module"}