{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khanh\\\\workspace\\\\commeun\\\\frontend\\\\src\\\\components\\\\MainTopic.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport \"./MainTopic.css\";\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\n\nclass MainTopic extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.getDataFromDb = () => {\n      let url = \"/api/topic/\" + this.props.id;\n      let req = new Request(url, {\n        method: \"GET\",\n        cache: \"default\",\n        credentials: \"include\"\n      });\n      fetch(req).then(res => {\n        if (res.status === 401) {\n          console.log(\"getDataFromDb n'a pas recu les topics.\");\n        } else {\n          return res.json();\n        }\n      }).then(data => {\n        console.log(data);\n\n        if (data.length > 0) {\n          this.setState({\n            data: data[0]\n          });\n        }\n      });\n    };\n\n    this.onClickLike = () => {\n      fetch(\"/api/likepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de like\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.onClickDislike = () => {\n      fetch(\"/api/dislikepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de dislike\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.renderLikeDislike = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"banniere\",\n        src: require(\"./like.png\"),\n        width: \"20px\",\n        height: \"20px\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.onClickLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"\\xA0\", this.props.likes)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"banniere\",\n        src: require(\"./dislike.png\"),\n        width: \"20px\",\n        height: \"20px\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.onClickDislike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"\\xA0\", this.props.dislikes))));\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n  }\n\n  render() {\n    let _this$state = this.state,\n        data = _this$state.data,\n        id = _this$state.id; // .split(\"\\n\")\n    // .map((item, i) => <p key={i}>{item}</p>);\n\n    return React.createElement(Card, {\n      className: \"mx-4 my-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, data && React.createElement(CardContent, {\n      className: \"main_topic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"border-right col1st  col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Col, {\n      id: \"like_dislike_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      id: \"post_content_wrapper\",\n      className: \"border-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: data.user + \" \" + data.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" \", data.titre)))));\n  }\n\n}\n\nexport default MainTopic;","map":{"version":3,"sources":["C:/Users/khanh/workspace/commeun/frontend/src/components/MainTopic.js"],"names":["React","Component","Row","Col","Image","Card","CardHeader","CardContent","Typography","MainTopic","state","data","getDataFromDb","url","props","id","req","Request","method","cache","credentials","fetch","then","res","status","console","log","json","length","setState","onClickLike","body","JSON","stringify","msgId","user","headers","response","refresh","catch","error","onClickDislike","renderLikeDislike","require","cursor","likes","dislikes","componentDidMount","render","date","titre"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport \"./MainTopic.css\";\r\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nclass MainTopic extends Component {\r\n  state = {\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromDb();\r\n  }\r\n\r\n  getDataFromDb = () => {\r\n    let url = \"/api/topic/\" + this.props.id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      cache: \"default\",\r\n      credentials: \"include\"\r\n    });\r\n    fetch(req)\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          console.log(\"getDataFromDb n'a pas recu les topics.\");\r\n        } else {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data.length > 0) {\r\n          this.setState({\r\n            data: data[0]\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  onClickLike = () => {\r\n    fetch(\"/api/likepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de like\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  onClickDislike = () => {\r\n    fetch(\"/api/dislikepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de dislike\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  renderLikeDislike = () => {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col>\r\n            <Image\r\n              className=\"banniere\"\r\n              src={require(\"./like.png\")}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={this.onClickLike}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <b>&nbsp;{this.props.likes}</b>\r\n          </Col>\r\n          <Col>\r\n            <Image\r\n              className=\"banniere\"\r\n              src={require(\"./dislike.png\")}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={this.onClickDislike}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <b>&nbsp;{this.props.dislikes}</b>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { data, id } = this.state;\r\n    // .split(\"\\n\")\r\n    // .map((item, i) => <p key={i}>{item}</p>);\r\n\r\n    return (\r\n      <Card className=\"mx-4 my-2\">\r\n        {data && (\r\n          <CardContent className=\"main_topic\">\r\n            <Row>\r\n              {/* <Col id=\"avatar_wrapper\" className=\"col-auto\">\r\n              <Avatar src=\"/broken-image.jpg\" />\r\n            </Col> */}\r\n              <Col className=\"border-right col1st  col-auto\">\r\n                <Row className=\"h-100\">\r\n                  <Col id=\"like_dislike_wrapper\">\r\n                    {/* {this.renderLikeDislike(data)} */}\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col id=\"post_content_wrapper\" className=\"border-dark\">\r\n                <CardHeader title={data.user + \" \" + data.date} />\r\n                <Typography variant=\"h2\"> {data.titre}</Typography>\r\n              </Col>\r\n            </Row>\r\n          </CardContent>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainTopic;\r\n"]},"metadata":{},"sourceType":"module"}