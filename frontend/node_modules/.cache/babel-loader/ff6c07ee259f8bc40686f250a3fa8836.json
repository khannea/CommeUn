{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khanh\\\\workspace\\\\Code\\\\commeun\\\\frontend\\\\src\\\\views\\\\PostView.jsx\";\nimport React, { Component } from \"react\";\nimport \"./PostView.css\";\nimport Post from \"../components/Post\";\nimport Button from \"@material-ui/core/Button\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport AddPost from \"../components/AddPost\";\n\nclass PostView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromDb = () => {\n      let url = \"/api/origin_posts/\" + this.props.origin_id;\n      let req = new Request(url, {\n        method: \"GET\",\n        cache: \"default\",\n        credentials: \"include\"\n      });\n      fetch(req).then(res => {\n        if (res.status === 401) {\n          console.log(\"getDataFromDb n'a pas recu les topics.\");\n        } else {\n          return res.json();\n        }\n      }).then(data => {\n        this.setState({\n          data: data\n        });\n      });\n    };\n\n    this.addpost_submit = () => {\n      this.setState({\n        answer: false,\n        type: \"all\",\n        sent: true\n      });\n      this.getDataFromDb();\n    };\n\n    this.compareValues = (key, order = \"asc\") => {\n      return function innerSort(a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n          return 0;\n        }\n\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n        let comparison = 0;\n\n        if (varA > varB) {\n          comparison = 1;\n        } else if (varA < varB) {\n          comparison = -1;\n        }\n\n        return order === \"desc\" ? comparison * -1 : comparison;\n      };\n    };\n\n    this.switchType = () => {\n      if (this.state.type === \"best\" || this.state.type === \"none\") {\n        this.setState({\n          type: \"all\"\n        });\n      } else {\n        this.setState({\n          type: \"best\"\n        });\n      }\n    };\n\n    this.state = {\n      type: \"best\",\n      data: null,\n      answer: false,\n      sent: false\n    };\n    this.props = props;\n  }\n\n  componentDidMount() {\n    if (!this.props.origin_id) {\n      // this.props.origin_id = this.props.location.pathname.split(\"/\")[3];\n      this.setState({\n        type: \"all\"\n      });\n    }\n\n    this.getDataFromDb();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (nextProps.origin_id !== this.props.origin_id) {\n      this.getDataFromDb();\n    }\n  }\n\n  render() {\n    let _this$state = this.state,\n        data = _this$state.data,\n        answer = _this$state.answer,\n        type = _this$state.type,\n        sent = _this$state.sent;\n\n    if (data) {\n      data.sort(this.compareValues(\"likes\", \"desc\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"post_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, sent && React.createElement(\"div\", {\n      className: \"alert alert-success m-0\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Message envoy\\xE9.\"), !answer && React.createElement(Button, {\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => {\n        if (answer === false) {\n          this.setState({\n            answer: true\n          });\n        } else {\n          this.setState({\n            answer: false\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"R\\xE9pondre\"), answer && React.createElement(Card, {\n      className: \"mx-4 my-2 w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(AddPost, {\n      id: this.props.origin_id,\n      addpost_submit: this.addpost_submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), data && type !== \"none\" && data.length > 0 && React.createElement(Post, {\n      user: data[0].user,\n      texte: data[0].texte,\n      date: data[0].date,\n      key: data[0].index,\n      id: data[0].id,\n      likes: data[0].likes,\n      dislikes: data[0].dislikes,\n      refresh: this.getDataFromDb,\n      origin_id: data[0].id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), data && type === \"all\" && data.map(({\n      user,\n      texte,\n      date,\n      id,\n      likes,\n      dislikes\n    }, index) => index !== 0 && React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Post, {\n      user: user,\n      texte: texte,\n      date: date,\n      key: index,\n      id: id,\n      likes: likes,\n      dislikes: dislikes,\n      refresh: this.getDataFromDb,\n      origin_id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), this.state.type === \"all\" && React.createElement(Button, {\n      onClick: () => {\n        this.switchType();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"R\\xE9tracter\"), data && data.length > 1 && type !== \"all\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"reponse\",\n      onClick: () => {\n        this.switchType();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"...\", data.length - 1, \" r\\xE9ponses\")));\n  }\n\n}\n\nexport default PostView;","map":{"version":3,"sources":["C:/Users/khanh/workspace/Code/commeun/frontend/src/views/PostView.jsx"],"names":["React","Component","Post","Button","Card","CardContent","AddPost","PostView","constructor","props","getDataFromDb","url","origin_id","req","Request","method","cache","credentials","fetch","then","res","status","console","log","json","data","setState","addpost_submit","answer","type","sent","compareValues","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","switchType","state","componentDidMount","componentDidUpdate","nextProps","render","sort","length","user","texte","date","index","id","likes","dislikes","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./PostView.css\";\r\nimport Post from \"../components/Post\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport AddPost from \"../components/AddPost\";\r\n\r\nclass PostView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      type: \"best\",\r\n      data: null,\r\n      answer: false,\r\n      sent: false\r\n    };\r\n    this.props = props;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.origin_id) {\r\n      // this.props.origin_id = this.props.location.pathname.split(\"/\")[3];\r\n      this.setState({ type: \"all\" });\r\n    }\r\n    this.getDataFromDb();\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (nextProps.origin_id !== this.props.origin_id) {\r\n      this.getDataFromDb();\r\n    }\r\n  }\r\n\r\n  getDataFromDb = () => {\r\n    let url = \"/api/origin_posts/\" + this.props.origin_id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      cache: \"default\",\r\n      credentials: \"include\"\r\n    });\r\n    fetch(req)\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          console.log(\"getDataFromDb n'a pas recu les topics.\");\r\n        } else {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          data: data\r\n        });\r\n      });\r\n  };\r\n\r\n  addpost_submit = () => {\r\n    this.setState({ answer: false, type: \"all\", sent: true });\r\n    this.getDataFromDb();\r\n  };\r\n\r\n  compareValues = (key, order = \"asc\") => {\r\n    return function innerSort(a, b) {\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n        return 0;\r\n      }\r\n\r\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n\r\n      let comparison = 0;\r\n      if (varA > varB) {\r\n        comparison = 1;\r\n      } else if (varA < varB) {\r\n        comparison = -1;\r\n      }\r\n      return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n  };\r\n\r\n  switchType = () => {\r\n    if (this.state.type === \"best\" || this.state.type === \"none\") {\r\n      this.setState({ type: \"all\" });\r\n    } else {\r\n      this.setState({ type: \"best\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data, answer, type, sent } = this.state;\r\n\r\n    if (data) {\r\n      data.sort(this.compareValues(\"likes\", \"desc\"));\r\n    }\r\n\r\n    return (\r\n      <div className=\"post_wrapper\">\r\n        {sent && (\r\n          <div className=\"alert alert-success m-0\" role=\"alert\">\r\n            Message envoyé.\r\n          </div>\r\n        )}\r\n        {!answer && (\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              if (answer === false) {\r\n                this.setState({ answer: true });\r\n              } else {\r\n                this.setState({ answer: false });\r\n              }\r\n            }}\r\n          >\r\n            Répondre\r\n          </Button>\r\n        )}\r\n        {answer && (\r\n          <Card className=\"mx-4 my-2 w-100\">\r\n            <CardContent>\r\n              <AddPost\r\n                id={this.props.origin_id}\r\n                addpost_submit={this.addpost_submit}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n        {data && type !== \"none\" && data.length > 0 && (\r\n          <Post\r\n            user={data[0].user}\r\n            texte={data[0].texte}\r\n            date={data[0].date}\r\n            key={data[0].index}\r\n            id={data[0].id}\r\n            likes={data[0].likes}\r\n            dislikes={data[0].dislikes}\r\n            refresh={this.getDataFromDb}\r\n            origin_id={data[0].id}\r\n          />\r\n        )}\r\n\r\n        {data &&\r\n          type === \"all\" &&\r\n          data.map(\r\n            ({ user, texte, date, id, likes, dislikes }, index) =>\r\n              index !== 0 && (\r\n                <div key={index}>\r\n                  <Post\r\n                    user={user}\r\n                    texte={texte}\r\n                    date={date}\r\n                    key={index}\r\n                    id={id}\r\n                    likes={likes}\r\n                    dislikes={dislikes}\r\n                    refresh={this.getDataFromDb}\r\n                    origin_id={id}\r\n                  />\r\n                </div>\r\n              )\r\n          )}\r\n\r\n        {this.state.type === \"all\" && (\r\n          <Button\r\n            onClick={() => {\r\n              this.switchType();\r\n            }}\r\n          >\r\n            Rétracter\r\n          </Button>\r\n        )}\r\n\r\n        {data && data.length > 1 && type !== \"all\" && (\r\n          <div>\r\n            <Button\r\n              variant=\"reponse\"\r\n              onClick={() => {\r\n                this.switchType();\r\n              }}\r\n            >\r\n              ...{data.length - 1} réponses\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostView;\r\n"]},"metadata":{},"sourceType":"module"}