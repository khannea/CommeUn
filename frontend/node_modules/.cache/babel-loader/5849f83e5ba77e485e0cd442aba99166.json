{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khanh\\\\workspace\\\\commeun\\\\frontend\\\\src\\\\components\\\\Post.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport DefaultImg from \"./default-user-avatar.png\";\nimport DeletePost from \"./DeletePost\";\nimport \"./Post.css\";\nimport Cookies from \"universal-cookie\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Button from \"@material-ui/core/Button\";\nimport { Card, CardHeader, CardContent, Avatar } from \"@material-ui/core\";\nimport BestAnswer from \"../components/BestAnswer\";\nconst cookies = new Cookies();\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: null\n    };\n\n    this.compareValues = (key, order = \"asc\") => {\n      return function innerSort(a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n          // property doesn't exist on either object\n          return 0;\n        }\n\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n        let comparison = 0;\n\n        if (varA > varB) {\n          comparison = 1;\n        } else if (varA < varB) {\n          comparison = -1;\n        }\n\n        return order === \"desc\" ? comparison * -1 : comparison;\n      };\n    };\n\n    this.getAnswerFromDb = () => {\n      // let url = \"http://localhost:4000/topics/\" + this.id;\n      // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\n      let url = \"/api/best_answer/\" + this.props.id;\n      let req = new Request(url, {\n        method: \"GET\",\n        cache: \"default\",\n        credentials: \"include\"\n      });\n      fetch(req).then(res => {\n        if (res.status === 401) {\n          console.log(\"answer n'a pas recu la meilleur rÃ©ponse].\");\n        } else {\n          // console.log(\"TopicView  a bien recu les topics.\");\n          return res.json();\n        }\n      }).then(answer => {\n        answer.sort(this.compareValues(\"likes\", \"desc\"));\n        this.setState({\n          answer: answer[0]\n        });\n      });\n    };\n\n    this.onClickLike = () => {\n      // fetch(\"https://testkhannea.herokuapp.com/likepost\", {\n      fetch(\"/api/likepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de like\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.onClickDislike = () => {\n      //     fetch(\"https://testkhannea.herokuapp.com/dislikepost\", {\n      fetch(\"/api/dislikepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de dislike\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.postTitle = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.props.user)), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.props.date)));\n    };\n\n    this.user = cookies.get(\"user\");\n  }\n\n  componentDidMount() {\n    this.getAnswerFromDb();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (nextProps.id !== this.props.id) {\n      this.getAnswerFromDb();\n    }\n  }\n\n  render() {\n    let newText = this.props.texte.split(\"\\n\").map((item, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, item));\n    let success = false;\n    let answer = this.state.answer;\n\n    if (this.props.likes > this.props.dislikes) {\n      success = true;\n    }\n\n    return React.createElement(Card, {\n      className: \"m-4\" // onClick={() => {\n      //   this.props.onMessageClick(this.props.id);\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"card-header border \" + (success ? \"bg-success\" : \"bg-secondary\"),\n      title: this.postTitle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"border-right col1st  col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Col, {\n      id: \"like_dislike_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"banniere\",\n      src: require(\"./like.png\"),\n      width: \"20px\",\n      height: \"20px\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.onClickLike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"\\xA0\", this.props.likes))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"banniere\",\n      src: require(\"./dislike.png\"),\n      width: \"20px\",\n      height: \"20px\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: this.onClickDislike,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\xA0\", this.props.dislikes))))), React.createElement(Hidden, {\n      smDown: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"defaultuser img mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: DefaultImg,\n      alt: \"Rien\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })))))), React.createElement(Col, {\n      id: \"post_content_wrapper\",\n      className: \"border-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, newText, this.props.user === localStorage.getItem(\"pseudo\") && React.createElement(Col, {\n      id: \"delete_wrapper\",\n      className: \"p-2 border-dark delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(DeletePost, {\n      id: this.props.id,\n      refresh: this.props.refresh,\n      editfunction: this.props.editfunction,\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })))), this.props.onMessageClick && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: () => {\n        this.props.onMessageClick(this.props.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"R\\xE9pondre\"), answer && React.createElement(BestAnswer, {\n      user: answer.user,\n      texte: answer.texte,\n      date: answer.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/khanh/workspace/commeun/frontend/src/components/Post.js"],"names":["React","Component","Row","Col","Image","DefaultImg","DeletePost","Cookies","Hidden","Button","Card","CardHeader","CardContent","Avatar","BestAnswer","cookies","Post","constructor","props","state","answer","compareValues","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","getAnswerFromDb","url","id","req","Request","method","cache","credentials","fetch","then","res","status","console","log","json","sort","setState","onClickLike","body","JSON","stringify","msgId","user","headers","response","refresh","catch","error","onClickDislike","postTitle","date","get","componentDidMount","componentDidUpdate","nextProps","render","newText","texte","split","map","item","i","success","likes","dislikes","require","cursor","localStorage","getItem","editfunction","onMessageClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport DefaultImg from \"./default-user-avatar.png\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport \"./Post.css\";\r\nimport Cookies from \"universal-cookie\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Card, CardHeader, CardContent, Avatar } from \"@material-ui/core\";\r\n\r\nimport BestAnswer from \"../components/BestAnswer\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    answer: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.user = cookies.get(\"user\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAnswerFromDb();\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (nextProps.id !== this.props.id) {\r\n      this.getAnswerFromDb();\r\n    }\r\n  }\r\n\r\n  compareValues = (key, order = \"asc\") => {\r\n    return function innerSort(a, b) {\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n        // property doesn't exist on either object\r\n        return 0;\r\n      }\r\n\r\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n\r\n      let comparison = 0;\r\n      if (varA > varB) {\r\n        comparison = 1;\r\n      } else if (varA < varB) {\r\n        comparison = -1;\r\n      }\r\n      return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n  };\r\n\r\n  getAnswerFromDb = () => {\r\n    // let url = \"http://localhost:4000/topics/\" + this.id;\r\n    // let url = \"https://testkhannea.herokuapp.com/topics/\" + this.id;\r\n    let url = \"/api/best_answer/\" + this.props.id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      cache: \"default\",\r\n      credentials: \"include\"\r\n    });\r\n    fetch(req)\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          console.log(\"answer n'a pas recu la meilleur rÃ©ponse].\");\r\n        } else {\r\n          // console.log(\"TopicView  a bien recu les topics.\");\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(answer => {\r\n        answer.sort(this.compareValues(\"likes\", \"desc\"));\r\n        this.setState({\r\n          answer: answer[0]\r\n        });\r\n      });\r\n  };\r\n\r\n  onClickLike = () => {\r\n    // fetch(\"https://testkhannea.herokuapp.com/likepost\", {\r\n    fetch(\"/api/likepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de like\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  onClickDislike = () => {\r\n    //     fetch(\"https://testkhannea.herokuapp.com/dislikepost\", {\r\n    fetch(\"/api/dislikepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de dislike\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  postTitle = () => {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <i>{this.props.user}</i>\r\n          </div>\r\n          <div className=\"col\">{this.props.date}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let newText = this.props.texte\r\n      .split(\"\\n\")\r\n      .map((item, i) => <p key={i}>{item}</p>);\r\n    let success = false;\r\n    let answer = this.state.answer;\r\n\r\n    if (this.props.likes > this.props.dislikes) {\r\n      success = true;\r\n    }\r\n\r\n    return (\r\n      <Card\r\n        className=\"m-4\"\r\n        // onClick={() => {\r\n        //   this.props.onMessageClick(this.props.id);\r\n        // }}\r\n      >\r\n        <CardHeader\r\n          className={\r\n            \"card-header border \" + (success ? \"bg-success\" : \"bg-secondary\")\r\n          }\r\n          title={this.postTitle()}\r\n        />\r\n        <CardContent>\r\n          <Row>\r\n            <Col className=\"border-right col1st  col-auto\">\r\n              <Row className=\"h-100\">\r\n                <Col id=\"like_dislike_wrapper\">\r\n                  <div>\r\n                    <div>\r\n                      <Col>\r\n                        <Image\r\n                          className=\"banniere\"\r\n                          src={require(\"./like.png\")}\r\n                          width=\"20px\"\r\n                          height=\"20px\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={this.onClickLike}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <b>&nbsp;{this.props.likes}</b>\r\n                      </Col>\r\n                    </div>\r\n                    <div>\r\n                      <Col>\r\n                        <Image\r\n                          className=\"banniere\"\r\n                          src={require(\"./dislike.png\")}\r\n                          width=\"20px\"\r\n                          height=\"20px\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                          onClick={this.onClickDislike}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <b>&nbsp;{this.props.dislikes}</b>\r\n                      </Col>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Hidden smDown implementation=\"css\">\r\n                  <Col>\r\n                    <div className=\"defaultuser img mx-auto\">\r\n                      <img src={DefaultImg} alt=\"Rien\" />\r\n                    </div>\r\n                  </Col>\r\n                </Hidden>\r\n              </Row>\r\n            </Col>\r\n            <Col id=\"post_content_wrapper\" className=\"border-dark\">\r\n              {newText}\r\n              {this.props.user === localStorage.getItem(\"pseudo\") && (\r\n                <Col id=\"delete_wrapper\" className=\"p-2 border-dark delete\">\r\n                  <DeletePost\r\n                    id={this.props.id}\r\n                    refresh={this.props.refresh}\r\n                    editfunction={this.props.editfunction}\r\n                    width=\"50%\"\r\n                  />\r\n                </Col>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          {this.props.onMessageClick && (\r\n            <Row>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  this.props.onMessageClick(this.props.id);\r\n                }}\r\n              >\r\n                RÃ©pondre\r\n              </Button>\r\n              {answer && (\r\n                <BestAnswer\r\n                  user={answer.user}\r\n                  texte={answer.texte}\r\n                  date={answer.date}\r\n                />\r\n              )}\r\n            </Row>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}