{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khanh\\\\workspace\\\\commeun\\\\frontend\\\\src\\\\components\\\\Post.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport DefaultImg from \"./default-user-avatar.png\";\nimport DeletePost from \"./DeletePost\";\nimport \"./Post.css\";\nimport Cookies from \"universal-cookie\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Button from \"@material-ui/core/Button\";\nimport { Card, CardHeader, CardContent, Avatar, Grid } from \"@material-ui/core\";\nimport BestAnswer from \"../components/BestAnswer\";\nconst cookies = new Cookies();\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: null\n    };\n\n    this.compareValues = (key, order = \"asc\") => {\n      return function innerSort(a, b) {\n        if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n          // property doesn't exist on either object\n          return 0;\n        }\n\n        const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n        const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n        let comparison = 0;\n\n        if (varA > varB) {\n          comparison = 1;\n        } else if (varA < varB) {\n          comparison = -1;\n        }\n\n        return order === \"desc\" ? comparison * -1 : comparison;\n      };\n    };\n\n    this.getAnswerFromDb = () => {\n      let url = \"/api/best_answer/\" + this.props.id;\n      let req = new Request(url, {\n        method: \"GET\",\n        cache: \"default\",\n        credentials: \"include\"\n      });\n      fetch(req).then(res => {\n        if (res.status === 401) {\n          console.log(\"answer n'a pas recu la meilleur rÃ©ponse].\");\n        } else {\n          return res.json();\n        }\n      }).then(answer => {\n        if (answer.length > 0) {\n          answer.sort(this.compareValues(\"likes\", \"desc\"));\n          this.setState({\n            answer: answer[0]\n          });\n        }\n      });\n    };\n\n    this.onClickLike = () => {\n      fetch(\"/api/likepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de like\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.onClickDislike = () => {\n      fetch(\"/api/dislikepost\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          msgId: this.props.id,\n          user: this.user\n        }),\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 401) {\n          console.log(\"Probleme de dislike\");\n        } else {\n          this.props.refresh();\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n\n    this.renderLikeDislike = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"banniere\",\n        src: require(\"./like.png\"),\n        width: \"20px\",\n        height: \"20px\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.onClickLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"\\xA0\", this.props.likes))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"banniere\",\n        src: require(\"./dislike.png\"),\n        width: \"20px\",\n        height: \"20px\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: this.onClickDislike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\xA0\", this.props.dislikes))));\n    };\n\n    this.user = cookies.get(\"user\");\n  }\n\n  componentDidMount() {\n    this.getAnswerFromDb();\n  }\n\n  componentDidUpdate(nextProps) {\n    if (nextProps.id !== this.props.id) {\n      this.getAnswerFromDb();\n    }\n  }\n\n  render() {\n    let texte = this.props.texte.split(\"\\n\").map((item, i) => React.createElement(\"p\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, item));\n    let success = false;\n    let answer = this.state.answer;\n\n    if (this.props.likes > this.props.dislikes) {\n      success = true;\n    }\n\n    return React.createElement(Card, {\n      className: \"m-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Col, {\n      id: \"avatar_wrapper\",\n      className: \"col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      src: \"/broken-image.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(Col, {\n      className: \"border-right col1st  col-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Col, {\n      id: \"like_dislike_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.renderLikeDislike()))), React.createElement(Col, {\n      id: \"post_content_wrapper\",\n      className: \"border-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: this.props.user + \" \" + this.props.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), texte, this.props.user === localStorage.getItem(\"pseudo\") && React.createElement(Col, {\n      id: \"delete_wrapper\",\n      className: \"p-2 border-dark delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(DeletePost, {\n      id: this.props.id,\n      refresh: this.props.refresh,\n      editfunction: this.props.editfunction,\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })))), this.props.onMessageClick && React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      classname: \"repondre_wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"small\",\n      onClick: () => {\n        this.props.onMessageClick(this.props.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"R\\xE9pondre\")), answer && React.createElement(Post, Object.assign({}, this.props, {\n      user: answer.user,\n      texte: answer.texte,\n      date: answer.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })) // && (\n    //   <BestAnswer\n    //     user={answer.user}\n    //     texte={answer.texte}\n    //     date={answer.date}\n    //   />\n    // )\n    )));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/khanh/workspace/commeun/frontend/src/components/Post.js"],"names":["React","Component","Row","Col","Image","DefaultImg","DeletePost","Cookies","Hidden","Button","Card","CardHeader","CardContent","Avatar","Grid","BestAnswer","cookies","Post","constructor","props","state","answer","compareValues","key","order","innerSort","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","getAnswerFromDb","url","id","req","Request","method","cache","credentials","fetch","then","res","status","console","log","json","length","sort","setState","onClickLike","body","JSON","stringify","msgId","user","headers","response","refresh","catch","error","onClickDislike","renderLikeDislike","require","cursor","likes","dislikes","get","componentDidMount","componentDidUpdate","nextProps","render","texte","split","map","item","i","success","date","localStorage","getItem","editfunction","onMessageClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport DefaultImg from \"./default-user-avatar.png\";\r\nimport DeletePost from \"./DeletePost\";\r\nimport \"./Post.css\";\r\nimport Cookies from \"universal-cookie\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Card, CardHeader, CardContent, Avatar, Grid } from \"@material-ui/core\";\r\n\r\nimport BestAnswer from \"../components/BestAnswer\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    answer: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.user = cookies.get(\"user\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAnswerFromDb();\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (nextProps.id !== this.props.id) {\r\n      this.getAnswerFromDb();\r\n    }\r\n  }\r\n\r\n  compareValues = (key, order = \"asc\") => {\r\n    return function innerSort(a, b) {\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n        // property doesn't exist on either object\r\n        return 0;\r\n      }\r\n\r\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n\r\n      let comparison = 0;\r\n      if (varA > varB) {\r\n        comparison = 1;\r\n      } else if (varA < varB) {\r\n        comparison = -1;\r\n      }\r\n      return order === \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n  };\r\n\r\n  getAnswerFromDb = () => {\r\n    let url = \"/api/best_answer/\" + this.props.id;\r\n    let req = new Request(url, {\r\n      method: \"GET\",\r\n      cache: \"default\",\r\n      credentials: \"include\"\r\n    });\r\n    fetch(req)\r\n      .then(res => {\r\n        if (res.status === 401) {\r\n          console.log(\"answer n'a pas recu la meilleur rÃ©ponse].\");\r\n        } else {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(answer => {\r\n        if (answer.length > 0) {\r\n          answer.sort(this.compareValues(\"likes\", \"desc\"));\r\n          this.setState({\r\n            answer: answer[0]\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  onClickLike = () => {\r\n    fetch(\"/api/likepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de like\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  onClickDislike = () => {\r\n    fetch(\"/api/dislikepost\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ msgId: this.props.id, user: this.user }),\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          console.log(\"Probleme de dislike\");\r\n        } else {\r\n          this.props.refresh();\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  renderLikeDislike = () => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Col>\r\n            <Image\r\n              className=\"banniere\"\r\n              src={require(\"./like.png\")}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={this.onClickLike}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <b>&nbsp;{this.props.likes}</b>\r\n          </Col>\r\n        </div>\r\n        <div>\r\n          <Col>\r\n            <Image\r\n              className=\"banniere\"\r\n              src={require(\"./dislike.png\")}\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={this.onClickDislike}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <b>&nbsp;{this.props.dislikes}</b>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let texte = this.props.texte\r\n      .split(\"\\n\")\r\n      .map((item, i) => <p key={i}>{item}</p>);\r\n    let success = false;\r\n    let answer = this.state.answer;\r\n\r\n    if (this.props.likes > this.props.dislikes) {\r\n      success = true;\r\n    }\r\n\r\n    return (\r\n      <Card className=\"m-4\">\r\n        <CardContent>\r\n          <Row>\r\n            <Col id=\"avatar_wrapper\" className=\"col-auto\">\r\n              <Avatar src=\"/broken-image.jpg\" />\r\n            </Col>\r\n            <Col className=\"border-right col1st  col-auto\">\r\n              <Row className=\"h-100\">\r\n                <Col id=\"like_dislike_wrapper\">{this.renderLikeDislike()}</Col>\r\n              </Row>\r\n            </Col>\r\n            <Col id=\"post_content_wrapper\" className=\"border-dark\">\r\n              <CardHeader title={this.props.user + \" \" + this.props.date} />\r\n              {texte}\r\n              {this.props.user === localStorage.getItem(\"pseudo\") && (\r\n                <Col id=\"delete_wrapper\" className=\"p-2 border-dark delete\">\r\n                  <DeletePost\r\n                    id={this.props.id}\r\n                    refresh={this.props.refresh}\r\n                    editfunction={this.props.editfunction}\r\n                    width=\"50%\"\r\n                  />\r\n                </Col>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          {this.props.onMessageClick && (\r\n            <Row>\r\n              <div classname=\"repondre_wrapper\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    this.props.onMessageClick(this.props.id);\r\n                  }}\r\n                >\r\n                  RÃ©pondre\r\n                </Button>\r\n              </div>\r\n              {answer && (\r\n                <Post\r\n                  {...this.props}\r\n                  user={answer.user}\r\n                  texte={answer.texte}\r\n                  date={answer.date}\r\n                />\r\n              )\r\n              // && (\r\n              //   <BestAnswer\r\n              //     user={answer.user}\r\n              //     texte={answer.texte}\r\n              //     date={answer.date}\r\n              //   />\r\n              // )\r\n              }\r\n            </Row>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}